%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: mlbook.dvi
%%Pages: 23
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o mlbook.ps mlbook
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1998.09.22:2004
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/setpagedevice{pop}N statusdict begin /letter{}N /lettertray{}N /legal{}
N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N /b5tray{}N
/showpage{}N /erasepage{}N /copypage{}N end /letter{}N /lettertray{}N
/legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N
/b5tray{}N /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N
/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4
copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip
newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /setpagedevice{pop}N statusdict begin /letter{}
N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N
/b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N end
/letter{}N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{
}N /b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N
newpath}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount
sub{end}repeat grestore SpecialSave restore end}N /@defspecial{SDict
begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np
{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (mlbook.dvi)
@start /Fa 14 117 df<B6FCA518057E9421>45 D<DB3FF01306913803FFFE021F9038
FFC00E913A7FF007E01E4948C7EAF83ED903FC143CD90FF0EC0E7ED91FC0EC07FE494814
0349C8120101FE15004848167E0003173E5B4848161E120FA24848160EA2485A1806127F
A349160012FFAB127F7F1806A2123FA26C7E180C6C7EA20007171C6C6C16186D16380001
17306C6C1660017F16E06D6CEC01C06D6CEC0380D90FF0EC0700D903FC141E6DB4147C90
3A007FF003F0021FB512C0020391C7FC9138003FF8373D7ABB44>67
D<B912E0A3C601C0C7FC6D48140FEF07F017011700A21870A21830A4183818181618A318
00A31638A21678ED03F891B5FCA3EC8003ED00781638A21618A21803A3180693C7FCA318
0EA2180C181CA3183C1878A218F81703170F496C147FB912F0A3383B7CBA40>69
D<B91280A3C69038C000016D48EB003FEF0FC017071703A21701A21700A418E01860A216
30A21800A41670A216F0150391B5FCA3EC800315001670A21630A693C8FCAEEBFFE0B612
F0A3333B7CBA3D>I<D907FE130C90383FFFC090B5EAF01C3A01FC01F83C3903E0003E48
48EB0F7C4848EB03FC48C71201003E1400167C5A163CA200FC151CA3160C7EA27E6C6C14
007F13F0EA3FFC381FFFE014FE6CEBFFE06C14FC6C806CECFF806C6C14C0011F14E00101
14F0D9001F13F814019138001FFC1507ED03FE1501ED00FF167F124012C0163FA37E163E
A27E167C7E6C15F87E6CEC01F0D8FBC0EB03E0D8F1F0EB0FC0D8F07FEB3F803AE03FFFFE
00D8C00713F89038007FE0283D7ABB35>83 D<EC0380A24A7EA34A7EA24A7E141BA2EC31
F8A3EC60FCA24A7E157EA249487EA2010380EC001FA201066D7EA2010E80010C1307A249
6D7E011FB5FC49809038300001A2496D7EA349147EA20001157F82120300071680D81FE0
EC7FC0D8FFF8903803FFFEA22F2D7DAC35>97 D<B612F815FF3A07F8001FC06C48EB07E0
ED01F86F7E163E163FEE1F80160F17C0160717E0A2EE03F0A317F8AA17F0A3160717E0A2
EE0FC01780161F1700163E5E4B5AED07F0486CEB1FC0B7C7FC15F82D2C7CAB36>100
D<B712F8A23907F800076C481300163CA2161C160CA482A2153093C7FCA31570A2EC01F0
90B5FCA2EBF001EC0070A21530A2EE0180A21500A2EE0300A45EA25EA25E167E486CEB03
FEB7FCA2292C7CAB30>I<B512C0A23807F8006C5AB3B3A2487EB512C0A2122C7CAB1A>
105 D<B512F0A2D807FCC8FCEA03F0B3A61630A416701660A316E0A2150115031507ED0F
C0486C137FB7FCA2242C7CAB2C>108 D<D8FFF0ED3FFC6D157F0007178000031700017C
15DFA26DEC019FA36DEC031FA26D6C1306A36D6C130CA26D6C1318A36D6C1330A26D6C13
60A3027C13C0A291383E0180A391381F0300A2EC0F86A3EC07CCA2EC03F8A3486C6C5AEA
0FC0486C6C48EB3F80D8FFFC913807FFFCA2362C7BAB40>I<D8FFF0903801FFF8A2D803
F89038003FC06DEC1F80017EEC0F0016067F6D7E6D7EA26D7E6D7E8013016D7E147E147F
80EC1F80EC0FC0A2EC07E0EC03F0EC01F8A2EC00FC157E153FA2ED1F86ED0FC6ED07E6A2
ED03F6ED01FEA21500167E163E487E486C141E486C140ED8FFFC1406A22D2C7CAB35>I<
EC3FE0903801FFFC90390FE03F8090391F0007C0017EEB03F001F8EB00F84848147C4848
800007153F4848EC1F8049140F001F16C0A248C8EA07E0A24816F0007E1503A200FE16F8
AA007E16F0007F1507A26C16E0A26D140F001F16C06C6CEC1F80A26C6CEC3F006C6C147E
6C6C5C6C6C495A017E495A90391F800FC090390FE03F80902603FFFEC7FC9038003FE02D
2E7BAC37>I<007FB712F0A29039001FE003007890380FC00000701670A20060163000E0
1638A2481618A5C71500B3A9EC3FF0011FB512E0A22D2C7DAB33>116
D E /Fb 1 51 df<EA03F0EA0C1CEA100700201380384003C0A2008013E012F0EAF801A3
EA2003120014C0A2EB07801400130E5B13185B5B5B485A90C7FC000213205A5A00181360
481340383FFFC05AB5FC13217EA018>50 D E /Fc 3 69 df<B712E0A323037B8F2E>0
D<903803FFF8131F137FD801FCC7FCEA03E0EA078048C8FC121E121C5AA25AA35AA3B612
F8A300E0C8FCA31270A37EA27E121E7E6C7EEA03E0EA01FC39007FFFF8131F13031D257B
A028>50 D<903803FFFE011FEBFFE0017F14F83A01C1F03FFC3A0601E003FE000CEC00FF
0018ED7F80D83803EC3FC00070151F00E0150F00C0ED07E000005BA216031307A25CA217
C0130F91C7FCEE0780A2491500011E5C160E5E5B5E5E4914605E4BC7FC49130615084913
300001EB01C0021FC8FC3803FFFC4813E04848C9FC2B297FA82E>68
D E /Fd 21 121 df<EB0FF0133FEBF800EA03E0EA078048C7FC5A123EA25AA2387FFF80
B5FC00F8C7FCA51278A21238123C121C6C1340380381803800FE00141A7E9918>15
D<127812FCA212FEA2127A1202A41204A31208A212101220124007127B8511>59
D<15021506150EA2151FA25D155FA2159FA2EC011F1402821404150F14081410A2142014
60144014808290380100075B91B5FC5B90380400075B5BA2498015035B5BA248C7FC5AD8
0F80497ED8FFF090387FFF8092B51200292A7EA92D>65 D<DA01FE134091391FFF80C091
387F01C1903901F80063D903E0EB1780D90F80130F49C7FC013E14074915005B48488048
5A000715025B120F485A93C7FC48CAFCA3127EA4127C12FCA3007C1520A35EA26C5D4BC7
FC6C5C15066C6C5B6C6C5BD803F013603900FC03C0D93FFFC8FCEB0FF82A2B7EA92B>67
D<013FB512F016FC903901F8003F4AEB0F80EE07C0EE03E0EE01F0495AEE00F8A3495A17
FCA3495AA449C812F81601A3013EEC03F0A217E016074915C0A2EE0F80EE1F005B163E5E
5E4848495AED07C0ED1F800003027EC7FCB612F815C02E297EA831>I<903B3FFFE07FFF
C0A2903B01F80003F0004A5CA44948495AA44948495AA4494849C7FCA449B512FEA291C7
123EA2013E5CA4495CA449495AA44848495AA300031407B50081B5FCA232297EA832>72
D<131FEB70C63801C02FEA03800007131EEA0F00121EA2003E5B123C127CA2485BA4485B
1540A3903801E080EA7003EA7804393808E100381C30733807C01C1A1A7E9920>97
D<EB0FE0EB3818EBE0043801C00E3803801E3807003E5A001E131C003E1300123C127CA2
5AA55AA21402007813041408003813306C1340380E03803803FC00171A7E991A>99
D<EB0FE0EB3830EBE0083803C00CEA0780EA0F00121E003E1318A2481370EB03C0387FFE
0000F8C7FCA700781302140400381308003C1330001C1340380603803801FC00171A7E99
1C>101 D<EB03E090380E18C090383805E013709038F003C0EA01E0EA03C0A20007EB07
801380120FA2391F000F00A4001E131EA45C000E137C000F13BC3807013C38038678EA00
F81300A25CA3495A127038F803C05CD8F00FC7FCEAE03CEA3FF01B267F991D>103
D<133CEA07FCA2EA007C1378A45BA4485AA43803C1F8EBC60EEBC80FEBF007EA07A001C0
13801380A2390F000F00A4001E131EA35C5A15101478A248EB702014F0EC704015804813
310060EB1E001C2A7DA922>I<131C133EA2133C13381300A9EA0780EA08E01210EA20F0
A21240A2EA41E012811201EA03C0A2EA0780A3EA0F00A21304121EA2EA1C08123CEA1C10
1320EA0C60EA07800F287EA715>I<1378EA07F8120F120013F0A4EA01E0A4EA03C0A4EA
0780A4EA0F00A4121EA45AA45A1340A3EAF080A21270EA71001231121E0D2A7EA912>
108 D<000F017F133F3B11818380C1C03B21C201C101E09039E400E600D841E813E401F0
01F813F0495BA23B83C001E001E01203A33B078003C003C0A3EE0780390F0007801782EE
0F02A2001E90390F000E04161EEE0E08171048011EEB06300018010CEB03C02F1A7E9934
>I<000F137E39118183803921C203C0EBEC01EA41E801F013E013E0A23983C003C01203
A33907800780A3EC0F00EA0F001504141EA2001EEB1C08143CEC1C10152048EB0C600018
EB07801E1A7E9924>I<EB0FE0EB3838EBE00C3801C00E48487ED8070013805A121E003E
14C0123C127CA248EB0F80A315005C48131E143E143C00785B5C383801E0381C0380D80E
0FC7FCEA03F81A1A7E991D>I<000F13F03811830C3821C41CEBE83C3841F07C13E01438
1400485A1203A3485AA448C7FCA4121EA45A1218161A7E991B>114
D<EB1FC0EB60203801C010EB800838030038481378A21430EB800013E013FE3803FF806C
13C07EEB0FE01301A2EA3800127C14C0EAF80100701380EA400338200700EA181CEA07F0
151A7D991C>I<13301378A25BA4485AA4B51280A23803C000A2485AA448C7FCA4121EA4
5A1302A25B12785BEA38101330EA1C40EA0F8011257EA416>I<380780073908E00F8012
10EA20F0A20040130714033841E001008114001201EA03C0A21402EA0780A25CEA0F00A2
5CA25C6C5BA2380380C0D801C1C7FCEA007E191A7E991D>118 D<90387C07C039018608
2039020310700004EBA0F0000813A114C10010EBC0E0150048485A1200A349C7FCA4131E
1540A200301480EA783E00F8EB0100134E00F0130638618708381E01F01C1A7E9922>
120 D E /Fe 2 51 df<1310137013F0120712FF12F81200B3AD487E387FFFE0A213287B
A71E>49 D<13FE3807FF80380E07E0381803F0382001F8130048137CA200F8137E7E143E
A30078137EC7FC147CA214F8A2EB01F014E0EB03C0EB07801400130E5B5B5B13605B3801
8002EA0300000613045A5A0010130C383FFFFC4813F8B5FCA217287DA71E>I
E /Ff 26 122 df<EE0FFE93387FFFC0923901F803E0923903C000704B4813784BC712F8
031EEB01FC033EEB03F8153C037CEB01F0EF00E04B1400A44A5AA54A5AA449B712805B7F
903B0007C0001F00A44A48133EA45F4AC7FCA35FA2143EA24C5AA35C4C5A1870A34A9038
07C0E0A4EFC1C0495A0403138017C3933801C700EE00FE4948147C94C7FCA25C1307A300
1C5BEA3E0F007E90CAFC12FE130EEAFC1EEAF81CEA70386C5AEA1FE0EA07C0364F83BC30
>12 D<EA03C0EA07E0EA0FF0A2EA1FF8A213F0120FEA07B0EA0030A21360A213C0A2EA01
80A2EA0300A212065A5A5A5A5A5A0D1A7A881A>44 D<131C137E13FFA25AA213FEEA00FC
13781300B3120E123FEA7F80A212FFA21300127E123C102577A41A>58
D<17E01601A24C7EA21607A2160F161FA2163FA21677A216E7150116C7ED038783ED0703
A2150E151E151C1538A21570A215E0140115C014031580DA07007FA2020E1301A25C143C
023FB5FC5CA29138E00001A2495A13035C49C7FC83130E16005B133C1338137813F81201
D807FCEC03FF267FFF80017F13F8B56C90B512FC4A6D13F8363D7BBC40>65
D<49B7FC4916E06D82903B0007F80007FC0203EC01FE4A48EB007FF03F80F01FC0180F4A
4815E0180719F018034A5A19F8A34A5AA44AC8FCA402FE1507A4494816F0180FA3494816
E0181F19C0A24948153F1980187F1900494815FEA24D5A60494814034D5A4D5A6049484A
5A057FC7FC17FE4C5A49C7EA07F0EE1FE049ECFF80007F90B548C8FCB712F86C15803D3B
7BBA41>68 D<49B812805B7F903A0007F800010203EC003F4A48141F180FA2F007004A5A
A44A5AA2180EA24A5AEE01C0A295C7FC4A48485AA3160702FE91C8FC5E163F91B6FC495C
A29138FC007E163E4948131CA449485BA31630494890C9FCA4495AA4495AA449CBFCA249
7E007FEBFF80B6FC7E393B7BBA38>70 D<49B5D8F807B512E0495D6D8190260007FCC738
1FF0006E486E5A4A484A5AA44A484A5AA44A484AC7FCA44A4814FEA44AC7485AA402FE4A
5AA291B7FCA2495E02FCC71207A349484A5AA449484A5AA449484A5AA449484AC8FCA449
4814FEA449C7485AA2491403007FD9FE01B512F8B55B6C80433B7BBA40>72
D<92383FC002913901FFF8074AEBFC0E91390FC03F1E91381F000F023CEB03BE4AEB01FC
5C49481300495A010715F85C010F1578A249C81270A317F017E06E14601700A28014F014
FE90380FFFC015F86D13FF6D14C06D806D6C7F021F7F02037FEC003FED07FE1501150016
7FA282A20006153E120EA4001E5DA2167816F8003E5D003F4A5A15036D5C007F4A5AD87D
C0011FC7FCD879F0133E39707E01F839F03FFFF0D8E00F13C026C001FEC8FC303D7ABB30
>83 D<48B812F85AA2903AFC003F8007D807F0150101C049C7FC49167848C7FC000E1770
001E14FE121CA25A4A5AA24817E0A24A5A5AA2C716004A5AA44A5AA44A5AA44A5AA44AC9
FCA414FEA4495AA4495AA4495AA2EB1FF8003FB512FC48805D353B71BA3E>I<B5D8F003
B539C007FFFC6E485D4A6C4A6C13F8D807FEC7D81FF0C713C0D803F803C0EC3F001A3CA2
1A3862A262163F4F5A167F71495A04FF140704EF92C7FCDB01CF140EA2DB038F5C150704
0F5C6D130E000160151C610338140161037014036103E04AC8FC140103C0140E14030380
5CEC070060140E715A4A15F004075B4AECF1C0A24AECF38014F04A02F7C9FCEBFFC06C16
FE5C5F91C7FC5F5B5F495DA2495DA2495D5B4E3C6EBA56>87 D<147CEB03FF90380F8386
90381F01CF90383C00FF5B01F87F485A4848137E120749133E120F001F5C5B123FA290C7
5A5AA300FE495AA448495A1670A3913807C0E0140F127C141F91383FC1C0003C1377003E
01E31380391E01C3C33A0F0781C7003903FE00FED800F8137C242777A52C>97
D<EC3F80903801FFF0903807E07890380F801C90381E000E137C49133E0001147E484813
FE5B000714FC4848137C153048481300123FA290C8FC5AA312FEA55AA31504007C140E15
1C007E143C003E1478001E14E0001FEB03C06CEB0F803907C07E003801FFF838007F801F
2777A528>99 D<167CED1FFEED3FFC151F1500A216F8A4ED01F0A4ED03E0A4ED07C0A491
387C0F80EB03FF90380F838F90381F01CF90393C00FF005B01F87F485A4848137E120749
133E120F001F5C5B123FA290C75A5AA300FE495AA448495A1670A3913807C0E0140F127C
141F91383FC1C0003C1377003E01E31380391E01C3C33A0F0781C7003903FE00FED800F8
137C273D77BB2C>I<EC3F80903801FFE0903807E07090381F803890383E001C5B5B485A
1203485A485A1538001F14784913F0003FEB03E0EC3F80397FFFFE0014E090C8FCA2127E
12FEA5127EA21504150E151C003E143C15786C14E06CEB03C03907800F803903C07E0038
01FFF838007F801F2777A528>I<EC07E0EC1FF891387C1C309138F80E78903901E007F8
903803C0031307EB0F80D91F0013F0491301137EA201FEEB03E05B1201A24848EB07C0A4
4848EB0F80A4ED1F005BA25D153E0003147E15FEA26C6C485A0000EB037CEB780EEB3C3C
90381FF8F8EB07E090C7FCA24A5AA44A5AA2001C5C007E13074A5A00FE91C7FC141E485B
007813F8387C03F0381FFFC0D807FEC8FC25387CA528>103 D<14E0EB01F0EB03F8EB07
F0A2EB03E0EB01C090C7FCAC13F8487EEA030EEA060F120C001C1380121812381400485A
A3EAE03EA2C65AA35BA3485AA3485AA23807C070A3380F80E0A3EB01C0A2EB038014005B
EA070EEA03FCEA01F0153A79B81A>105 D<EB03E0EBFFF0485B7E1307A25CA4495AA449
C8FCA4133EA449EB07C0ED1FE0ED7870EDE0F89038F80181EC03031406020C13F03801F0
1891383001C04AC7FC5CEA03E1EBE38001E6C8FC13FC485AEBFF80EBDFE0EBC1F0380F80
F8143C143E80EA1F0016E0A3003E90383E01C0A3ED03805A141EED0700EC0E06486D5AEC
03F800706D5A253D7ABB28>107 D<D803E001FEEB03F83C07F003FF800FFE3C0E380F83
C03E0F3D1C3C1C01E0700780903C1E3800F0E003C0003849EBF1C04AEBF380D93FC0D9FF
0013E00070495BA291C75A013E5CD8E07E0101EC07C0A2D8007C5CA2494948EB0F80A3F0
1F004848495AA2183EA24848495AF07C07A3484849C7EAF80EA3F0F01C4848133E191819
38197048C748EC70E0F03FC0000E0238EC1F00402779A546>109
D<D803E013FE3A07F003FF803A0E380F83C03A1C3C1C01E06D486C7E00385B5CD93FC07F
00705BA291C7FC133ED8E07E495AA2EA007CA249495AA34B5A485AA24B5AA2485A92381F
01C0A3484890383E0380A392383C0700485A16065E161C48C7EA1C38ED0FF0000EEC07C0
2A2779A530>I<EC3F80903801FFE0903807E0F890380F803C90383E001E49131F5B0001
EC0F80485A4914C01207485AA2485A123FA290C7121F5AA300FEEC3F80A316005D48147E
15FE5D5D007C13014A5A007E5C003E495A4A5A6C49C7FC6C137C3807C1F83801FFE06C6C
C8FC222777A52C>I<90390F8007E090391FC01FF8903938E0783C903970F0E01E913879
C01F9039E07B800FDA7F00138014FE48484814C0A25CA2380381F0A2EA0001A24948131F
A44948EB3F80A3170049485B167EA25E131F4B5A5E4B5A013F5C6E485A013E49C7FCECE0
1E90387C707CEC3FF0EC0FC091C9FC5BA4485AA4485AA31207B57EA32A377FA52C>I<39
03E001F83907F00FFE3A0E381E0780381C3C3890391E700FC00038EBE01FEB1FC0D93F80
138012709138000E0092C7FC133EEAE07E137C1200A25BA4485AA4485AA4485AA4485AA4
48C9FCA2120E222779A524>114 D<14FF010313C090380F81E090381C00704913381378
0170137801F013F8EBE001120115F0EC00E06D1300A213FEEBFFE06C13FC6D7E6D7E6D13
80010313C0EB003FEC0FE014071403121C123E127E00FE14C0A248148048130700E01400
0070130E5C6C5B381F01F03807FFC0D801FEC7FC1D277AA523>I<EB0380EB07C0A3EB0F
80A4EB1F00A4133EA45B007FB5FCB6FC14FE3800F800A4485AA4485AA4485AA4485AA448
C7FC141CA21438123E1430147014E0A2EB01C0381E0380EB0700EA0E0EEA07FCEA01F018
3778B51D>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E0
38701F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133E1607A3ED7C0E
A315FC0201131C12019138033C182600F00613389039783C1C7090393FF80FE090390FE0
07C0282779A52E>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238
ED03E038701F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133EA45DA3
15FC4A5A120114033800F0069038783DF0EB3FF9EB0FE1EB00014A5AA25D001C1307003E
5C007F130F92C7FC007E131E143E0078133C00705B5C383803C0381C0F80D80FFEC8FCEA
03F8253879A52A>121 D E /Fg 40 123 df<EC0380EC1FFE91383FFFC0027113E0ECC0
3F903801801FED0FC00103EB038092C7FCA280A213018080A26D7EA280147E147F80816E
7EA2ECFFE001037FEB0F8790381F07F8EB3C031378496C7EEA01E01203EA07C0000F1300
5B121F48C7FCA2123E127EA3485CA21401A25DA214035DA2007C495AA2003C5C003E49C7
FC001E131E6C131C6C6C5A3803E0F0C6B45AEB3F80233F7DBD26>14
D<EC7FE0903803FFF0010F13E090383FC000017EC7FC485AEA03F0485A485AA2485A123F
90C8FC5AA2B6FCA25C48C8FC5AA9127C127E123E121E121F6C6C13C03907C003803901F0
1F003800FFFCEB1FE01C267CA423>I<121C123E127FEAFF80A3EA7F00123E121C090979
8818>58 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A21206A2
5A5AA25A12200A1A798818>I<1860EF01F01707171FEF7FE0933801FF00EE07FCEE1FF0
EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FC
EB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38
007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07
FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0EF1FF017071701EF0060343479
AF43>I<1506150FA2151F151EA2153E153CA2157C1578A215F815F0A2140115E0A21403
15C0A214071580A2140F1500A25C141EA2143E143CA2147C1478A214F85CA213015CA213
035C13075CA2130F91C7FCA25B131EA2133E133CA2137C1378A213F85BA212015BA21203
5BA212075BA2120F90C8FCA25A121EA2123E123CA2127C1278A212F85AA2126020577BC0
2B>I<124012F812FE6C7EEA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF
80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE
03FE933800FF80EF3FE0EF0FF0A2EF3FE0EFFF80933803FE00EE0FF8EE3FE0EEFF80DB03
FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3F
E0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC12F81260343479AF43>I<17181738
173C177C17FCA21601A216031607A2160D831618163816301660A216C0150116804B487E
A203067F150E150C5DA25D157015604B80A24A48133F140392C7FC1406A2020FB6FC5CA2
0230C7EA3FC0A24A141F14E05C495AA249C8FC1306A24982170F5B1338137813F8D807FC
ED3FF0267FFFC0010FB512C0B517E06C4916C03B3D7DBC41>65 D<DC7FC01320922607FF
F81370033F01FE13E09238FFC01F913A03FC000781DA0FF0EB01C3DA1FC0903800E7C002
7FC8127F02FE153FEB01F84948ED1F80495A4948150F495A013F170049C9FC13FE844848
1606485AA20007170E4848160C1804484893C7FCA3485AA3485AA590CCFC5AA2184018C0
7E4D5AA34DC7FC7E6D15065F121F6D5D000F5E6C6C5D6D4A5A00034B5A6C6C4AC8FCD800
FE141ED97F8013F890391FF007F00107B512C0010149C9FC9038003FF03C3D7CBB3E>67
D<0103B77E18F818FE903B0007F80003FF02039138007F804A48EC1FC0F00FE0F007F0F0
03F84A48140119FC180019FE4A48157EA2197FA24A5AA44AC9FCA402FE16FFA4494816FE
1801A3494816FC180319F8A24948150719F0F00FE0A24948ED1FC0A2F03F80F07F004948
157E18FE4D5A4D5A49484A5A4D5AEF1F80057FC7FC49C7EA01FEEE07F849EC3FE0B81280
4CC8FC16E0403B7CBA47>I<0103B812F8A390260007F8C7121F18014B14001978A21970
4A481530A44A5AA21960A24A4813101730A219004AC75AA217E0A202FE495A160F91B6FC
A2495D9138FC000F16071603494891C8FCA31980494801061301A2F0030093C7FC49485D
1806180E180C4948151C1818183818304948157018F04D5A170349C8EA0FC0173F499138
03FF80B9FC95C7FCA23D3B7CBA40>I<0103B5D8FC01B512FEA390260007FCC73803FE00
4B5D4B5DA44A484A5AA44A484A5AA44A484A5AA44AC8485AA402FE4BC7FCA291B8FCA249
5E02FCC8FCA349484A5AA449484A5AA449484A5AA449484A5AA449484A5AA449C8485AA2
49157FB6017FB57EA3473B7CBA48>72 D<0103B6FCA390260007FCC8FC6E5A4A5AA44A5A
A44A5AA44A5AA44AC9FCA414FEA4495AA4495AA4494815C0A3EF0180495AA2EF0300A249
485C1706170E171E4948141C173C177C5F49C71203EE0FF04914FFB8FC5FA2323B7CBA3B
>76 D<902603FFFC933803FFF86262D90007F0F800F21BF0DA067E4C5AA21A671AC7020C
EFCFC0F1018FF1030FA24A6C9238061F80190CA2191802304DC7FC193019606F7E0260EE
C07EF00180A2F0030002C003065BA26F6C5BA2D901804B485A1830A21860D903004B485A
6F7EEF0180EF030001064D5A17065FA2496D6C48495AA25F5F494D5A5FEEF180ED01F949
02FBC748C8FC16FEA201705C197E01F05CD807FC6D4814FEB500E092B512FE5E5E553B7C
BA54>I<EEFFC0030F13F892387F00FEDA01F8EB1F80DA07E0EB07C0DA0F80EB03F0023F
C76C7E027E140002F881D903F0157E495A494881131F4948168091C9121F137E01FE17C0
485AA2485A12075B120F5B121F183F5B123FA34848EE7F80A318FF190048CAFC4D5AA260
17036017076C5F170F604D5A6D4B5A003F4CC7FCA2001F16FE6D4A5A000FED03F06D4A5A
00074B5A6C6CEC3F806C6C027EC8FC6C6C495A013FEB07F090391FE03F80902607FFFEC9
FC9038007FE03A3D7CBB42>79 D<0103B77E18F018FC903B0007F80003FE9438007F804B
143FF01FC0F00FE0A24A4815F0A44A5AA44A48EC1FE0A219C0183F4AC81380F07F0018FE
4D5A02FE4A5A4D5AEF1FC005FFC7FC49B612FC17E002FCCAFCA2495AA4495AA4495AA449
5AA4495AA449CBFCA25BB6FCA33C3B7CBA37>I<DB1FE013809239FFFC01C002039038FF
038091390FE01F8391391F0003C7023EEB00EF0278EC7F004A80495A4948800107151E5C
130FA249C8120CA3171C17186E140894C7FC80808014FF6D13E06D13FEEDFFC06D14F06D
806D6C7F021F7F02017FEC003F03037FED007F163F161F83A2160F00045E120CA4001C4B
C7FCA2161E163E003C153C003E5D5E003F1401486C495AD87DC0495AD878F0011FC8FCD8
707F137E486CB45AD8C00F13F001001380323D7BBB35>83 D<48B912805AA2903BFC000F
E0007FD807E0160F01804948130790C7FC000E17031900484A5A1218A2123800304AC7FC
A2481706A215FE5AA2C892C7FC4A5AA44A5AA44A5AA44A5AA44A5AA44A5AA44ACAFCA414
FEA4495AA2EB07FE001FB67E48815E393B7EBA32>I<267FFFFC91380FFFF0B56C4A13F8
4A6E13F0000190C80001130049ED00F8606000005F1701604DC7FC5F17066D5D7F5F5FA2
5F17E06E5C4C5A133F4CC8FC1606A25E6E5BA2011F5C167016605EA24B5A6E48C9FCA201
0F13065DA25D1538ECF0305D13075DECF180A202F3CAFC14FEA26D5AA25C5CA25C5CA26D
5A3D3C7BBA32>86 D<267FFFF890267FFFFC90381FFFE0B56C90B54A13F04A6D4915E000
0390C7000390C73803FE0001FCDA01FCEC00F86363000162A2505A0403150398C7FC0407
1506160D621619715C043015381A3004605D6D14E004C05D0000EC01804F5ADB03001403
97C8FC03061506150E030C5D5D614B7F715B4B5D15E06D495D4A5A017F4C5A4AC7FC4EC9
FC02065D18064A5D5C605C18B04AEC3FF0604A5DA24A5D6DC8FC95CAFC133E173E013C15
3CA2013815381330543C7BBA51>I<91B500FC90380FFFFC704913FE4C15FC020301C001
031380020090C73801FC00F000F0F001C06F6C5C4EC7FC6F6C130660031F141C705B606F
6C5B4D5A0307495A04F890C8FC17066F6C5A5F6F6C5A5F03005B705AA2167FA2163F8316
7F8316DF9238018FF0ED030FED0607030C7F15184B6C7E1560EDE001DA01C07FEC03804A
C77E140E4A6E7E14184A143F4A815C49486E7E49C8FC49150F011F82137F2603FF80EC3F
F8007F01F00103B512F0B55C6C81473B7EBA47>I<147E49B47E903907C1C38090391F00
67C0013E136F49133F5B4848131F00031580485AA2485A001FEC3F005B123FA290C7127E
5AA300FE5CA44A5A481506A3913803F00CA2127C02071318140F6C131B001E013113306C
01E11360260783C013E03A03FF007FC0D800FCEB1F0027277DA52D>97
D<EC1FE0ECFFF8903803F01C90380FC00649C67E013E131F495B495B48485B485A120748
48137E153C001F91C7FC485AA290C9FC5AA312FEA65AA21680007C1401007EEC0300003E
14065D6C14386C14F039078003C02603E01FC7FC3800FFFCEB3FE021277DA525>99
D<163F92380FFF804B130081ED007FA2167EA45EA44B5AA44B5AA491387E07E0903801FF
87903807C1C790381F0067013EEB6FC049133F5B4848131F00035D485AA2485A001F4AC7
FC5B123FA290C7127E5AA300FE5CA44A5A481506A34A485AA2127C02075B140F6C131B00
1E01315B6C01E15B260783C013E03A03FF007FC0D800FC011FC7FC293D7DBB2D>I<EC1F
E0ECFFF8903807F03C90380F800E90383F0007137C5B485A1203485A120F49130E121F49
133C003F14F0EC0FE048B5128002F8C7FC90C9FCA2127E12FEA4127EA316801501003EEC
030015066C5C15386C6C13F00007EB03C02603E01FC7FC3800FFFCEB3FE021277DA528>
I<EC03F0EC1FFC91383E0E1C9138F8033E903901F001FEEB03E0903807C000495A011F14
FC49C7FCA2137E01FEEB01F85B1201A249EB03F01203A34848EB07E0A4ED0FC05BA30003
EC1F80A2153F6C6C137FEDFF000000EB01BF903878033FEB3C1E90381FFC7EEB07E090C7
FCA25DA44A5A121E003F5C48130348495A5D4A5A4849C7FC0078137E383C01F8381FFFE0
000390C8FC27387FA529>103 D<EB03F0EBFFF8485B7E1307A25CA4495AA4495AA449C9
FCA490387E03FCEC0FFF91383C0F8091387007C09039FCC003E0EBFD80EBFF004980485A
A25B5E48481307A44848495AA34B5A485AA24BC7FCA2485A037E13C0A348C738FC0180A2
EE030015F8007E1506A25EED7818481570007CEC3FE00038EC0F802A3D7CBB32>I<1470
14F8EB01FC1303A214F8EB01F0EB00E01400AC137CEA01FEEA038738060780000C13C012
18A2EA300FA21260EB1F80A212C0EB3F001200A2137EA25BA3485AA3485A140CA2EA07E0
1418EA0FC01430A214601380000713C0EB81803803C300EA01FEEA007C163B7EB91E>I<
ED0780ED0FC0151F16E0ED3FC0151F1680ED0F0092C7FCACEC07C0EC1FF0EC7878ECE07C
903801803C903803003EA20106137E5BA25BA2495BA290C7FCA24A5AA44A5AA44A5AA44A
5AA44A5AA44AC7FCA4147EA45C121E003F5BEA7F0100FF5B495A495A48485AD8781FC8FC
EA307EEA1FF8EA0FC0234C81B923>I<EB0FC03803FFE014C0A2EA001FA21480A4EB3F00
A4137EA45BA4485AA4485AA4485AA4485AA4485AA448C7FCA4127E1303A3EAFC06A35BA3
EA7C18A2EA3C30EA1FE0EA07C0133D7CBB1A>108 D<D801F0D91FC0EB3FC0D803FCD9FF
F0EBFFF03D061E01E07C03C0F83D0C1F07003E07007C26180F0E020C7F02986D5A003001
B05CD91FE002E0133F5F00605B4A5C193E4848C748C7127EA21200A2017E027E5CA34E5A
495CA24E5AA24848495A953807E00CA34848494890380FC018A21A301980484849481560
A21AC0953807818048484948EC870000070207EC03FE6C486D48EB00F846277EA54C>I<
D801F0EB3FC0D803FCEBFFF03A061E03C0F83A0C1F07007C26180F0C7F1498003013B0D9
1FE0133F5C12605C163E4848C7127EA21200A2017E5CA34B5A5BA24B5AA2485A923807E0
0CA3484890380FC018A21730168048481560A217C092380781804848EC87000007EC03FE
6C48EB00F82E277EA534>I<EC1FE0ECFFFC903803F03E90380FC00F90391F000780013E
EB03C04914E04914F0484813011203484814F8485AA2121F5B003F140390C7FC5AA300FE
EC07F0A3ED0FE0A216C048141F1680007CEC3F00007E143E157E003E5C5D6CEB03E06C49
5A6C6C485A2603E07EC7FC3800FFF8EB3FC025277DA52A>I<90390F8003F090391FE00F
FC903930F03C1F903A60F87007809038C078C091397D8003C02701807F0013E014FE17F0
48485AA3380601F8A21200A249481307A44948EB0FE0A317C04948131F1780A2EE3F0049
5A167E167C5E496C485A5E91386003C0ED0F8090267E383FC7FCEC1FFCEC07E091C9FC5B
A4485AA4485AA31207B512C0A32C3783A52B>I<D801F0137E3903FC03FF3A061E078180
3A0C1F0C03C03A180F180FE0ECB01F003013E0131F02C013C0006001801380ED0F0092C7
FC4848C8FCA21200A2137EA45BA4485AA4485AA4485AA4485A12076C5A23277EA527>
114 D<EC7F80903801FFE0903807C07090380E001849130C133C0138137C017813FCEB70
0113F0A29038F800F815606D1300EBFF8014FC14FF6D13806D13C06D13E0010713F0EB00
7FEC07F814011400121E123F5A4814F0A24814E04813014814C00060EB03800070EB0700
6C131E000F137C3807FFF0C613801E277CA528>I<EB01C0497E1307A2495AA4495AA449
C7FCA4137E007FB51280B6FC1500D800FCC7FCA4485AA4485AA4485AA4485AA4485A1406
A25CEA3F005CA25CA25C6C5B495AD80F07C7FCEA07FEEA01F819377DB51F>I<D903F013
FC90390FFC01FF903A3C1E0303809026700F0613C0903AC0078C0FE0D80180EBD81FD803
0013F0A2000602E013C0178048ED0F0093C7FC48495AA2C7FCA24A5AA44AC8FCA4147E16
03A3001E491306123FD87F805C1381D8FF015CD9033C5B007E013E5B267C061E5B3A381C
0F0780271FF807FFC7FC3907E001F82B277EA531>120 D<137C48B4141C26038780133E
260607C0133F000C157E801218123016FC48485AA33AC01F8001F8A21200EB3F00ED03F0
137EA349EB07E0A44848EB0FC0A4ED1F80A4ED3F0000005C5D90387C01BF90383E077EEB
0FFEEB03F890C7FC5DA25D380F8001D81FC05B003F13035D49485A4A5A010090C7FC0030
131E5C6C13F8380E03E03807FF80D801FEC8FC28387EA52A>I<D903E01320496C136049
6C13C0497E90393FFE018090397FFF03009038F81FFEEBE0033901C0000C495B5DC85A5D
4A5A4AC7FC14065C5C5C5C495A495A0106C8FC5B5B4913035B495B4848130648C7120E00
065CD807FC137C390FFF81F8391C0FFFF0486C5BD830035B00605C486C90C7FCEB007C23
277CA528>I E /Fh 31 124 df<913801FFC0023F13F891B57E0103EB807E90390FFC00
0FD91FF0EB3F804948497E494813FF13FF5C5AA3705A70C7FC93C8FCA692381FFFE0B8FC
A40001903880007FB3AC007FD9FE1FB51280A4313C7EBB37>12 D<B612C0A81A087F9621
>45 D<EA0F80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F80C7FCACEA0F
80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F800D2679A51B>58
D<ED01F8A24B7EA24B7EA34B7EA24B7FA34B7FA24B7F157DA203F97F15F8020180EDF07F
020380EDE03FA2020780EDC01F020F804B7EA2021F814B7E4A81023E7F027E81147C8202
FC814A7F01018291B7FCA24982A2D907E0C7EA3FFE4A141FA2010F824A80011F8391C87E
4983133E83017E8301FE81B500FC49B612F0A4443B7DBA4B>65 D<DB1FFF14304AB500E0
13F0020FECFC01027FECFE03903B01FFFE007F874901E0EB0FCF010F90C7EA03FFD91FFC
804948EC007F4948153FEBFFC048171F4849150F4890C9FC4817075B001F1703A2485A18
01A2127F5B95C7FCA212FFAB127FA36D17F0123FA36C7EF001E0120F7F6CEF03C06C7F6C
6DED07806C6DED0F006D6C5D6D6C153E6D6C5D6DB44A5A010301E0EB07F06D01FEEB3FC0
6D6CB6C7FC020F14FC020114F0DA001F90C8FC3C3D7BBB47>67 D<B812C017FCEFFF8018
E028007FF8000313F89338003FFEEF0FFF717F05017F717F727E727EA2727EA2727EA285
84A21A80A41AC0AC1A80A41A0060A261181F61183F614E5A4E5A4D5B4D5B050F90C7FCEF
3FFE933803FFF8B95A18804DC8FC17C0423B7CBA4C>I<DB1FFF14304AB500E013F0020F
ECFC01027FECFE03903B01FFFE007F874901E0EB0FCF010F90C7EA03FFD91FFC804948EC
007F4948153FEBFFC048171F4849150F4890C9FC4817075B001F1703A2485A1801A2127F
5B95C8FCA212FFAA040FB612E0127FA27F93C7EBF000123FA36C7EA2120F7F7E6C7F6C7F
6C7F6D7E6D6C5CEB1FFE6D6C6C5B010301E0130F6D01FEEB7FCF6D6CB61203020FECFE00
020102F81330DA001F018090C7FC433D7BBB4E>71 D<B87E17F817FF18C028007FF80007
13F004007FEF3FFC717E717EA2711380A319C0A71980A34D130060171F4D5AEFFFF00407
5B91B712804DC7FC17F002F8CAFCB3A5B612FCA43A3B7CBA44>80
D<003FB912C0A4D9F800EBF001D87FC09238003FE049161F90C7150F007E1707007C1703
A300781701A448EF00F0A5C81600B3AF011FB77EA43C3A7CB945>84
D<B600F091387FFFFCA4C601F8C83801FC00017F705A6E1501013F5F801803011F5F6E15
076D5F6F140F6D5F6F141FA26D6D92C7FC606D163E6F147E6D167C6F14FC027F5D811701
6E6C5C1703021F5D6F13076E5DEE800F6E5D16C0171F6E92C8FC705A6E143EEEF07E6E14
7CEEF8FC037F5B16FC16FD033F5B16FF6F5BA26F5BA26F5BA36F90C9FCA26F5AA26F5AA2
463B7EBA4B>86 D<90381FFF8048B512F04814FC3907F003FF486CC67F486C6D7E6F7E82
151F6C4880A26C5AEA01C0C8FCA391B5FC130F90387FFC1F3801FFC03807FE00485AEA1F
F0123F485AA2485AA4153F6C7E156F3A3FF001CFFC3B1FFC0787FFF00007B512070001EB
FC033A003FF0007F2C267DA530>97 D<13FFB5FCA412077EB04AB47E020F13F0023F13FC
9138FE03FFDAF000138002C0EB3FC04AEB1FE091C713F0EE0FF817FCA2EE07FEA317FFA9
17FEA317FC160F17F8A2EE1FF06EEB3FE06EEB7FC0D9FDF0EBFF809026F8FC0713009039
F03FFFFCD9E00F13F0D9C00390C7FC303C7DBB37>I<ECFFF0010F13FF013F14809039FF
C01FC0489038003FE0D803FCEB7FF01207485A485AED3FE0123FED1FC04848EB070092C7
FCA212FFA8127FA27F123FA2001F15787F000F15F06C7E6C6CEB01E03A01FF8007C06C90
38E01F80013FB51200010F13FC010013C025267DA52C>I<EE3FC0ED3FFFA4150181B0EC
FFC0010F13F8013F13FE9038FFE03F48EB000F4848130348487F48487F485AA2123F5B12
7FA312FFA9127FA36C7EA2121F6C6C5B00075C6C6C5B6CB44913E06CD9C07E13FF90383F
FFFC010F13F001011380303C7DBB37>I<49B47E010F13F8013F13FE9038FF80FF3A01FE
003F80D807FCEB1FC04848EB0FE016F048481307003F15F8A2485AED03FCA312FF90B6FC
A301E0C8FCA4127FA3123F6D143C121FA26C6C14786C6C14F86C6CEB01F06C6CEB07E06C
9038C03FC0013FB51200010713FC010013E026267DA52D>I<13FFB5FCA412077EB0ED7F
C0913801FFF802077F91380F03FE91381C01FF023014804A7E02E014C05C5CA391C7FCB3
A4B5D8FC3F13FFA4303C7CBB37>104 D<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01
F0C8FCAA13FF127FA412077EB3AAB512F8A4153D7DBC1B>I<13FFB5FCA412077EB09238
07FFFCA4923800FE004B5AED03F04B5A4B5A033FC7FC157E5DEC03F8EC07E0140F4A7E14
7F4A7E8181ECCFFF148702037F496C7F6E7F82157F6F7E6F7E6F7E82816F138017C0B5D8
F80F13FFA4303C7EBB34>107 D<13FFB5FCA412077EB3B3AEB512FCA4163C7DBB1B>I<01
FED93FE0EB07FC00FF902601FFFC90383FFF8002076D90B57E913C0F81FF01F03FE0DA1C
00903983801FF0000749DAC7007F00030160D97FCC130F02E002FC804A5C6D485CA391C7
5BB3A4B5D8FC1FB50083B512F0A44C267CA553>I<01FEEB7FC000FF903801FFF802077F
91380F03FE91381C01FF0007013014800003497E02E014C05C6D5AA391C7FCB3A4B5D8FC
3F13FFA430267CA537>I<ECFFC0010F13FC013F13FFD9FFC013C03A01FE001FE0D807FC
EB0FF849130748486D7E001F81003F81497F007F1680A400FF16C0A9007F1680A36C6C49
1300A2001F5D6C6C495AA26C6C495A6C6C495A3A00FFC0FFC0013FB5C7FC010F13FC0101
13E02A267DA531>I<9039FF01FF80B5000F13F0023F13FC9138FE03FFDAF00013800003
01C0EB7FC04AEB3FE091C713F0EE1FF817FC160F17FEA2160717FFA917FEA2160F17FCA2
EE1FF8A2EE3FF06E14E06EEB7FC09139F001FF80DAFC07130091383FFFFC020F13F00203
90C7FC91C9FCADB512FCA430377DA537>I<9038FE01FC00FFEB07FF4A138091381E1FC0
9138383FE000079038707FF00003136014C0A201FFEB3FE01480ED1FC0ED070091C8FCB3
A3B512FEA424267EA529>114 D<90383FF8383901FFFEF8000713FF380FC00F381F0003
003E13005A157812FCA27E6C6C130013F0EBFF806C13FC14FF6C14C06C14E06C14F06C14
F8000114FCD8003F13FE13019038000FFF14010070EB007F12F0153F7E153E7E7E6C147C
6D13F89038F007F000FDB512E000F0148039E01FFC0020267DA527>I<130FA55BA45BA2
5BA25B5A5A5A001FEBFFF0B6FCA3000390C7FCB3153CA86C147814806C14F090387FC1E0
90383FFFC0010F1380903801FE001E377EB626>I<01FFEC3FC0B5EB3FFFA4000714016C
80B3A45DA25D7E15066CD9800E13E090267FC03C13FF90383FFFF8010F13E00101138030
267CA537>I<B500F8EBFFFEA4000390C7EA0FC06E14806C16006E5B6C151E6E133E017F
143C80013F5CA26E13F8011F5CECFC01010F5CECFE0301075CECFF076D5C158F6D91C7FC
15CF6D13DEA215FE6E5AA26E5AA26E5AA26E5AA26E5AA22F267EA534>I<B539F007FFFC
A4000190398000FE006E13F86C6D485A6D6C485A013F13076D6C485A6D6C485A02FE90C7
FC903807FF3E6D5B6D5B6D5BA2147F6E7E141F814A7E4A7E02FB7FD901F97FEB03F04948
6C7E4A6C7ED90F807F49486C7E013E130F496D7E01FC6D7E48481580B5010F13FEA42F26
7EA534>120 D<B500F8EBFFFEA4000390C7EA0FC06E14806C16006E5B6C151E6E133E01
7F143C80013F5CA26E13F8011F5CECFC01010F5CECFE0301075CECFF076D5C158F6D91C7
FC15CF6D13DEA215FE6E5AA26E5AA26E5AA26E5AA26E5AA25DA2140F92C8FC000C5B003F
131E387F803E38FFC03C147C14785C13C16C485AEB0FC06CB4C9FC6C5AEA03F02F377EA5
34>I<B9FCA33003809831>123 D E /Fi 1 14 df<14FF010713E090381F00F80178131E
01E01307D80180EB018048C812C000061560481530A248151848150CA2481506A4481503
A900601506A46C150CA26C15186C1530A26C15606C15C06C6CEB0180D800E0EB07000178
131E011F13F8903807FFE0010090C7FC282B7EA02D>13 D E /Fj
10 115 df<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C00100A25C14
0238078006A25C141C380F0078B512F8191F7D9E1D>76 D<D801FEEC7FC0D8001EECFC00
5E0117EB0178A20127EB02F01504A215080147EB09E015111521A20187495AEB83801583
A23A01038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C1380001C
143E3AFF8103FFC02A1F7D9E29>I<EBF180380389C038070780EA0E03121C123C383807
001278A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070013147C9317>97
D<137EEA01C138030080EA0E07121E001C1300EA3C0248C7FCA35AA5EA70011302EA3004
EA1838EA07C011147C9315>99 D<137CEA01C2EA0701120E121C123CEA3802EA780CEA7B
F0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C9315>101
D<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA3381E01C0A4EB0380A2EA0E07
130B38061700EA01E7EA0007A2130EA21230EA781C485AEA6070EA3FC0151D7F9315>
103 D<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180380F01C0120EA2381C
0380A438380700A3EB0E1000701320A2131CEB0C4000E013803860070014207D9F17>I<
13C0EA01E0A213C0C7FCA7120E12131223EA4380EA4700A21287120EA35AA3EA38401380
A21270EA31001232121C0B1F7C9E0E>I<381C0F80382630C0384740601380EB0070A200
8E13E0120EA3381C01C0A3EB038400381388A2EB0708EB031000701330383001C016147C
931A>110 D<EA1C1EEA266138278380EA47871307EB0300008EC7FC120EA35AA45AA45A
123011147C9313>114 D E /Fk 34 121 df<127012F012F8A212781208A31210A31220
A21240050E7C840D>44 D<127012F8A3127005057C840D>46 D<EA03F0EA0E1C487EEA18
06EA380738700380A400F013C0AD00701380A3EA780700381300EA1806EA1C0E6C5AEA03
F0121F7E9D17>48 D<13801203120F12F31203B3A6EA07C0EAFFFE0F1E7C9D17>I<EA03
F0EA0C1CEA100E487E00401380128000F013C0EAF803A3EA200712001480A2EB0F00130E
5B5B5B13605B485A48C7FC000613405A5A00101380EA3FFF5AB5FC121E7E9D17>I<EA03
F0EA0C1CEA100EEA200F007813801307A2EA380F12001400A2131E131C1370EA07F0EA00
3C130E130FEB0780A214C0122012F8A300F013801240EB0F00EA200EEA183CEA07F0121F
7E9D17>I<1306A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220
A2124012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B5B13E00010C7
FCA6EA11F0EA161CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB07
00EA20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C071218
3838030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A2
14801238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<1240387FFFE014C0A2384000
8038800100A21302485AA25B5BA25BA21360A213E05B1201A41203A76C5A131F7E9D17>
I<EA03F0EA0C0CEA1006EA3003382001801260A3127038780300123EEA3F06EA1FC8EA0F
F0EA03F8487EEA0C7EEA103F38300F80EA6007EB01C012C01300A31480EA600100201300
EA1002EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E487E13071270EB038012F0A2
14C0A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07001230EA7806130EEA700C
EA2018EA1070EA0FC0121F7E9D17>I<90380FE0109038381C309038E002703803C00139
078000F048C71270121E15305A1510127C127800F81400A7EC3FFEEC01F000781300127C
123CA27EA27E6C7E3903C001703900E002309038380C1090380FF0001F217E9F24>71
D<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F7E9E22>I<B46CEB07FE
000715C0A2D805C0130BA2D804E01313A301701323A26D1343A36D1383A290380E0103A3
EB0702A3EB0384A2EB01C8A3EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>77
D<007FB512E038780F010060EB006000401420A200C0143000801410A400001400B3497E
3803FFFC1C1F7E9E21>84 D<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E
0E1238127800F01310A3131E127838386720380F83C014147E9317>97
D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A21478A6147014F014E0
001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA0706EA1C0F1238130600
78C7FC127012F0A61270127800381380A2381C0100EA0706EA01F811147F9314>I<EB01
C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A61270A21238EA180312
0CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC
00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314>I<137CEA01C6EA03
0F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<121C12FC121CAA137C13
86EA1D03001E1380A2121CAE38FF8FF014207E9F19>104 D<1238127CA31238C7FCA612
1C12FC121CB1EAFF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B
5B136013E0EA1DF0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>
107 D<121C12FC121CB3ABEAFF8009207F9F0C>I<391C3E03E039FCC30C30391D039038
391E01E01CA2001C13C0AE3AFF8FF8FF8021147E9326>I<EA01F8EA070E381C03803838
01C0A2387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E00EA01F81414
7F9317>111 D<EA1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>114
D<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E1306
12C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA
0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120C
EA061B3803E3F014147E9319>I<39FF9FE1FC393C078070391C030060EC8020000E1440
A214C0D80704138014E0A239038861001471A23801D032143A143E3800E01CA2EB6018EB
40081E147F9321>119 D<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813
D8EA00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC
16147F9318>I E /Fl 20 107 df<007FB812E0B912F0A26C17E03404799743>0
D<EB0FF0EB7FFE48B512804814C04814E04814F04814F84814FCA24814FEA3B7FCA86C14
FEA36C14FCA26C14F86C14F06C14E06C14C06C148039007FFE00EB0FF020207BA52B>15
D<007FB812FEBAFCA26C17FECCFCAD007FB812FEBAFCA26C17FECCFCAD007FB812FEBAFC
A26C17FE38267BA843>17 D<18E0EF03F0170FEF3FE0EFFF80933803FE00EE0FF8EE3FE0
EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FC
EB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03
FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED
0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF01703EF00E018
00AD007FB812E0B912F0A26C17E0344479B643>20 D<127012FCB4FCEA7FC0EA1FF0EA07
FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0
ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0EF1FF01707171FEF
7FE0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FC
EC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12
FC1270CCFCAD007FB812E0B912F0A26C17E0344479B643>I<18034E7EA2727EA3851801
A2727EA21978197C193C858586737E737EF101F8F100FE007FBB1280BC12E0A26C1A80CD
EAFE00F101F8F103E04F5A4F5A97C7FC191E61197C197861A24E5AA2180361A34E5AA272
C8FC4B2E7BAC56>33 D<D907F0ED01FED93FFE92380FFF8090B56C023F13E04802E09138
7E00F02703F07FF8D901F013382707C00FFC49487F270F0003FED907807F000E6D6C49C7
7E486DD9801E80486E6C48EC018000306E6C5A007091261FF07015C00060020F01F01400
923807F9E06FB45A481A606F5B6F90C9FC707E83163F707E4C7E4C7E00601AC0EEF3FC92
3801E1FE0070DBC1FF14010030DA03C06D14804B486C6C13036C4A486C6CEB0700001C02
1E6D6C130E6C4A6D6C131E6C02F8D907FE137C6C6C4848903903FFC1F82701E00FC00100
EBFFF06CB548023F5BD93FFEC8000F1380D90FF0DB01FCC7FC4B277BA556>49
D<020FB51280027F14C049B6FC01071580D91FF8C8FCEB3FC049C9FC13FCEA01F0485A48
5A485A90CAFC5A121E123E123C127C1278A312F85AA2B8128017C0A2178000F0CAFCA27E
1278A3127C123C123E121E121F7E7F6C7E6C7E6C7EEA00FC137FEB3FC0EB1FF80107B612
80010115C06D7E020F14802A3479AF39>I<EE0180EE03C016071780160F17005E161E16
3E163C167C167816F85E15015E15035E15075E150F93C7FC5D151E153E153C157C157815
F85D14015D14035D14075D140F92C8FC5C143E143C147C147814F85C13015C13035C1307
5C130F91C9FC5B131E133E133C137C137813F85B12015B12035B12075B120F90CAFC5A12
1E123E123C127C127812F85A12602A4E74BC00>54 D<0060160600F0160FA26C161F0078
161E007C163E003C163CA2003E167C001E1678A2001F16F86C16F06D1401000716E0A26D
1403000316C06D140700011680A290B7FC6C1600A30178C7121E017C143E013C143CA201
3E147C011E1478011F14F86D5CA2EC800101075CECC00301035CA2ECE00701015CA2ECF0
0F010091C7FC6E5AEC781EA2EC7C3EEC3C3CEC3E7CEC1E78A2EC1FF86E5AA36E5AA26E5A
A26E5A303D80BB31>56 D<007FB712F8B812FCA27ECA123CB217182E177B9E39>58
D<0203B512F0023FECFF8049B712F0010716FC90271FC3F80713FFD97C03D9003F138001
E0030713C0D803C0030113E0D80780499038007FF0D80F00163F48EF1FF8003E170F0207
ED07FC5A00704A14034818FEC71601A2140F18005DA44A5A19FCA3143F92C8EA01F8A219
F0143E027EED03E0A2F007C05CF00F8019004A5D0101163E183C4A5D01035E4D5A4A4A5A
01074B5A050EC7FC4A143C010F15704A495AEE0780011F023EC8FC91380001F849EB3FE0
91B5128090B500FCC9FC000314E04801FCCAFC3F3B7EBA42>68 D<14034A7EA24A7EA24A
7EA24A7E143CEC7CF8EC7878A2ECF87CECF03C0101133EECE01E0103131F4A7EA2010780
EC8007010F80EC00034980011E1301013E80013C1300A2017C800178147801F8147C4914
3C0001153E49141EA20003151F498000071680491407000F16C090C812034816E0001E15
01A2003E16F0003C1500007C16F80078167800F8167C48163CA2006016182E347BB239>
94 D<387FFFF0B512F8A214F000F0C7FCB3B3B3B3A91260155672C026>100
D<387FFFF0B512F8A27EC71278B3B3B3B3A9143015567EC026>I<15FC140FEC3F80EC7E
0014F8495A495A1307A2495AB3A9495AA249C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA
03F8C67E137E7F6D7EA26D7EB3A96D7EA213036D7E6D7E147EEC3F80EC0FFC14001E577A
C02B>I<127CEAFFC0EA07F0EA01F8EA007C7F7F80A26D7EB3A96D7EA26D7E6D7E6D7E14
7FEC1FF8EC03FCEC1FF8EC7F0014FC495A495A495AA2495AB3A9495AA291C7FC133E5B48
5AEA07F0EAFFC0007CC8FC1E577AC02B>I<14C0EB01E0A2130314C0A213071480130F14
00A25B131EA2133E133CA2137C137813F85BA212015BA212035B12075BA2120F90C7FCA2
5A121EA2123E123C127C1278A212F85AA27E1278A2127C123C123E121EA2121F7EA27F12
07A27F12037F1201A27F1200A27F1378137C133CA2133E131EA2131F7FA21480130714C0
1303A214E01301A2EB00C0135678C021>I<126012F0A27E1278A2127C123C123E121EA2
121F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA2133E131EA2131F7FA2
1480130714C01303A214E01301A2130314C0A213071480130F1400A25B131EA2133E133C
A2137C137813F85BA212015BA212035B12075BA2120F90C7FCA25A121EA2123E123C127C
1278A212F85AA2126013567BC021>I<126012F0B3B3B3B3AD1260045776C018>I
E /Fm 72 123 df<DA07FC137F913A3FFF81FFC0913AFC03C7C0E0903B03F0006F81F090
3B07C001FF03F8903A0F8003FE0790391F0007FC5B017EED03F0923903F801E0017C0101
90C7FC13FCADB812FCA32800FC0001F8C7FCB3AC486C497E3B7FFFF07FFFF8A3353D7FBC
32>11 D<EC07FCEC3FFF9138FC0380903903F000C0D907C0136090390F8001F04948487E
491307137EA2137C01FC6D5AED00C093C7FCAAED01F8B7FCA33900FC00071501B3AB486C
497E3B7FFFF07FFFF0A32C3D7FBC30>I<DA07FCEB07FC913A3FFF803FFF913BFE03C0FC
0380903C03F00063F000C0D907C0D937C0136049489039FF8001F049484849487E494914
07017E5CA2017C5C01FC01016E5A0300EC00C096C7FCAAF001F8BAFCA3D800FCC738FC00
071801B3AB486C496C497E297FFFF87FFFF8B512F0A3443D7FBC48>14
D<121C127FA2EAFF80A7EA7F00AB123EAB121CAB1208C7FCA8121C123E127FEAFF80A3EA
7F00123E121C093D79BC18>33 D<013E161801FF163C2603C180157C260780C01578260F
007015F8000E6DEC03F0001E011E4A5A48011F141FDA19E0EB7FC0007C903A0CFF0FE780
92381FFF8F0078912600F01FC7FC6EEB001E00F8163E173C177C5F5F16014C5A5F160700
784B5A4A91C8FC007C5D163E003C49133C167C6C5D000E495B000FEB60016C6C48485A26
03C1805B3900FF0007013E495A90C790C712F84BEB03FC031EEB0F06033EEB1E034B9038
3C0180037890383800C003F8017813604A485B5D020301011430EC07C003805B020F1618
91381F0003141E143E5C147814F8495A5C13034A13010107173049488091C7FC49020014
60133E013C1578017C033813C04992383C01804992381E03000001EE0F0649ED03FC6C48
ED00F83D467BC048>37 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA
0300A21206A25A5AA25A12200A1A79BB18>39 D<146014E0EB01C0EB0380EB0700130E5B
A25B137813705B12015B1203A2485AA248C7FCA35A121EA2123EA2123CA2127CA5127812
F8B21278127CA5123CA2123EA2121EA2121F7EA36C7EA26C7EA212017F12001370137813
387FA27F7FEB0380EB01C0EB00E01460135678C021>I<124012E012707E7E7E7EA26C7E
7F12016C7E7F13701378A27FA27FA3131F7FA21480A21307A214C0A5130314E0B214C013
07A51480A2130FA21400A25B131EA35BA25BA2137013F05B485A12035B48C7FCA2120E5A
5A5A5A124013567BC021>I<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8FCB3A7
151838387BB143>43 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA03
00A21206A25A5AA25A12200A1A798818>I<B512FCA516057F941D>I<121C123E127FEAFF
80A3EA7F00123E121C0909798818>I<EB03FC90381FFF8090387E07E09038F801F04848
6C7E4848137C48487F48487FA248C7EA0F80A24815C0A3007EEC07E0A500FE15F0B3007E
15E0A4007F140F6C15C0A36C15806D131F000F1500A26C6C133E6C6C5B6C6C5B6C6C485A
90387E07E090381FFF80D903FCC7FC24397DB72B>48 D<EB01C013031307131F13FFB5FC
A2131F1200B3B3A8EB7FF0007FB512F8A31D3879B72B>I<EB0FF8EB7FFF48B512C03903
E03FE039070007F8000E6D7E00186D7E481300157F481580127C00FE143F6C15C07FA46C
C7FC123EC8FC1680157F1600A215FEA24A5A5D4A5A4A5A5D4A5A4AC7FC143E143C5C5C49
5A495A495A49C8FC011E14C013381330491301491480485A48C7FC00061403000FB6FC5A
5A481500B7FCA322387CB72B>I<EB07FC90383FFF8090B512E03901F807F03903C001F8
48C77E000E80D80FC07F486C7F6D1480A46C5A6C5A0001C71300C85AA25D4A5A5D4A5A5D
EC0FC0023FC7FCEB1FFCECFF8090380007E0EC01F86E7E157E157FED3F8016C0A2ED1FE0
A216F0A3123F487E487EA216E0A2153F4914C06CC7FC0070EC7F806C15006C14FE390F80
01FC3907F007F80001B512E06C6C1380D907FCC7FC24397DB72B>I<151C153CA2157C15
FCA214011403A21407140F141D141914311471146114C11301EB038114011307130E130C
131813381330136013E0EA01C01380EA03005A12065A121C5A123012705AB712FCA3C738
01FC00AB4A7E49B512FCA326397EB82B>I<00061406D80780131E9038F801FC90B55A5D
5D5D92C7FC5C38067FF090C9FCABEB03FCEB1FFF90387C0FC09038E003E039078001F090
C77E0006800004147EC8FC157FED3F80A316C0A4123E127F5A7FA290C71380A248147F00
601500A26C14FE00385C6C495A6C495A6C6C485A3903E01FC06CB5C7FC6C6C5AEB0FF022
397CB72B>I<EC1FC0ECFFF0010313FC90380FE03E90381F800690383E000349131F49EB
3F804848137F1203485AA24848EB3F00001F141E4990C7FCA2123FA2127F90C9FCA2EB01
FE903807FFC039FF0E03E090381800F849137C497F153F49EB1F80A24914C0ED0FE0A290
C7FC16F0A37EA56C7E16E0A2121FED1FC06C7E16800007EC3F006C6C133E6C6C5B6C6C5B
90387E03F06DB45A010F1380D903FEC7FC24397DB72B>I<12301238123E003FB612F0A3
16E04815C01680A20070C7EA030000601406A25D00E05C485CA25DC85A4A5AA24AC7FC14
06A25C141C141814381478147014F0A2495AA21303A31307A25C130FA3131FA5133FA96D
5A6DC8FC243B7BB92B>I<EB03FC90381FFF804913E09038FC03F03901E000F8D8038013
3C90C77E4880120EED0780A2121EA2121FA27F6DEB0F00EA0FF06D131E01FE131C6C6C5B
6CEBC070ECE1E06CEBFBC06C01FFC7FC133F6D7F6D13E0497F017813FC3901E07FFE3903
C01FFF48486C1380380F0003001E010013C048EC7FE0151F48140FED07F04814031501A2
1500A316E01278ED01C07EED03806CEC07006C6C130ED807E0133C3903FC01F8C6B512E0
013F1380D907FCC7FC24397DB72B>I<EB03FC90381FFF80017F7F9038FE07F03901F001
F848486C7E4848137C000F804848133F003F80168048C7FC16C0A248140F16E0A516F0A3
7E151FA26C7E001F143FA26C6C136F12076C6C13CF3901F0018F39007C070FEB3FFED907
F813E090C7FCA3ED1FC0A31680D80780133F486C1400487E157E157C15FC49485AD80F80
5B390C0003E00007EB0FC02603C03FC7FC3801FFFE6C13F8EB1FC024397DB72B>I<121C
123E127FEAFF80A3EA7F00123E121CC7FCB3121C123E127FEAFF80A3EA7F00123E121C09
2579A418>I<007FB812FEBAFCA3CCFCAEBAFCA36C17FE38167BA043>61
D<EB3FE03801FFFE3907C03F80390E000FC00018EB07E048EB03F04814F8140100FC14FC
7E7EA3127E123CC7EA03F8A215F0EC07E0EC0FC0EC1F80EC3E00143C5C5C5C13015C495A
A291C7FC5BA21306AA130490C8FCA8130E131F497E497EA36D5A6DC7FC130E1E3D7BBC29
>63 D<150C151EA3153FA34B7EA34B7EA39138019FE0A202037F150FA202077FEC0607A2
020C7F1503A202187F1501A24A6C7EA34A6D7EA202E0804A133FA20101814A131FA249C7
7F91B6FCA249810106C71207A2496E7EA3496E7EA2013881013080A20170820160157FA2
01F082EA03F8D80FFC4A487EB500C0013FEBFFC0A33A3D7DBC41>65
D<DBFFC01360020713F8023F01FE13E09139FFC01F01903A03FE000783D907F8EB01E3D9
0FE0EB0077D91F80143F017FC8121F01FE150F4915071201484815031207491501120F48
481500A2123F5B1860127FA25B180012FFAB127FA26D1660A2123FA27F121F18C06C7E12
076DED018012036C6CED03006C6C5D1706017F5DD91F805CD90FE05CD907F814E0D903FE
EB03C0903A00FFC01F8091263FFFFEC7FC020713F8020013C0333D7BBB3E>67
D<B712F816FF17C0C69039C0003FF06D48EB07FCEE01FEEE007F717E717E717E717EA271
7E84170184170084A3F07F80A419C0AC1980A4F0FF00A34D5AA2604D5AA24D5A4D5A4D5A
173F4DC7FCEE01FEEE07FC496CEB3FF0B85A94C8FC16F83A3B7EBA42>I<B91280A3C690
38C000016D48EB003FEF0FC017071703A21701A21700A418E018601630A31800A31670A2
16F0150391B5FCA3EC800315001670A21630A2180CA3181893C7FCA31838A21830A21870
A218F018E017011703170F173F496CEB01FFB912C0A3363B7EBA3B>I<B812FEA3C69038
C000076D481300173F8383A283A283A418801701A21660A294C7FCA416E0A21501150791
B5FCA3EC800715011500A21660A693C8FCAEEBFFE0B612F0A3313B7EBA38>I<DB7FC013
30913807FFF8023F01FE1370913AFFC01F80F0903A01FE0003C1D907F8EB00E1D90FE014
334948141F49C8120F017E150713FE48481503484815011207491500120F48481670A348
5A1830127FA25B95C7FC12FFAB007F037FB512C0A27F9339003FF800003FEE0FF0A26C7E
A36C7E12077F12036C7E6C7E137F6D6C141F6D7E6D6C1433D907F81473D901FEEB01E190
3A00FFE00FC0023FB5EA0070020701FC13309126007FE090C7FC3A3D7BBB44>I<B6D8C0
3FB512F0A3C601C0C7383FF0006D486E5AB3A591B7FCA30280C7121FB3A7496C4A7EB6D8
C03FB512F0A33C3B7EBA41>I<B612C0A3C6EBC0006D5AB3B3AF497EB612C0A31A3B7EBA
1F>I<B612F0A3C601E0C8FCEB7F80B3AE1706A5170E170CA4171CA3173C177CA2EE01FC
EE03F8160F496C137FB8FCA32F3B7EBA36>76 D<B56C4BB5FC6E5DA2C61900D96FE0ED06
FEA3D967F0150CA2D963F81518A3D961FC1530A2D960FE1560A3027F15C0A36E6CEB0180
A26E6CEB0300A36E6C1306A36E6C5BA26E6C5BA36E6C5BA26E6C5BA3037F5BA392383F81
80A2DB1FC3C7FCA3ED0FE6A3ED07FCA26F5AA213F0486C6D5AD807FE4C7EB527F000E001
B6FCA3483B7DBA4F>I<B56C91B512F08080D8007F923807FE006EEC01F8D96FF86E5A01
671660EB63FC801361EB60FF816E7E143F816E7E140F6E7E8114036E7E816E7F157F826F
7E151F6F7E8215076F7E826F7E81EE7F8017C0163FEE1FE017F0160FEE07F817FCEE03FE
1601EE00FF18E0177F173FA2171F170FA2170701F01503486C1501EA07FEB500F0140018
60A23C3B7EBA41>I<4AB47E021F13F891387F00FED901F8EB1F80D907F0EB0FE0D90FC0
EB03F049486D7E49C87E017E157E4981000117804848ED1FC04848ED0FE0A2000F17F049
1507001F17F8491503003F17FCA3007F17FE491501A300FF17FFAB007F17FE6D1503A400
3F17FC6D1507001F17F8A26C6CED0FF0A2000717E06D151F000317C06C6CED3F806C6CED
7F00017F15FE6D5D6D6C495AD90FE0EB07F06D6C495AD901FCEB3F80D9007F01FEC7FC91
381FFFF802011380383D7BBB43>I<B712F016FF17C0C69039C0003FF06D48EB07F8707E
707E707EEF7F80A218C0173F18E0A718C0A2177F188018005F4C5A4C5AEE0FF0EE3FE091
B6128004FCC7FC0280C9FCB3A6497EB612C0A3333B7EBA3B>I<B77E16F816FEC69039C0
01FF80903A7F80003FE0EE0FF0707E707E707EA2838284A795C7FC5E5F5F4C5A4C5A4C5A
EE3F80DB01FEC8FC91B512F816E091388003F8ED007E82707E83707E83160783A683A619
30A2707EA204011460496C6D7EB600C06D13C094383F838094380FFF00CAEA01FC3C3C7E
BA3F>82 D<D90FF81360EB3FFF90B5EAC0E03901F807E13907E000F1D80F80133B90C712
1F48140F003E14071503481401A212FC1500A316607EA27E6C15007F13E0EA3FF8EBFF80
6C13F86CEBFF806C14E06C14F86C806C80013F7F01071480D9007F13C0020713E0EC007F
ED1FF0150F150716F81503124012C01501A37EA216F07E15036C15E0A26CEC07C0B4EC0F
80D8FB801400D8F1F0133ED8F0FE13FC39E03FFFF8D8C00F13E001011380253D7BBB30>
I<003FB812F8A3D9E001EB800790C7EB0001007CEE007C0078173CA20070171CA2006017
0CA500E0170E481706A4C81500B3B1020313C0010FB612F0A3373B7DBA3E>I<B600C090
B512F0A3C601C0C73807FE006D48EC01F8715A1860B3B3A2013F5E80A2011F4B5AA26D6C
4AC7FC01075D6D6C14066D6C5C6D6C1438027E5C6E6C485A91391FF00FC00207B55A0201
49C8FC9138001FF03C3C7EBA41>I<B500FE91381FFFF0A3000301C0020313006C90C912
FC6C17786E1570017F1660A26E15E0013F5E80011F4B5AA26E1403010F93C7FCA26D6C14
06A28001035DA26E141C01011518806D5DA26F1370027F1460A26E6C5BA281021F495AA2
EDF003020F91C8FC15F802071306A2EDFC0E0203130C15FE02015BA215FF6E5BA216F06F
5AA26F5AA36F5AA26FC9FCA315063C3C7EBA41>I<B5D8FC01B500FC90383FFFE0A30007
9026800007018001071300000190C76C48C7EA01FC49725A6D020116706C1A60836E7F01
7F618480013F4E5AA2933801BFC06D6C4DC7FCA29338031FE06D6C1706A29338060FF06D
6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA204707F91277F8060005CA204
E014806F48EB7F81023F5F03C115C1DBE180EB3FC3021F94C8FC03E315E303F3C7EA1FE7
020F16E619F603FEEC0FFE02075EA24B140702035EA24B140302015EA24B140102005EA2
4B140003605D533C7EBA58>I<EAFFF8A4EAF000B3B3B3B3A7EAFFF8A40D5777C018>91
D<EAFFF8A4EA0078B3B3B3B3A7EAFFF8A40D577FC018>93 D<EB1FF0EBFFFC3803E03F39
07000F80486D7E9038C003E0486C6C7E81A214006C487F6C5AC8FCA4140FEB03FFEB1FF8
EBFF00EA01FCEA07F0EA0FC0485A123F90C7FC5A007E150612FEA31401A2007EEB037C12
7F3A3F80063E0C3A1FC00C3F1C3A0FF0381FF83A03FFF00FF03A007FC007C027287DA62B
>97 D<EA01F812FFA312071201B1EC0FF0EC3FFEECF01F9039F9C007C09039FB0003E001
FE6D7E496D7E167C49147E163E163FA21780161FA217C0A91780A2163F1700A2167E167C
6D14FC5E01F6495A01E3495A9039E1800F809026C0F03FC7FC9038807FFCC7EA0FE02A3D
7EBB30>I<EB03FE90381FFFC090383E01F09038F800384848133C484813FC3907C001FE
120F1380121F48C712FC1578481400A2127EA212FEA9127EA2127F6C1403A26C7E15066C
7E0007140C6C6C13186C6C13306C6C13E090387E03C090381FFF00EB03FC20287DA626>
I<ED07E0EC03FFA3EC001F1507B1EB01FC90380FFF8790383F03C790387C0067D801F013
374848131F4848130F120F491307121F48C7FCA25A127EA212FEA9127EA2127F7EA27E6D
130F120F6C6C131F6C7E6C6CEB77F86C6C9038E7FFC090383E038790381FFF07D903FCEB
E0002A3D7DBB30>I<EB03FCEB1FFF90387E07C09038F801E03901E000F0000314784848
137C48487F121F90C7123F4880A25A007E1580A212FEA2B7FCA248C9FCA5127EA3127F6C
EC0180A26C7E000FEC03007F000714066C6C5B6C6C5BD80078137090383F01E090380FFF
80D901FEC7FC21287EA626>I<147F903801FFC0903807C0E090380F81F090381F03F8EB
3E07137CA29038FC03F09038F801E0000190C7FCAEB512FCA3D801F8C7FCB3AC487E387F
FFF8A31D3D7FBC1A>I<903907F001F890393FFE0FFC90397C1F1E3E9038F007F03A01E0
03E01C2603C00113080007ECF000000F80EB8000001F80A7000F5CEBC00100075C00035C
6C6C485A6D485A26037C1FC7FC38073FFE380607F090C9FC120EA3120FA2EA07C090B512
C06C14FC6C14FF6C1580000315C03A0F80003FE048C7EA07F0003EEC01F8003C1400127C
0078157C12F8A5007C15F8A26CEC01F06CEC03E06C6CEB07C0D803E0EB1F00D801FC13FE
39003FFFF00107138027397EA52B>I<EA01F812FFA312071201B1EC07F8EC1FFEEC781F
9138E00F809039F98007C0D9FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A3
2B3C7EBB30>I<EA0380487E487E487EA36C5A6C5A6C5AC8FCABEA03F012FFA3120F1203
B3AB487EB512C0A3123A7EB917>I<14E0EB01F0EB03F8EB07FCA3EB03F8EB01F0EB00E0
1400ABEB01FC137FA3130313011300B3B3A3123C007E13F8B4FC130114F0A2387E03E000
3C13C0381C0F80380FFE00EA03F8164C84B91A>I<EA03F012FFA3120F1203B2913801FF
FCA39138007FC0ED7E00157C157015604A5A4A5A0206C7FC5C5C5C147814FCEBF1FEEBF7
3EEBFE3F9038F81F80EBF00F816E7E1403816E7E140081157E81A2ED1F8016C0486CEB3F
F0B500C0B5FCA3283C7DBB2D>I<EA03F012FFA3120F1203B3B3AF487EB512C0A3123C7E
BB17>I<2701F803F8EB03F800FFD91FFFEB1FFF913B3C0F803C0F80913BE007C0E007C0
3D07F9C003E1C003E02601FB00D9F3007F0301140101FE02FE80A2495CA2495CB3A5486C
496C497EB500F0B500F0B512F0A344267EA549>I<3901F807F800FFEB1FFEEC781F9138
E00F803A07F98007C02601FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A32B
267EA530>I<EB01FE90380FFFC090383F03F09038F8007C48487F48487F4848EB0F8048
48EB07C0A248C7EA03E04815F0A3007EEC01F8A300FE15FCA9007E15F8A2007F14036C15
F0A26C15E06D1307000F15C06C6CEB0F806C6CEB1F006C6C133E6C6C5B90383F03F09038
0FFFC0D901FEC7FC26287EA62B>I<3901F80FF000FFEB3FFEECF01F9039F9C007C03A03
FB0003E0D801FE6D7E49806F7E49147EA2167F821780A2161F17C0A91780163FA217005E
167E5E7F4B5A6D495A01FB495A9039F9800F809026F8F03FC7FCEC7FFCEC0FE091C9FCAC
487EB512F0A32A377EA530>I<D901FC13C090380FFF0190383F03819038FC00C3D801F0
13634848133712074848131F485AA2003F140F90C7FC5AA2127E12FEA9127E127FA27EA2
6C7E151F6C7E0007143F6C6C136F6C6C13EF3900F801CF90387E070FEB1FFEEB03F890C7
FCACED1FE00203B5FCA328377DA52D>I<3903F00F8000FFEB3FE0EC70F0ECC1F83807F1
833801F303A29038F601F0EC004001FC1300A45BB3A3487EB512F8A31D267EA522>I<90
387F81803803FFE3380F807F381E001F00381307A2481303A200F01301A37EA200FE90C7
FCEA7F8013FC383FFFC06C13F06C13FC00037F6C7FD8001F13801300EC1FC00040130F00
C0EB07E014036C1301A47E15C06C13036C1480EC070000F7130E38E3C03C38C0FFF8EB3F
C01B287DA622>I<1330A61370A413F0A21201A212031207001FB5FCB6FCA2D803F0C7FC
B2EC0180A912019038F80300A21200EB7C066D5AEB1FF8EB03F019367EB421>I<D801F8
EB03F000FFEB01FFA30007EB000F00011403B3A51507A30000140FA26D131B017C14FC6D
903873FFE090381F81E390380FFF83903A01FE03F0002B277EA530>I<B538801FFFA33A
07F80007F86C48EB03E0ED01C06C7E16806D130300001500A2017E1306A2137F6D5BA2EC
801C011F1318A26D6C5AA2ECE07001071360A26D6C5AA214F901015BA26DB4C7FCA3147E
A2143CA3141828267EA42D>I<B53B87FFF80FFF80A33D0FF8003FC003FC006C486DC75A
00035F701360A26C6C5E8215376C6C4B5AED77E06D01631303017E93C7FCEDE3F0017F01
C15B6D1506020113F8DA8180130E011F150C028313FC9139C3007C1C010F151802C7137E
02E6EB3E380107EC3F3002EC131FD903FC5C17E04A130F01015DA24A130701005DA24A13
03026091C8FC39267EA43E>I<B539C03FFF80A300039039001FF000C648EB0FC093C7FC
017E130E6D130C6D6C5AECC038010F5B6D6C5A6D6C5AECF980EB01FB6DB4C8FC147E147F
80814A7EEC6FE014C7903801C3F090380381F8EC01FCEB0600010E137E497F4980013013
1F01706D7ED801F880000F4A7ED8FFFE90387FFFC0A32A257FA42D>I<B538801FFFA33A
07F80007F86C48EB03E0ED01C06C6C1480A26D130300001500A2017E1306A2017F130E6D
130CA26D6C5AA2ECC038010F1330A26D6C5AA2ECF0E001035B14F8903801F980A214FF6D
90C7FCA2147EA2143CA31418A25CA35CA25C1210EA7C0100FE5BA249C8FC5BEAFC0EEA70
1C6C5AEA1FF0EA07C028377EA42D>I<003FB512FEA290388000FC393E0001F8003C1303
003814F00030EB07E00070130FEC1FC000601480EC3F005C147E5CEA0001495A5C495A13
0F5C495A013F1303EB7F00137E5B1201491307485A12074848130649130E485A003F141E
90C7127E007EEB01FEB6FCA220257EA426>I E /Fn 47 122 df<B612FEAA1F0A7F9B28>
45 D<EA07E0EA0FF0EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E01010788F
21>I<EC03C04A7E141F147FEB01FF130F0007B5FCB6FCA313F1EAF8011200B3B3AF007F
B71280A5294477C33B>49 D<ECFFE0010F13FE013FEBFFC090B612F0000315FC2607FE01
7F3A0FE0007FFF4848011F138048486D13C001E06D13E0EA7FF86D6D13F012FF6D6D13F8
A36F13FCA26C5AA26C5A6C5A6C5AC85A17F8A217F05D17E0A24B13C017805D4B13005E4B
5A4B5A16E04B5A4A5B4A90C7FCEC07FC4A5A4A5AEC3FC04A48137C4AC7FC5C495AD903F0
14F8495A495A495A49C71201017C140390B7FC4816F05A5A5A5A5A5AA2B812E0A42E447A
C33B>I<EC7FF80103B57E010F14F0013F14FC9039FFC03FFF2701FE000F1380D803F86D
13C0496D13E0487ED80FFE15F06D7F028014F85AA57E4A4813F07E6C5AD801F815E0C85A
17C017804B13004B5A4B5A4B5A913803FFE00103B512804BC7FCEDFFC016F090C7EA3FFC
ED0FFF6F13C06F13E017F06F13F8A217FC8117FEA2D803C015FFEA0FF0EA3FFCA2487EA2
B5FCA217FEA3494913FC127F4915F86C485B01E015F06C484913E0D80FF84913C02707FF
803F13806C90B5EAFE00C65D013F14F0010714809026007FF8C7FC30457BC33B>I<EA07
E0EA0FF0EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0C7FCAEEA07E0EA0FF0
EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0102E78AD21>58
D<903803FFF0013FEBFF8090B612E0000315F83A0FFE007FFED81FE0EB0FFFD83F806D13
807F486C6D13C07F00FF16E07FA46C5A17C06C485B6C4815800007C75AC84813004B5A4B
5AEDFFF016C04A5B4A48C7FC5D4A5A5D4A5A5D4A5AA292C8FC5C143EAA143CA291C9FCA8
147E14FF497F497F497F497FA66D5B6D5B6D5B6D90C8FC147E2B487AC738>63
D<EE03E04C7EA24C7EA34C7EA24C7EA24C7EA393B57EA24B80A34B8016EF03078016CF16
C7030F801683031F801601033F80153E82037E80037C7F03FC815D830201824B7F020382
5D830207824B7F020F824B7F021F8292C7FC834AB77EA24A82A302FCC86C7F4A81010184
5C840103844A810107844A81010F845C84011F8491C97ED97FC083B66C0103B71280A551
487CC75A>65 D<B912E018FEF0FFC019F085D8001F902680000113FE716C7E727F727F84
727F86A28486A862606260624E5B4E90C7FC4E5A4D485A050713F092B712C04EC8FCF0FF
C019F80380C713FE95381FFF80727F060313F08684727F86A2737EA31B80A285A361A31B
00A296B5FC62604E5B4E5B4E5B063F5B95B55ABB5A4FC7FC19F819C006FCC8FC49477CC6
54>I<DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF81023FD9
F80013C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F4949153F4990C9
121F4948160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA25A91CBFC
1A00A2B5FCAD7EA36E173E7EA37E806C197CA26C7F1AF86C7F19016C6D17F06C6DEE03E0
6D6C16076D6CEE0FC06D6DED1F806D6DED3F006D01F015FE010101FC4A5A6DD9FF80EB0F
F8023F01F8EB7FF0020F90B612C0020393C7FCDA007F14FC030F14E09226003FFEC8FC47
4979C756>I<B912C018FEF0FFC019F019FCD8001F902680000713FFDD007F7F060F13E0
727F06017F727F737E737E857313801BC0851BE0851BF0A21BF885A21BFCA51BFE85AC61
1BFCA41BF8A34F13F0A34F13E0A24F13C01B80614F130062F1FFFC4E5B4E5B060F5B067F
5B0507B5C7FCBA5A19F819C04EC8FC18C04F477CC65B>I<BA12FEA485D8001F9038C000
01EF001F180784180085A2851A80191FA3190FA2173EA2F107C0A4057E90C7FCA317FE16
01160F92B5FCA5EDC00F16011600177EA3053E147CA31AF8A394C8FC19011AF0A31903A2
19071AE0190F191F193F197F19FF060313C0180F95B5FCBBFCA21A80A346467CC54E>I<
BA12FCA485D8001F9038C00003EF003F180F180318011800A2197E197F85A285A4177CF1
0F80A496C7FC17FCA316011603161F92B5FCA5EDC01F160316011600A3177CA694C9FCB0
B8FCA541467CC54B>I<B7D8F801B712F0A5D8001F01C0C8003FEB8000B3A992B9FCA503
C0C8123FB3ABB7D8F801B712F0A554477CC65D>72 D<B712F8A5D8001FEBC000B3B3B3A7
B712F8A525477CC62D>I<B8FCA5D8001F01C0C9FCB3B3A219F8A4F001F0A51803A31807
A2F00FE0181FA2183F187F18FF1703170F177FBA12C0A53D477CC647>76
D<B600E00503B6FC6F5FA26F5FA2D8001FF3F8006F171EA2DABFFE5FA2DA9FFF5FA2028F
6D5EA202876D4B5AA302836D4B5AA202816D4B5AA202806D4B5AA26F6C151EA36F6C5DA2
6F6C5DA26F6D5CA26F6D495AA26F6D495AA36F6D495AA26F6D49C7FCA2706C131EA2706C
5BA2706C5BA3706D5AA270EBC1E0A270EBE3C0A270EBF780A37001FFC8FCA2715AA2715A
A2715AA2D97FE06E5AB600F00407B7FCA2715AA2715A68477CC671>I<B600C092B612F0
81818181D8001F9439007FE0006FEE1F8081828202BF7F149F82028F7F02877F02837F02
817F1480836F7F6F7F6F7F6F7F81836F7F6F7F6F80707F8284707F707F707F707F707FA2
7014807113C07113E07113F07113F8A27113FC7113FE7113FF71149F7213DFA27213FF84
848484A28484858585A285858585D97FE082B612F01A7F1A3F1A1F74C7FC54477CC65D>
I<923803FFF0037FEBFF800203B612F0020F15FC023F9038807FFF9127FFF8000713C001
0301E0010113F049496D7F4990C8EA3FFC49486F7E49486F7E017F8449486F7F48496F7F
48854A8148854A814885A24849707EA24885A34890CA6C1380A5B519C0AE6C1A80A26E5E
A26C1A00A36C6D4C5AA36C6D4B5BA26C616C6D4B5B6E5D6C616C6D4B5B6D6C4B5B6E5D6D
6D4A90C7FC010F6DECFFFC6D01F001035B6D01FC010F5B01009026FF807F13C06E90B65A
020F03FCC8FC020315F0DA007F1480030301F0C9FC4A4979C759>I<B97E18F818FF19C0
19F0D8001F902680000F13FC05017F716C7E7213807213C0841AE0A27213F0A31AF8A81A
F0A34E13E0A21AC04E1380604E1300943801FFFC050F5B92B75A19C04EC7FC18F003C0CA
FCB3A9B712F8A545477CC651>I<DA7FF013070107B55B011FECC01F017FECF03F90B6EA
FC7F00039039C00FFEFF4848C7B5FC49143F484880484814074980003F815B007F8183A2
00FF82A37F837F7F7F01FF92C7FC6C13C014FEECFFE06C14FF16F06C15FC16FF6C16C06C
82836C82C6826D81131F6D811301D9001F15801401DA000F14C01500161F7013E0828200
788100F881A2177FA37E18C0A27E18806C16FF7F6D16006D4A5A01F8140301FE4A5A6D6C
495A02FCEB7FF0D8FE3FB65AD8FC0F1580D8F80392C7FC48C66C13F848010313C0334979
C742>83 D<003FBBFCA5DA00039038F8003FD87FF80507138001E01701498349187F90C7
173FA2007E191FA21A0F127CA400FC1AC0481907A5C894C7FCB3B3A40103B812F8A54A46
7CC553>I<B700E0021FB512E0A5C66C0180C9383FE0006D6DEE0F801A1F6D96C7FC6F5E
6D183E811A7E6D6D167C1AFC6D6D5E19016D606F15036D608119076E6D5D190F6E6D5D19
1F6E94C8FC705C6E163E82197E6E6D147C19FC6E6D5C18016E5E7013036E5E8218076F01
805B180F6F01C05B181F6F92C9FC715AA26FEBF03E187E6FEBF87C18FC6F5C17FD6F5C17
FFA26F5CA2705BA2705BA27090CAFCA3705AA2705AA2705AA2705A53487DC65A>86
D<903807FFFC017FEBFFC048B612F84815FE3A07FE001FFF6D010313C0486D6C7F6F7F16
7F83A26C90C76C7EA26C5AEA00F890C8FCA40207B5FC91B6FC1307013FEBE03F9038FFFE
00000313F04813C04890C7FC485A485A485AA2485AA5167F6C6C14FFED01EF6C6C130301
FF903807CFFF000F9026C03F8F13F86C90B5000713FC0001ECFC036C6CEBF00101039039
80007FF8362E7DAD3A>97 D<EB7FC0B5FCA512037EB3ED0FFC92387FFFC002C3B512F002
CF14FC9139DFF00FFF9126FF80037F4A486C7F02F86D7F4A6E7E4A6E7E84171F84A2170F
84A31980AA1900A34D5AA260A24D5A806E4A5A6E4A5A6E495B02BF01075B91271FE01FFE
C7FC496CB55AD9FC0314F049C6148049D91FF8C8FC39487CC742>I<91381FFFC091B512
F8010714FE011FECFF8090267FFC0013C09038FFE00148494813E0481380481300485AA2
48486D13C0123F6F1380EE3E00484891C7FCA312FFAA127FA27F123FA217F86C7E120F6D
EC01F06C6D13036C6DEB07E06C6DEB0FC06C6DEB1F80D97FFEEBFF00011FB55A010714F8
010014E0DA1FFEC7FC2D2E7CAD35>I<EF7FC093B5FCA5160382B3EC0FFC91B512810107
14E1011F14F990263FFC03B5FC9039FFF0007F4801C0131F48497F4890C77E484880A248
5AA2123FA2485AA312FFAA127FA3123F7FA2121F7F000F5D6C6C5C6C6D5B6C6D5B6C6D90
B57E90277FF807FBEBFF80011FB512F3010714C3010114039038001FF839487CC742>I<
EC1FFE49B512E0010714F8011F14FE90397FFC07FF9026FFE0011380489039C0007FC048
49EB3FE04890C713F04848141F001FED0FF85B003F16FC1607127F5B17FEA212FFA290B7
FCA317FC01F8C9FCA4127FA27F123FA2171C6C6C153E120F6D157E6C16FC6C6DEB01F86C
6DEB03F026007FF0EB1FE0D93FFEEBFFC06DB612800107ECFE00010014F8020F13802F2E
7DAD36>I<EDFFC0020F13F8027F7F49B6FC4913814948481380EB0FF849484813C0133F
14E0137F4A6C138013FF6F13006F5A163893C7FCAAB612FEA5C601E0C8FCB3B2007FEBFF
F0A52A487DC724>I<EF1F80DA7FF8EB7FE00103B53801FFF0011F14E7499138FFE7F890
26FFE01F130F4890388007FE4890380003FF48486DEB87F0A248486DEBC1C0EFC000A200
1F82A6000F5EA36C6C495BA26C6C4990C7FC6C6D485A6C9038E01FFC91B512F0485DD803
C391C8FC9038C07FF8000790CAFCA47F7F7F90B612F016FF6C16E017F86C16FE836C1780
7F0003B812C0120FD81FF8C7001F13E0D83FE0140148489138007FF0173F4848151FA56C
6CED3FE0A26C6CED7FC06D15FFD81FFC020313806CB4020F1300000301F0EBFFFCC690B6
12F0013F15C001074AC7FCD9003F13C035447DAE3B>I<EB7FC0B5FCA512037EB3923801
FFC0030F13F8033F13FE92B6FC9126C1FC077F9126C3E0037F9138C7C001DACF008002DE
7F14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B487CC742>I<13FC487E487E481380
4813C04813E0A66C13C06C13806C13006C5A6C5A90C7FCABEB7FC0B5FCA512037EB3B0B6
FCA518497CC820>I<EC01F84A7E4A7E4A7E4A13804A13C0A66E13806E13006E5A6E5A6E
5A91C8FCABED7FC049B5FCA5EB000380B3B3A8EA1FC0EA3FE0EA7FF0EAFFF84A1380A24A
13005D4A5A6C48485A6C48485A6CB55A6C5C6C91C7FC38007FF0225D87C824>I<EB7FC0
B5FCA512037EB393387FFFF8A5933807FE0017F04C5AEE3FC04C5A04FEC7FC4B5AED07F8
4B5AED1FC04B5A03FFC8FCECC1FEECC3FF02CF7F02DF7F91B5FC828202FC7F4A6C7EECE0
3F4A6C7E826F7F6F7F816F7F836F7F707E163F707E707E188018C0B6D8807F13FFA53848
7CC73F>I<EB7FC0B5FCA512037EB3B3B3A6B61280A519487CC720>I<90287FC001FFC0EC
FFE0B5010F01F8010713FC033F01FE011F13FF92B6017F809126C1FC07902680FE037F91
26C3E0039026C1F0017F00039026C7C0019038C3E0006CD9CF00DAE7808002DE6D01EFC7
127F02DC15EE02FC03FE814A5D4A5DA34A5DB3A8B6D8C07F9026FFE03FB512F0A55C2E7C
AD63>I<903A7FC001FFC0B5010F13F8033F13FE92B6FC9126C1FC077F9126C3E0037F00
039038C7C0016CD9CF008002DE7F14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B2E7C
AD42>I<EC0FFF91B512F0010714FE011F6E7E90263FFC037F903AFFE0007FF0480180EB
1FF84890C76C7E48486E7E000F824980001F1780003F17C04980A2007F17E0A300FF17F0
AA007F17E0A46C6C4A13C0A2001F17806D5C000F17006C6C4A5A6C6D495A6C6D495A6C6D
495A903A7FFC03FFE0011FB6128001074AC7FC010014F0020F90C8FC342E7DAD3B>I<90
397FC00FFCB590387FFFC002C3B512F002CF14FC9139DFF01FFF9126FF80077F00034948
6C7F6C01F801007F4A814A6E7E717EA284171FA284A2831980AA19005FA260A24D5AA24D
5A806E4A5A6E495B6E495B6E010F5B9226E03FFEC7FC02EFB55A02E314F002E01480DB1F
F8C8FC92CAFCAFB612C0A539427CAD42>I<9039FF803F80B5EBFFF0028313FC02877F91
388FC3FF15070003D99E0F13806C13BC14B814F814F06F1300A24A6C5AED00F893C7FCA2
5CB3A6B612E0A5292E7CAD31>114 D<D90FFF13E0017F13E348B6FC1207380FF801391F
C0003F4848130F90C712075A15035AA27F7F01F090C7FC13FEEBFFF86CEBFFC015F06C14
FC6C14FF6C15806C15C06C15E0C615F0133F010314F8EB001F020013FC151F0078140F00
F8140715037EA26C15F8A27E6DEB07F06D130F01F0EB1FE001FCEBFFC090B61280D8FC7F
EBFE00D8F81F13F8D8E0031380262E7CAD2F>I<EB01F0A61303A31307A3130FA2131F13
3FA2137FEA01FF5A000F90B512E0B7FCA4C601F0C7FCB3A516F8A9017FEB01F014F8013F
EB03E014FC90391FFE0FC06DB512800103140001005BEC1FF025427EC12E>I<D97FE0EC
3FF0B5EC7FFFA5000315016C81B3A85EA35E6C5DEE0F7F017F141F6E013E7FD93FFC01FC
EBFFE06DB512F8010714E0010114809039003FFE003B2E7CAD42>I<B649B5FCA5000301
E09038001FC06C6DEC0F80171F6C17006E5C017F153E6E147E013F157C6E14FC011F5D6E
13016D5DED80036D5D15C016076D5DEDE00F6D5DEDF01F6D92C7FC6F5A027F133EEDFC7E
023F137CEDFEFC021F5B15FFA26E5BA26E5BA26E5BA26E5BA26E90C8FCA2157E153C382E
7DAD3F>I<B60007B539E003FFFEA500039027C0001FFCC7EA3FC06E010FED1F806C1A00
836E01075D6C4B6C143E6E177E017F187C4C7F6E17FC013F4A6D5B6E013E1401011F04E0
5B167E6ED97C7F13036D02FC01F05B922680F83F13076D04F85B15819226C1F01F130F6D
01C302FC5B9226E3E00F131F6D04FE90C7FC15E79226F7C0075B6D01FFECFF3E4C6C137E
6E5EA24C7E6E5E4B7F021F5EA24B147F020F5E4B143F02075EA26E486E5A6E486EC8FC4F
2E7DAD56>I<007FB5D8800FB5FCA528007FF8000190C7FC6E14FC6D6C495A6D6C495A6D
5D6D6D485A6F485A6DEBE03F6D6D48C8FC6DEBF8FE91387FF9FC6EB45A5E6E5B6E5B8080
6E7F82824A7F825C91380FEFFFDA1FCF7FDA3F877FDA7F037FECFE0149486C7F4A6D7E49
488049486D7E010F6E7E49487F49486D7F01FF6E7FB500F8013FEBFFC0A53A2E7EAD3F>
I<007FB56C90B51280A5000101F0C7380FE0006C6D6E5A170F017F5E6E141F013F93C7FC
6E5C011F153E6E147E6D157C6F13FC6D5DEDC0016D5D15E016036D5DEDF0076D5DEDF80F
027F5CEDFC1F023F91C8FC6F5A021F133EEDFF7E6E137C16FCA26E5BA26E5BA26E5BA26E
5BA26F5AA26FC9FCA3153E157E157C15FCD81F805B383FC001D87FE05B38FFF0035D1407
4A5A4A5A143F6C4848CAFCEB43FE383FFFF86C5B000713C0D801FECBFC39427EAD3F>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 176 1
176 1 bop 25 160 a Fn(Computational)42 b(Learning)f(Theory)1750
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1750 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fm(What)30 b(general)f(la)n(ws)h(constrain)g(inductiv)n(e)h(learning?)0
692 y(W)-7 b(e)29 b(seek)h(theory)f(to)h(relate:)40 837
y Fl(\017)21 b Fm(Probabilit)n(y)31 b(of)e(successful)h(learning)40
982 y Fl(\017)21 b Fm(Num)n(b)r(er)26 b(of)j(training)i(examples)40
1128 y Fl(\017)21 b Fm(Complexit)n(y)30 b(of)f(h)n(yp)r(othesis)i
(space)40 1273 y Fl(\017)21 b Fm(Accuracy)29 b(to)g(whic)n(h)g(target)h
(concept)g(is)104 1377 y(appro)n(ximated)40 1522 y Fl(\017)21
b Fm(Manner)28 b(in)i(whic)n(h)f(training)h(examples)f(presen)n(ted)0
2748 y Fk(176)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 177 2
177 2 bop 25 155 a Fn(Protot)m(ypical)44 b(Concept)f(Learning)h(T)-10
b(ask)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 543 a
0 0 0 setrgbcolor
 0 543
a 40 637 a Fl(\017)21 b Fh(Giv)m(en:)125 776 y({)g Fm(Instances)30
b Fg(X)7 b Fm(:)38 b(P)n(ossible)30 b(da)n(ys,)e(eac)n(h)h(describ)r
(ed)h(b)n(y)195 880 y(the)f(attributes)i Ff(Sky,)g(A)n(irT)-7
b(emp,)32 b(Humidity,)195 984 y(Wind,)g(Water,)f(F)-7
b(or)l(e)l(c)l(ast)125 1102 y Fh({)21 b Fm(T)-7 b(arget)29
b(function)i Fg(c)p Fm(:)38 b Fg(E)5 b(nj)g(oy)s(S)g(por)r(t)24
b Fm(:)f Fg(X)31 b Fl(!)24 b(f)p Fm(0)p Fg(;)15 b Fm(1)p
Fl(g)125 1221 y Fh({)21 b Fm(Hyp)r(otheses)30 b Fg(H)7
b Fm(:)38 b(Conjunctions)30 b(of)f(literals.)41 b(E.g.)657
1354 y Fl(h)p Fm(?)p Fg(;)14 b(C)6 b(ol)r(d;)13 b(H)7
b(ig)s(h;)13 b Fm(?)p Fg(;)h Fm(?)p Fg(;)g Fm(?)p Fl(i)p
Fg(:)125 1494 y Fh({)21 b Fm(T)-7 b(raining)30 b(examples)f
Fg(D)r Fm(:)39 b(P)n(ositiv)n(e)31 b(and)d(negativ)n(e)195
1598 y(examples)h(of)g(the)h(target)f(function)600 1730
y Fl(h)p Fg(x)682 1743 y Fe(1)715 1730 y Fg(;)14 b(c)p
Fm(\()p Fg(x)872 1743 y Fe(1)905 1730 y Fm(\))p Fl(i)p
Fg(;)h(:)f(:)h(:)f Fl(h)p Fg(x)1207 1743 y Fd(m)1262
1730 y Fg(;)g(c)p Fm(\()p Fg(x)1419 1743 y Fd(m)1475
1730 y Fm(\))p Fl(i)40 1871 y(\017)21 b Fh(Determine:)125
2010 y({)g Fm(A)28 b(h)n(yp)r(othesis)j Fg(h)d Fm(in)h
Fg(H)36 b Fm(suc)n(h)28 b(that)h Fg(h)p Fm(\()p Fg(x)p
Fm(\))c(=)f Fg(c)p Fm(\()p Fg(x)p Fm(\))30 b(for)195
2114 y(all)h Fg(x)e Fm(in)g Fg(D)r Fm(?)125 2232 y Fh({)21
b Fm(A)28 b(h)n(yp)r(othesis)j Fg(h)d Fm(in)h Fg(H)36
b Fm(suc)n(h)28 b(that)h Fg(h)p Fm(\()p Fg(x)p Fm(\))c(=)f
Fg(c)p Fm(\()p Fg(x)p Fm(\))30 b(for)195 2336 y(all)h
Fg(x)e Fm(in)g Fg(X)7 b Fm(?)0 2748 y Fk(177)175 b(lecture)16
b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p
Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)
i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 178 3
178 3 bop 25 160 a Fn(Sample)41 b(Complexit)m(y)1079
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1079 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fm(Ho)n(w)28 b(man)n(y)f(training)k(examples)e(are)g(su\016cien)n(t)g
(to)h(learn)0 642 y(the)f(target)h(concept?)16 800 y(1.)21
b(If)29 b(learner)g(prop)r(oses)g(instances,)h(as)f(queries)h(to)104
903 y(teac)n(her)131 1049 y Fl(\017)21 b Fm(Learner)28
b(prop)r(oses)h(instance)h Fg(x)p Fm(,)f(teac)n(her)g(pro)n(vides)195
1153 y Fg(c)p Fm(\()p Fg(x)p Fm(\))16 1298 y(2.)21 b(If)29
b(teac)n(her)g(\(who)g(kno)n(ws)g Fg(c)p Fm(\))g(pro)n(vides)h
(training)104 1402 y(examples)131 1547 y Fl(\017)21 b
Fm(teac)n(her)29 b(pro)n(vides)h(sequence)f(of)g(examples)h(of)f(form)
195 1651 y Fl(h)p Fg(x;)15 b(c)p Fm(\()p Fg(x)p Fm(\))p
Fl(i)16 1796 y Fm(3.)21 b(If)29 b(some)f(random)f(pro)r(cess)i(\(e.g.,)
g(nature\))g(prop)r(oses)104 1900 y(instances)131 2045
y Fl(\017)21 b Fm(instance)30 b Fg(x)f Fm(generated)h(randomly)-7
b(,)28 b(teac)n(her)195 2149 y(pro)n(vides)h Fg(c)p Fm(\()p
Fg(x)p Fm(\))0 2748 y Fk(178)175 b(lecture)16 b(slides)h(for)e(textb)q
(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747
y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 179 4
179 4 bop 25 160 a Fn(Sample)41 b(Complexit)m(y:)54 b(1)1224
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1224 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fm(Learner)28 b(prop)r(oses)h(instance)h Fg(x)p Fm(,)f(teac)n(her)g
(pro)n(vides)h Fg(c)p Fm(\()p Fg(x)p Fm(\))0 647 y(\(assume)e
Fg(c)h Fm(is)h(in)f(learner's)g(h)n(yp)r(othesis)i(space)e
Fg(H)7 b Fm(\))0 800 y(Optimal)30 b(query)f(strategy:)40
b(pla)n(y)29 b(20)g(questions)40 946 y Fl(\017)21 b Fm(pic)n(k)30
b(instance)g Fg(x)f Fm(suc)n(h)f(that)h(half)h(of)f(h)n(yp)r(otheses)h
(in)104 1049 y Fg(V)19 b(S)34 b Fm(classify)d Fg(x)e
Fm(p)r(ositiv)n(e,)i(half)f(classify)i Fg(x)d Fm(negativ)n(e)40
1195 y Fl(\017)21 b Fm(When)29 b(this)h(is)f(p)r(ossible,)i(need)e
Fl(d)p Fm(log)1307 1214 y Fe(2)1354 1195 y Fl(j)p Fg(H)7
b Fl(je)28 b Fm(queries)i(to)104 1298 y(learn)f Fg(c)40
1444 y Fl(\017)21 b Fm(when)29 b(not)g(p)r(ossible,)h(need)f(ev)n(en)g
(more)0 2748 y Fk(179)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)
g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 180 5
180 5 bop 25 160 a Fn(Sample)41 b(Complexit)m(y:)54 b(2)1224
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1224 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fm(T)-7 b(eac)n(her)29 b(\(who)g(kno)n(ws)g Fg(c)p Fm(\))g(pro)n(vides)
g(training)i(examples)0 647 y(\(assume)d Fg(c)h Fm(is)h(in)f(learner's)
g(h)n(yp)r(othesis)i(space)e Fg(H)7 b Fm(\))0 800 y(Optimal)30
b(teac)n(hing)g(strategy:)39 b(dep)r(ends)29 b(on)g Fg(H)35
b Fm(used)29 b(b)n(y)0 904 y(learner)0 1058 y(Consider)g(the)h(case)f
Fg(H)h Fm(=)f(conjunctions)h(of)f(up)g(to)g Fg(n)0 1161
y Fm(b)r(o)r(olean)h(literal)q(s)h(and)e(their)h(negations)104
1307 y(e.g.,)f(\()p Fg(Air)r(T)12 b(emp)24 b Fm(=)g Fg(W)12
b(ar)r(m)p Fm(\))20 b Fl(^)f Fm(\()p Fg(W)12 b(ind)24
b Fm(=)g Fg(S)5 b(tr)r(ong)s Fm(\),)104 1411 y(where)29
b Fg(Air)r(T)12 b(emp;)i(W)e(ind;)h(:)i(:)f(:)29 b Fm(eac)n(h)f(ha)n(v)
n(e)h(2)f(p)r(ossible)104 1514 y(v)-5 b(alues.)40 1672
y Fl(\017)21 b Fm(if)30 b Fg(n)e Fm(p)r(ossible)j(b)r(o)r(olean)f
(attributes)h(in)e Fg(H)7 b Fm(,)29 b Fg(n)18 b Fm(+)i(1)104
1776 y(examples)29 b(su\016ce)40 1921 y Fl(\017)21 b
Fm(wh)n(y?)0 2748 y Fk(180)175 b(lecture)16 b(slides)h(for)e(textb)q(o)
q(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 181 6
181 6 bop 25 160 a Fn(Sample)41 b(Complexit)m(y:)54 b(3)1224
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1224 160 a 0 321 1947 2 v 0 468 a
0 0 0 setrgbcolor
 0 468 a 63 x
Fm(Giv)n(en:)40 672 y Fl(\017)21 b Fm(set)29 b(of)g(instances)h
Fg(X)40 816 y Fl(\017)21 b Fm(set)29 b(of)g(h)n(yp)r(otheses)h
Fg(H)40 960 y Fl(\017)21 b Fm(set)29 b(of)g(p)r(ossible)i(target)f
(concepts)f Fg(C)40 1103 y Fl(\017)21 b Fm(training)29
b(instances)g(generated)f(b)n(y)g(a)f(\014xed,)h(unkno)n(wn)104
1207 y(probabilit)n(y)j(distribution)h Fl(D)f Fm(o)n(v)n(er)d
Fg(X)0 1348 y Fm(Learner)g(observ)n(es)h(a)g(seqence)h
Fg(D)h Fm(of)e(training)i(examples)0 1452 y(of)e(form)f
Fl(h)p Fg(x;)15 b(c)p Fm(\()p Fg(x)p Fm(\))p Fl(i)p Fm(,)30
b(for)f(some)f(target)h(concept)h Fg(c)24 b Fl(2)g Fg(C)40
1592 y Fl(\017)d Fm(instances)30 b Fg(x)f Fm(are)g(dra)n(wn)f(from)f
(distribution)32 b Fl(D)40 1736 y(\017)21 b Fm(teac)n(her)29
b(pro)n(vides)g(target)h(v)-5 b(alue)30 b Fg(c)p Fm(\()p
Fg(x)p Fm(\))h(for)d(eac)n(h)0 1877 y(Learner)g(m)n(ust)g(output)h(a)g
(h)n(yp)r(othesis)h Fg(h)e Fm(estimating)j Fg(c)40 2018
y Fl(\017)21 b Fg(h)28 b Fm(is)i(ev)-5 b(aluated)31 b(b)n(y)d(its)i(p)r
(erformance)e(on)h(subsequen)n(t)104 2122 y(instances)h(dra)n(wn)e
(according)i(to)f Fl(D)0 2262 y Fm(Note:)39 b(probabilistic)32
b(instances,)e(noise-free)0 2366 y(classi\014cati)q(ons)0
2748 y Fk(181)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 182 7
182 7 bop 25 160 a Fn(T)-10 b(rue)40 b(Error)f(of)i(a)e(Hyp)s(othesis)
1480 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1480 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
223 478 a
 23681433 13261599 10919772 20918599 29338664 31246336 startTexFig
 223 478 a
%%BeginDocument: ./bookps/pac-err.ps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 31 31 583 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -198 756 1 1018 725 26 0 1 3 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
0 R
0 G
300 Ar
0 J 0 j 0.8 w 10 M []0 d
%AI3_Note:
0 D
0 XR
441.8033 320.1729 m
441.8033 454.9413 l
171.3963 454.9413 l
171.3963 320.1729 l
441.8033 320.1729 l
s
353 397.92 m
353 419.5584 325.7616 437.12 292.2 437.12 c
258.6384 437.12 231.4 419.5584 231.4 397.92 c
231.4 376.2816 258.6384 358.72 292.2 358.72 c
325.7616 358.72 353 376.2816 353 397.92 c
S
368.24 391.44 m
368.24 415.728 343.152 435.44 312.24 435.44 c
281.328 435.44 256.24 415.728 256.24 391.44 c
256.24 367.152 281.328 347.44 312.24 347.44 c
343.152 347.44 368.24 367.152 368.24 391.44 c
S
0 To
1.0182 0 0 1.0182 275.3992 383.5416 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Times-Roman 11 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 4 Xb
0 0 1 33 Xe
0 0 1 65 Xe
0 0 1 97 Xe
0 0 1 129 Xe
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(+) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 312.9992 407.5416 0 Tp
TP
0 Tr
(+) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 383.3992 425.9416 0 Tp
TP
0 Tr
(-) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 388.9992 346.7416 0 Tp
TP
0 Tr
(-) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 235.3992 423.5304 0 Tp
TP
0 Tr
/_Times-Italic 11 Tf
(c) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 354.5992 423.5304 0 Tp
TP
0 Tr
(h) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w 10 M
219.3992 352.3 m
243.3992 392.3 l
S
0 O
0 g
1 w 4 M
1 XR
244.2477 393.7142 m
238.0894 387.5558 l
241.7119 385.3822 l
244.2477 393.7142 l
f
0 R
0 G
0.8 w 10 M
0 XR
243.3992 392.3 m
238.7344 387.6352 l
241.4784 385.9888 l
243.3992 392.3 l
s
219.3992 352.3 m
306.5992 352.3 l
S
0 O
0 g
1 w 4 M
1 XR
308.2484 352.3 m
299.7992 354.4123 l
299.7992 350.1877 l
308.2484 352.3 l
f
0 R
0 G
0.8 w 10 M
0 XR
306.5992 352.3 m
300.1992 353.9 l
300.1992 350.7 l
306.5992 352.3 l
s
0 To
1.0182 0 0 1.0182 265 463.5416 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Times-Roman 11 Tf
(Instance space ) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 336.2 463.5416 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 336.2 463.5416 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 336.2 463.5304 0 Tp
TP
0 Tr
/_Times-Italic 11 Tf
(X) Tx 
(\r) TX 
TO
0 To
1.0182 0 0 1.0182 197 427.5416 0 Tp
TP
0 Tr
/_Times-Roman 11 Tf
(-) Tx 
(\r) TX 
TO
0 To
0.96 0 0 0.96 176.2 337.5928 0 Tp
TP
0 Tr
/_Times-Roman 10 Tf
(Where) Tx 
(\r) TX 
TO
0 To
0.96 0 0 0.96 206.2 337.5832 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
(c) Tx 
(\r) TX 
TO
0 To
0.96 0 0 0.96 176.2 327.9928 0 Tp
TP
0 Tr
/_Times-Roman 10 Tf
(and) Tx 
(\r) TX 
TO
0 To
0.96 0 0 0.96 193.4 327.9832 0 Tp
TP
0 Tr
/_Times-Italic 10 Tf
(h) Tx 
(\r) TX 
TO
0 To
0.96 0 0 0.96 201 327.9928 0 Tp
TP
0 Tr
/_Times-Roman 10 Tf
(disagree) Tx 
(\r) TX 
TO
U
U
1 Ap
800 Ar
446 318 m
446 475 L
166 475 L
166 318 L
446 318 L
n
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 104 1526 a Fh(De\014nition:)i Fm(The)29 b Fh(true)34
b(error)28 b Fm(\(denoted)104 1630 y Fg(er)r(r)r(or)307
1643 y Fc(D)357 1630 y Fm(\()p Fg(h)p Fm(\)\))h(of)h(h)n(yp)r(othesis)g
Fg(h)e Fm(with)i(resp)r(ect)g(to)104 1734 y(target)g(concept)f
Fg(c)g Fm(and)g(distribution)i Fl(D)h Fm(is)d(the)104
1837 y(probabilit)n(y)i(that)f Fg(h)e Fm(will)k(misclassify)f(an)d
(instance)104 1941 y(dra)n(wn)g(at)h(random)e(according)i(to)h
Fl(D)r Fm(.)429 2095 y Fg(er)r(r)r(or)632 2108 y Fc(D)682
2095 y Fm(\()p Fg(h)p Fm(\))25 b Fl(\021)39 b Fm(Pr)914
2142 y Fd(x)p Fc(2D)1036 2095 y Fm([)p Fg(c)p Fm(\()p
Fg(x)p Fm(\))25 b Fl(6)p Fm(=)f Fg(h)p Fm(\()p Fg(x)p
Fm(\)])0 2748 y Fk(182)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q
(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 183 8
183 8 bop 25 170 a Fn(Tw)m(o)39 b(Notions)i(of)g(Error)1191
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1191 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Ff(T)-7 b(r)l(aining)32 b(err)l(or)d Fm(of)g(h)n(yp)r(othesis)h
Fg(h)e Fm(with)i(resp)r(ect)g(to)0 642 y(target)g(concept)f
Fg(c)40 787 y Fl(\017)21 b Fm(Ho)n(w)28 b(often)i Fg(h)p
Fm(\()p Fg(x)p Fm(\))24 b Fl(6)p Fm(=)g Fg(c)p Fm(\()p
Fg(x)p Fm(\))30 b(o)n(v)n(er)f(training)h(instances)0
982 y Ff(T)-7 b(rue)31 b(err)l(or)e Fm(of)g(h)n(yp)r(othesis)h
Fg(h)e Fm(with)i(resp)r(ect)g(to)g Fg(c)40 1128 y Fl(\017)21
b Fm(Ho)n(w)28 b(often)i Fg(h)p Fm(\()p Fg(x)p Fm(\))24
b Fl(6)p Fm(=)g Fg(c)p Fm(\()p Fg(x)p Fm(\))30 b(o)n(v)n(er)f(future)g
(random)104 1231 y(instances)0 1476 y(Our)f(concern:)40
1622 y Fl(\017)21 b Fm(Can)29 b(w)n(e)f(b)r(ound)h(the)g(true)g(error)f
(of)h Fg(h)g Fm(giv)n(en)g(the)104 1725 y(training)h(error)e(of)h
Fg(h)p Fm(?)40 1871 y Fl(\017)21 b Fm(First)30 b(consider)f(when)g
(training)i(error)d(of)h Fg(h)f Fm(is)i(zero)104 1974
y(\(i.e.,)g Fg(h)23 b Fl(2)i Fg(V)19 b(S)577 1987 y Fd(H)r(;D)698
1974 y Fm(\))0 2748 y Fk(183)175 b(lecture)16 b(slides)h(for)e(textb)q
(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747
y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 184 9
184 9 bop 25 160 a Fn(Exhausting)40 b(the)h(V)-10 b(ersion)41
b(Space)1617 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1617 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor

0 474 a 223 478 a
 23681433 13261599 11051335 27233648 29009756 37429821 startTexFig
 223 478 a
%%BeginDocument: ./bookps/pac-vs-exhausted.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.997076 0 0 0.846535 207.01 514.762 ] concat
%I 4
5 6
5 205
344 205
344 6
4 Poly
End

Begin %I CBSpl
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.42928 0 0 1.18842 -132.181 81.959 ] concat
%I 7
295 436
346 377
403 395
372 424
407 493
342 490
380 462
7 CBSpl
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I p u
%I t
[ 1 0 0 1 84.046 271.088 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/imes-Roman 12 SetF
%I t
[ 1 0 0 1 260 323 ] concat
%I
[
(VS)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-10-*-*-*-*-*-*-*
/ourier 10 SetF
%I t
[ 1 0 0 1 276.002 315.003 ] concat
%I
[
(H,D)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 309.472 346.569 ] concat
%I
127 433 2 2 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 420.936 368.067 ] concat
%I
127 433 2 2 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 220.496 430.529 ] concat
%I
127 433 2 2 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 409.938 438.538 ] concat
%I
127 433 2 2 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 330.461 411.042 ] concat
%I
127 433 2 2 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.499815 0 0 0.499815 180.014 358.559 ] concat
%I
127 433 2 2 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 137 -216.5 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 861.5 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 861.5 ] concat
%I
[
(=.1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -278 11.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 839 ] concat
%I
[
(=.2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 839 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 178.5 -235.5 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 49.5 32.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 829 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 829 ] concat
%I
[
(=.2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -227 82.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 768 ] concat
%I
[
(=0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 768 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -9 -294 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 240 152.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 709 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 709 ] concat
%I
[
(=.1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -36.5 50.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 800 ] concat
%I
[
(=0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 800 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -49 -288 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 145 82 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 779.5 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 779.5 ] concat
%I
[
(=.3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -133 32 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 818.5 ] concat
%I
[
(=.1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 818.5 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 240.5 -278.5 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 97 67 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 794.5 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 794.5 ] concat
%I
[
(=.2)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -181 66.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 784 ] concat
%I
[
(=.3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 784 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 134 -208.5 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 192.5 116 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 146 745.5 ] concat
%I
[
(error)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 173 745.5 ] concat
%I
[
(=.3)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -85.5 -4 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 434 854.5 ] concat
%I
[
(r)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 441 854.5 ] concat
%I
[
(=.4)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 322.5 708.5 ] concat
%I
[
(Hypothesis space)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 426.5 708.5 ] concat
%I
[
(H)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 234 1422 a Fm(\()p Fg(r)27 b Fm(=)i(training)h(error,)e
Fg(er)r(r)r(or)f Fm(=)h(true)h(error\))104 1630 y Fh(De\014nition:)41
b Fm(The)29 b(v)n(ersion)g(space)g Fg(V)20 b(S)1421 1643
y Fd(H)r(;D)1570 1630 y Fm(is)30 b(said)104 1734 y(to)e(b)r(e)g
Fg(\017)p Fm(-)p Fh(exhausted)h Fm(with)g(resp)r(ect)f(to)g
Fg(c)g Fm(and)f Fl(D)r Fm(,)i(if)104 1837 y(ev)n(ery)g(h)n(yp)r
(othesis)h Fg(h)f Fm(in)g Fg(V)20 b(S)1057 1850 y Fd(H)r(;D)1206
1837 y Fm(has)29 b(error)f(less)104 1941 y(than)h Fg(\017)f
Fm(with)i(resp)r(ect)g(to)g Fg(c)e Fm(and)h Fl(D)r Fm(.)443
2095 y(\()p Fl(8)p Fg(h)23 b Fl(2)h Fg(V)c(S)802 2108
y Fd(H)r(;D)922 2095 y Fm(\))30 b Fg(er)r(r)r(or)1188
2108 y Fc(D)1238 2095 y Fm(\()p Fg(h)p Fm(\))24 b Fg(<)g(\017)0
2748 y Fk(184)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 185 10
185 10 bop 25 156 a Fm(Ho)n(w)28 b(man)n(y)f(examples)j(will)h
Fg(\017)p Fm(-exhaust)e(the)h(VS?)1701 156 y
0.8666 0.03137 0.02352 setrgbcolor
 1701 156
a 0 321 1947 2 v 0 452 a
0 0 0 setrgbcolor
 0 452 a 69 x Fh(Theorem:)39
b Fm([Haussler,)29 b(1988].)104 649 y(If)g(the)g(h)n(yp)r(othesis)h
(space)f Fg(H)36 b Fm(is)29 b(\014nite,)h(and)f Fg(D)i
Fm(is)f(a)104 753 y(sequence)g(of)f Fg(m)23 b Fl(\025)h
Fm(1)29 b(indep)r(enden)n(t)h(random)104 857 y(examples)f(of)g(some)f
(target)h(concept)h Fg(c)p Fm(,)f(then)g(for)104 961
y(an)n(y)f(0)c Fl(\024)g Fg(\017)g Fl(\024)g Fm(1,)29
b(the)g(probabilit)n(y)i(that)f(the)104 1065 y(v)n(ersion)f(space)g
(with)h(resp)r(ect)g(to)g Fg(H)35 b Fm(and)28 b Fg(D)k
Fm(is)d(not)104 1168 y Fg(\017)p Fm(-exhausted)g(\(with)i(resp)r(ect)f
(to)f Fg(c)p Fm(\))g(is)h(less)g(than)828 1302 y Fl(j)p
Fg(H)7 b Fl(j)p Fg(e)995 1267 y Fc(\000)p Fd(\017m)0
1493 y Fm(In)n(teresting!)40 b(This)29 b(b)r(ounds)g(the)g(probabilit)n
(y)i(that)f(an)n(y)0 1597 y(consisten)n(t)g(learner)g(will)h(output)f
(a)e(h)n(yp)r(othesis)j Fg(h)d Fm(with)0 1701 y Fg(er)r(r)r(or)r
Fm(\()p Fg(h)p Fm(\))d Fl(\025)f Fg(\017)0 1843 y Fm(If)29
b(w)n(e)g(w)n(an)n(t)f(to)i(this)f(probabilit)n(y)j(to)d(b)r(e)g(b)r
(elo)n(w)h Fg(\016)749 1994 y Fl(j)p Fg(H)7 b Fl(j)p
Fg(e)916 1959 y Fc(\000)p Fd(\017m)1065 1994 y Fl(\024)24
b Fg(\016)0 2128 y Fm(then)526 2277 y Fg(m)g Fl(\025)722
2218 y Fm(1)p 722 2256 44 2 v 726 2336 a Fg(\017)770
2277 y Fm(\(ln)15 b Fl(j)p Fg(H)7 b Fl(j)19 b Fm(+)g(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 2748 y Fk(185)175 b(lecture)16 b(slides)h(for)e
(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175
2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 186 11
186 11 bop 25 155 a Fn(Learning)83 b(Conjunctions)g(of)e(Bo)s(olean)25
279 y(Literals)456 279 y
0.8666 0.03137 0.02352 setrgbcolor
 456 279 a 0 414 1947 2 v 0 567
a
0 0 0 setrgbcolor
 0 567 a 64 x Fm(Ho)n(w)28 b(man)n(y)f(examples)j(are)e(su\016cien)n
(t)i(to)f(assure)g(with)0 734 y(probabilit)n(y)i(at)f(least)g(\(1)20
b Fl(\000)f Fg(\016)s Fm(\))29 b(that)104 880 y(ev)n(ery)g
Fg(h)g Fm(in)g Fg(V)19 b(S)632 893 y Fd(H)r(;D)782 880
y Fm(satis\014es)30 b Fg(er)r(r)r(or)1302 893 y Fc(D)1352
880 y Fm(\()p Fg(h)p Fm(\))24 b Fl(\024)g Fg(\017)0 1075
y Fm(Use)k(our)h(theorem:)526 1243 y Fg(m)24 b Fl(\025)722
1184 y Fm(1)p 722 1222 44 2 v 726 1302 a Fg(\017)770
1243 y Fm(\(ln)15 b Fl(j)p Fg(H)7 b Fl(j)19 b Fm(+)g(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 1415 y(Supp)r(ose)29 b Fg(H)35 b
Fm(con)n(tains)30 b(conjunctions)g(of)f(constrain)n(ts)h(on)0
1519 y(up)e(to)i Fg(n)e Fm(b)r(o)r(olean)i(attributes)h(\(i.e.,)f
Fg(n)f Fm(b)r(o)r(olean)h(literals\))q(.)0 1623 y(Then)f
Fl(j)p Fg(H)7 b Fl(j)23 b Fm(=)h(3)509 1592 y Fd(n)547
1623 y Fm(,)29 b(and)549 1812 y Fg(m)23 b Fl(\025)744
1754 y Fm(1)p 744 1791 V 748 1871 a Fg(\017)792 1812
y Fm(\(ln)16 b(3)955 1777 y Fd(n)1012 1812 y Fm(+)j(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 1966 y(or)535 2133 y Fg(m)k Fl(\025)730
2075 y Fm(1)p 730 2113 V 734 2192 a Fg(\017)778 2133
y Fm(\()p Fg(n)15 b Fm(ln)g(3)k(+)g(ln)q(\(1)p Fg(=\016)s
Fm(\)\))0 2748 y Fk(186)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q
(ok)g Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 187 12
187 12 bop 25 162 a Fn(Ho)m(w)39 b(Ab)s(out)i Fg(E)5
b(nj)g(oy)s(S)g(por)r(t)p Fn(?)1241 162 y
0.8666 0.03137 0.02352 setrgbcolor
 1241 162 a
0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 526 642 a Fg(m)24 b Fl(\025)722
584 y Fm(1)p 722 621 44 2 v 726 701 a Fg(\017)770 642
y Fm(\(ln)15 b Fl(j)p Fg(H)7 b Fl(j)19 b Fm(+)g(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 820 y(If)28 b Fg(H)33 b Fm(is)28
b(as)g(giv)n(en)g(in)g Fg(E)5 b(nj)g(oy)s(S)g(por)r(t)27
b Fm(then)g Fl(j)p Fg(H)7 b Fl(j)24 b Fm(=)g(973,)j(and)525
1009 y Fg(m)c Fl(\025)720 951 y Fm(1)p 720 988 V 724
1068 a Fg(\017)768 1009 y Fm(\(ln)16 b(973)j(+)g(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 1236 y(...)38 b(if)30 b(w)n(an)n(t)e(to)i(assure)e
(that)i(with)g(probabilit)n(y)h(95\045,)d Fg(V)20 b(S)0
1340 y Fm(con)n(tains)30 b(only)g(h)n(yp)r(otheses)f(with)h
Fg(er)r(r)r(or)1364 1353 y Fc(D)1414 1340 y Fm(\()p Fg(h)p
Fm(\))25 b Fl(\024)f Fg(:)p Fm(1,)k(then)0 1444 y(it)i(is)g(su\016cien)
n(t)f(to)g(ha)n(v)n(e)g Fg(m)f Fm(examples,)h(where)479
1628 y Fg(m)23 b Fl(\025)686 1570 y Fm(1)p 674 1607 67
2 v 674 1687 a Fg(:)p Fm(1)746 1628 y(\(ln)16 b(973)j(+)g(ln)q(\(1)p
Fg(=:)p Fm(05\)\))555 1806 y Fg(m)24 b Fl(\025)g Fm(10\(ln)15
b(973)20 b(+)f(ln)c(20\))596 1936 y Fg(m)24 b Fl(\025)f
Fm(10\(6)p Fg(:)p Fm(88)d(+)f(3)p Fg(:)p Fm(00\))802
2067 y Fg(m)k Fl(\025)h Fm(98)p Fg(:)p Fm(8)0 2748 y
Fk(187)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 188 13
188 13 bop 25 160 a Fn(P)-10 b(A)m(C)39 b(Learning)805
160 y
0.8666 0.03137 0.02352 setrgbcolor
 805 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(Consider)29
b(a)g(class)h Fg(C)k Fm(of)29 b(p)r(ossible)i(target)f(concepts)0
642 y(de\014ned)f(o)n(v)n(er)f(a)h(set)g(of)g(instances)h
Fg(X)36 b Fm(of)29 b(length)h Fg(n)p Fm(,)f(and)f(a)0
746 y(learner)h Fg(L)g Fm(using)g(h)n(yp)r(othesis)h(space)f
Fg(H)7 b Fm(.)104 903 y Ff(De\014nition:)40 b Fg(C)34
b Fm(is)c Fh(P)-8 b(A)m(C-learnable)30 b Fm(b)n(y)f Fg(L)f
Fm(using)104 1007 y Fg(H)35 b Fm(if)30 b(for)f(all)h
Fg(c)24 b Fl(2)h Fg(C)6 b Fm(,)28 b(distributions)k Fl(D)f
Fm(o)n(v)n(er)d Fg(X)7 b Fm(,)29 b Fg(\017)104 1111 y
Fm(suc)n(h)f(that)i(0)23 b Fg(<)h(\017)g(<)g Fm(1)p Fg(=)p
Fm(2,)29 b(and)f Fg(\016)k Fm(suc)n(h)d(that)104 1215
y(0)24 b Fg(<)g(\016)j(<)d Fm(1)p Fg(=)p Fm(2,)104 1339
y(learner)29 b Fg(L)g Fm(will)i(with)f(probabilit)n(y)i(at)d(least)h
(\(1)20 b Fl(\000)f Fg(\016)s Fm(\))104 1443 y(output)29
b(a)g(h)n(yp)r(othesis)h Fg(h)23 b Fl(2)i Fg(H)35 b Fm(suc)n(h)28
b(that)104 1547 y Fg(er)r(r)r(or)307 1560 y Fc(D)357
1547 y Fm(\()p Fg(h)p Fm(\))c Fl(\024)g Fg(\017)p Fm(,)29
b(in)g(time)g(that)h(is)f(p)r(olynomial)i(in)104 1651
y(1)p Fg(=\017)p Fm(,)d(1)p Fg(=\016)s Fm(,)i Fg(n)e
Fm(and)g Fg(siz)t(e)p Fm(\()p Fg(c)p Fm(\).)0 2748 y
Fk(188)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 189 14
189 14 bop 25 160 a Fn(Agnostic)41 b(Learning)1014 160
y
0.8666 0.03137 0.02352 setrgbcolor
 1014 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(So)29
b(far,)f(assumed)g Fg(c)c Fl(2)g Fg(H)0 672 y Fm(Agnostic)30
b(learning)g(setting:)40 b(don't)29 b(assume)f Fg(c)c
Fl(2)g Fg(H)40 830 y Fl(\017)d Fm(What)29 b(do)g(w)n(e)g(w)n(an)n(t)f
(then?)125 975 y Fh({)21 b Fm(The)29 b(h)n(yp)r(othesis)h
Fg(h)f Fm(that)g(mak)n(es)f(few)n(est)i(errors)e(on)195
1079 y(training)j(data)40 1224 y Fl(\017)21 b Fm(What)29
b(is)h(sample)e(complexit)n(y)j(in)e(this)h(case?)493
1462 y Fg(m)23 b Fl(\025)722 1404 y Fm(1)p 688 1442 110
2 v 688 1522 a(2)p Fg(\017)766 1497 y Fe(2)803 1462 y
Fm(\(ln)16 b Fl(j)p Fg(H)7 b Fl(j)18 b Fm(+)h(ln)q(\(1)p
Fg(=\016)s Fm(\)\))0 1635 y(deriv)n(ed)30 b(from)d(Ho)r(e\013ding)j(b)r
(ounds:)228 1795 y Fg(P)12 b(r)r Fm([)p Fg(er)r(r)r(or)563
1808 y Fc(D)614 1795 y Fm(\()p Fg(h)p Fm(\))24 b Fg(>)g(er)r(r)r(or)
1048 1808 y Fd(D)1101 1795 y Fm(\()p Fg(h)p Fm(\))c(+)f
Fg(\017)p Fm(])24 b Fl(\024)g Fg(e)1537 1760 y Fc(\000)p
Fe(2)p Fd(m\017)1689 1738 y Fb(2)0 2748 y Fk(189)175
b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n
(arning)p Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f
(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 190 15
190 15 bop 25 160 a Fn(Shattering)41 b(a)f(Set)g(of)g(Instances)1569
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1569 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 104 592
a Ff(De\014nition:)g Fm(a)28 b Fh(dic)m(hotom)m(y)j Fm(of)e(a)g(set)h
Fg(S)j Fm(is)d(a)104 696 y(partition)h(of)e Fg(S)k Fm(in)n(to)d(t)n(w)n
(o)e(disjoin)n(t)j(subsets.)104 957 y Ff(De\014nition:)40
b Fm(a)28 b(set)i(of)f(instances)h Fg(S)k Fm(is)29 b
Fh(shattered)104 1061 y Fm(b)n(y)f(h)n(yp)r(othesis)j(space)e
Fg(H)35 b Fm(if)30 b(and)e(only)i(if)g(for)f(ev)n(ery)104
1165 y(dic)n(hotom)n(y)f(of)h Fg(S)34 b Fm(there)29 b(exists)i(some)c
(h)n(yp)r(othesis)104 1269 y(in)i Fg(H)35 b Fm(consisten)n(t)c(with)f
(this)g(dic)n(hotom)n(y)-7 b(.)0 2748 y Fk(190)175 b(lecture)16
b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p
Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)
i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 191 16
191 16 bop 25 170 a Fn(Three)40 b(Instances)f(Shattered)1438
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1438 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a -2 478
a
 30785863 20626522 197345 197345 15327150 10393518 startTexFig
 -2 478 a
%%BeginDocument: ./bookps/pac-shatter.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I p u
%I t
[ 1 0 0 1 -4.5 -78 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 86 16 ] concat
%I
62 178 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 49 -32 ] concat
%I
62 178 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.970142 0.242536 -0.242536 0.970142 173.023 -41.7226 ] concat
%I
62 178 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 13 -4 ] concat
%I
135 197 12 12 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -24 -52 ] concat
%I
135 197 12 12 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 54 -52 ] concat
%I
135 197 12 12 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 5 4 ] concat
%I
145 142 70 20 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.60642 -0.795145 0.795145 0.60642 -31.8414 198.184 ] concat
%I
145 142 70 20 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.613452 0.789732 -0.789732 0.613452 152.191 -31.6213 ] concat
%I
145 142 70 20 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 5 4 ] concat
%I
183 199 12 11 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 5 4 ] concat
%I
143 161 117 67 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 5 4 ] concat
%I
5 79 290 245 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 5 -1 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 91 196 ] concat
%I
[
(Instance space)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 186 196 ] concat
%I
[
(X)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fk(191)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 192 17
192 17 bop 25 155 a Fn(The)102 b(V)-10 b(apnik-Cherv)m(onenkis)102
b(Dimen-)25 279 y(sion)270 279 y
0.8666 0.03137 0.02352 setrgbcolor
 270 279 a 0 414 1947
2 v 0 567 a
0 0 0 setrgbcolor
 0 567 a 104 685 a Ff(De\014nition:)40 b Fm(The)29
b Fh(V)-8 b(apnik-Cherv)m(onenkis)104 788 y(dimension)p
Fm(,)30 b Fg(V)19 b(C)6 b Fm(\()p Fg(H)h Fm(\),)29 b(of)g(h)n(yp)r
(othesis)h(space)f Fg(H)104 892 y Fm(de\014ned)f(o)n(v)n(er)h(instance)
h(space)f Fg(X)36 b Fm(is)29 b(the)h(size)g(of)104 996
y(the)f(largest)h(\014nite)g(subset)f(of)g Fg(X)36 b
Fm(shattered)30 b(b)n(y)e Fg(H)7 b Fm(.)104 1100 y(If)29
b(arbitrarily)i(large)f(\014nite)g(sets)f(of)g Fg(X)36
b Fm(can)29 b(b)r(e)104 1204 y(shattered)g(b)n(y)g Fg(H)7
b Fm(,)28 b(then)h Fg(V)20 b(C)6 b Fm(\()p Fg(H)h Fm(\))24
b Fl(\021)g(1)p Fm(.)0 2748 y Fk(192)175 b(lecture)16
b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n(arning)p
Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)
i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 193 18
193 18 bop 25 155 a Fn(V)m(C)31 b(Dim.)51 b(of)32 b(Linear)h(Decision)h
(Surfaces)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 567 a
0 0 0 setrgbcolor
 0
567 a -2 571 a
 30785863 10159332 14208860 27167866 27825684 31706808 startTexFig
 -2 571 a
%%BeginDocument: ./bookps/pac-pts.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 413.625 433 ] concat
%I
185 256 4 4 Elli
End

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 423.625 443 ] concat
%I
185 256 4 4 Elli
End

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 433.625 453 ] concat
%I
185 256 4 4 Elli
End

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 194.625 433 ] concat
%I
185 256 4 4 Elli
End

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 224.625 472 ] concat
%I
185 256 4 4 Elli
End

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 254.625 443 ] concat
%I
185 256 4 4 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 510.625 529.5 ] concat
%I
[
(\( \))
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 240.625 498.5 ] concat
%I
31 91 131 51 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 311.625 529.5 ] concat
%I
[
(\( \))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 314.125 529.5 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 513.125 529.5 ] concat
%I
[
(b)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fk(193)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 194 19
194 19 bop 25 155 a Fn(Sample)32 b(Complexit)m(y)g(from)g(V)m(C)e
(Dimen-)25 279 y(sion)270 279 y
0.8666 0.03137 0.02352 setrgbcolor
 270 279 a 0 414 1947
2 v 0 567 a
0 0 0 setrgbcolor
 0 567 a 64 x Fm(Ho)n(w)e(man)n(y)f(randomly)i(dra)n(wn)f
(examples)h(su\016ce)g(to)0 734 y Fg(\017)p Fm(-exhaust)g
Fg(V)20 b(S)505 747 y Fd(H)r(;D)654 734 y Fm(with)30
b(probabilit)n(y)h(at)f(least)g(\(1)20 b Fl(\000)f Fg(\016)s
Fm(\)?)211 927 y Fg(m)k Fl(\025)406 868 y Fm(1)p 406
906 44 2 v 410 986 a Fg(\017)454 927 y Fm(\(4)15 b(log)656
946 y Fe(2)688 927 y Fm(\(2)p Fg(=\016)s Fm(\))21 b(+)e(8)p
Fg(V)h(C)6 b Fm(\()p Fg(H)h Fm(\))14 b(log)1439 946 y
Fe(2)1471 927 y Fm(\(13)p Fg(=\017)p Fm(\)\))0 2748 y
Fk(194)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 195 20
195 20 bop 25 170 a Fn(Mistak)m(e)40 b(Bounds)903 170
y
0.8666 0.03137 0.02352 setrgbcolor
 903 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(So)29
b(far:)38 b(ho)n(w)28 b(man)n(y)g(examples)h(needed)g(to)g(learn?)0
672 y(What)h(ab)r(out:)38 b(ho)n(w)29 b(man)n(y)e(mistak)n(es)i(b)r
(efore)0 776 y(con)n(v)n(ergence?)0 940 y(Let's)g(consider)h(similar)g
(setting)g(to)f(P)-7 b(A)n(C)28 b(learning:)40 1085 y
Fl(\017)21 b Fm(Instances)29 b(dra)n(wn)f(at)h(random)e(from)h
Fg(X)36 b Fm(according)29 b(to)104 1189 y(distribution)i
Fl(D)40 1334 y(\017)21 b Fm(Learner)28 b(m)n(ust)f(classify)32
b(eac)n(h)d(instance)h(b)r(efore)104 1438 y(receiving)h(correct)f
(classi\014cation)i(from)27 b(teac)n(her)40 1583 y Fl(\017)21
b Fm(Can)29 b(w)n(e)f(b)r(ound)h(the)g(n)n(um)n(b)r(er)e(of)i(mistak)n
(es)g(learner)104 1687 y(mak)n(es)f(b)r(efore)h(con)n(v)n(erging?)0
2748 y Fk(195)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Page: 196 21
196 21 bop 25 170 a Fn(Mistak)m(e)40 b(Bounds:)53 b(Find-S)1334
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1334 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fm(Consider)29 b(Find-S)g(when)g Fg(H)i Fm(=)d(conjun)n(tion)i(of)f(b)r
(o)r(olean)0 642 y(literals)104 787 y Fa(Find-S)p Fm(:)131
933 y Fl(\017)21 b Fm(Initiali)q(ze)32 b Fg(h)d Fm(to)g(the)g(most)f
(sp)r(eci\014c)j(h)n(yp)r(othesis)195 1036 y Fg(l)221
1049 y Fe(1)272 1036 y Fl(^)19 b(:)p Fg(l)431 1049 y
Fe(1)483 1036 y Fl(^)g Fg(l)585 1049 y Fe(2)636 1036
y Fl(^)g(:)p Fg(l)795 1049 y Fe(2)842 1036 y Fg(:)14
b(:)g(:)h(l)983 1049 y Fd(n)1039 1036 y Fl(^)20 b(:)p
Fg(l)1199 1049 y Fd(n)131 1161 y Fl(\017)h Fm(F)-7 b(or)29
b(eac)n(h)f(p)r(ositiv)n(e)k(training)e(instance)h Fg(x)202
1285 y Fh({)22 b Fm(Remo)n(v)n(e)28 b(from)f Fg(h)i Fm(an)n(y)f
(literal)k(that)e(is)f(not)273 1389 y(satis\014ed)h(b)n(y)e
Fg(x)131 1514 y Fl(\017)21 b Fm(Output)29 b(h)n(yp)r(othesis)h
Fg(h)p Fm(.)0 1719 y(Ho)n(w)e(man)n(y)e(mistak)n(es)j(b)r(efore)g(con)n
(v)n(erging)g(to)g(correct)g Fg(h)p Fm(?)0 2748 y Fk(196)175
b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n
(arning)p Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f
(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 197 22
197 22 bop 25 155 a Fn(Mistak)m(e)37 b(Bounds:)53 b(Halving)38
b(Algorithm)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 567 a
0 0 0 setrgbcolor

0 567 a 64 x Fm(Consider)29 b(the)h(Halving)g(Algorithm:)40
776 y Fl(\017)21 b Fm(Learn)28 b(concept)i(using)f(v)n(ersion)h(space)
104 880 y Fa(Candid)n(a)-6 b(te-Elimina)g(tion)27 b Fm(algorithm)40
1025 y Fl(\017)21 b Fm(Classify)31 b(new)e(instances)h(b)n(y)f(ma)5
b(jorit)n(y)29 b(v)n(ote)g(of)104 1129 y(v)n(ersion)g(space)g(mem)n(b)r
(ers)0 1334 y(Ho)n(w)f(man)n(y)e(mistak)n(es)j(b)r(efore)g(con)n(v)n
(erging)g(to)g(correct)g Fg(h)p Fm(?)40 1479 y Fl(\017)21
b Fm(...)38 b(in)29 b(w)n(orst)g(case?)40 1625 y Fl(\017)21
b Fm(...)38 b(in)29 b(b)r(est)h(case?)0 2748 y Fk(197)175
b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g Fj(Machine)g(L)n(e)n
(arning)p Fk(,)1175 2747 y(c)1162 2748 y Fi(\015)q Fk(T)l(om)g(M.)f
(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 198 23
198 23 bop 25 160 a Fn(Optimal)42 b(Mistak)m(e)e(Bounds)1367
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1367 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fm(Let)29 b Fg(M)238 556 y Fd(A)285 543 y Fm(\()p Fg(C)6
b Fm(\))29 b(b)r(e)g(the)g(max)f(n)n(um)n(b)r(er)f(of)i(mistak)n(es)g
(made)0 647 y(b)n(y)g(algorithm)g Fg(A)f Fm(to)i(learn)f(concepts)h(in)
f Fg(C)6 b Fm(.)38 b(\(maxim)n(um)0 751 y(o)n(v)n(er)28
b(all)j(p)r(ossible)g Fg(c)24 b Fl(2)g Fg(C)6 b Fm(,)29
b(and)f(all)j(p)r(ossible)f(training)0 854 y(sequences\))579
958 y Fg(M)663 971 y Fd(A)709 958 y Fm(\()p Fg(C)6 b
Fm(\))25 b Fl(\021)f Fm(max)983 1006 y Fd(c)p Fc(2)p
Fd(C)1133 958 y Fg(M)1217 971 y Fd(A)1264 958 y Fm(\()p
Fg(c)p Fm(\))0 1193 y Ff(De\014nition:)40 b Fm(Let)29
b Fg(C)35 b Fm(b)r(e)29 b(an)f(arbitrary)i(non-empt)n(y)0
1297 y(concept)g(class.)39 b(The)29 b Fh(optimal)35 b(mistak)m(e)f(b)s
(ound)29 b Fm(for)0 1401 y Fg(C)6 b Fm(,)28 b(denoted)i
Fg(O)r(pt)p Fm(\()p Fg(C)6 b Fm(\),)29 b(is)h(the)f(minim)n(um)d(o)n(v)
n(er)j(all)0 1505 y(p)r(ossible)i(learning)f(algorithms)f
Fg(A)g Fm(of)g Fg(M)1356 1518 y Fd(A)1402 1505 y Fm(\()p
Fg(C)6 b Fm(\).)318 1658 y Fg(O)r(pt)p Fm(\()p Fg(C)g
Fm(\))25 b Fl(\021)272 b Fm(min)710 1707 y Fd(A)p Fc(2)p
Fd(l)q(ear)r(ning)28 b(al)q(g)r(or)r(ithms)1364 1658
y Fg(M)1448 1671 y Fd(A)1494 1658 y Fm(\()p Fg(C)6 b
Fm(\))131 2016 y Fg(V)19 b(C)6 b Fm(\()p Fg(C)g Fm(\))24
b Fl(\024)g Fg(O)r(pt)p Fm(\()p Fg(C)6 b Fm(\))25 b Fl(\024)f
Fg(M)993 2029 y Fd(H)5 b(al)q(v)r(ing)1218 2016 y Fm(\()p
Fg(C)h Fm(\))25 b Fl(\024)f Fg(l)r(og)1579 2029 y Fe(2)1610
2016 y Fm(\()p Fl(j)p Fg(C)6 b Fl(j)p Fm(\))p Fg(:)0
2748 y Fk(198)175 b(lecture)16 b(slides)h(for)e(textb)q(o)q(ok)g
Fj(Machine)g(L)n(e)n(arning)p Fk(,)1175 2747 y(c)1162
2748 y Fi(\015)q Fk(T)l(om)g(M.)f(Mitc)o(hell,)i(McGra)o(w)e(Hill,)j
(1997)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
