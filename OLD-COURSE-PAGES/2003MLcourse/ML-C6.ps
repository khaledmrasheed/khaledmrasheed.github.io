%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: mlbook.dvi
%%Pages: 48
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o mlbook.ps mlbook
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1998.04.02:1359
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/setpagedevice{pop}N statusdict begin /letter{}N /lettertray{}N /legal{}
N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N /b5tray{}N
/showpage{}N /erasepage{}N /copypage{}N end /letter{}N /lettertray{}N
/legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N
/b5tray{}N /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N
/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4
copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip
newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /setpagedevice{pop}N statusdict begin /letter{}
N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N
/b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N end
/letter{}N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{
}N /b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N
newpath}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount
sub{end}repeat grestore SpecialSave restore end}N /@defspecial{SDict
begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np
{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (mlbook.dvi)
@start /Fa 54 123 df<121C127FA2EAFF80B1EA7F00B0123EC7FCA8121C127FA2EAFF
80A3EA7F00A2121C09366EB52D>33 D<EA0780EA1FC013E0EA3FF0A213F8121FA2120712
00A4120113F0A2120313E01207EA0FC0121FEA3F80EA7F0012FE5A5A12700D1B70B42D>
39 D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE5B485A12035B485A
120F5B121F5BA248C7FCA3127EA412FE5AAC7E127EA47EA36C7EA27F120F7F12076C7E7F
12016C7E7F137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164471BB2D>I<12
7012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E1200137E137F7FEB1F8014C0130F14E01307
A2EB03F0A3EB01F8A414FC1300AC130114F8A4EB03F0A3EB07E0A2130F14C0131F1480EB
3F005B137E5B1201485A485A485AEA3FC0485A48C7FC5A5A1270164479BB2D>I<EA0F80
EA1FE0EA3FF0127F13F813FCA3123F121F120F120013F8A21201EA03F0EA07E0121FEA7F
C0EAFF80130012FC12700E17708A2D>44 D<007FB61280B712C0A46C158022067B9C2D>
I<120EEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA0E000B0B6F8A2D>I<EB01F8EB0FFF49
7F017F13E090B57E3901FE07F848486C7EEBF0004848137E000F147F497F4848EB1F80A2
48C7EA0FC0A3007EEC07E0A4007C140300FC15F0AC6C1407007E15E0A4007F140F6C15C0
A26D131F001F15806D133F000F15006D5B6C6C13FE6C6C485AEBFC036C6C485A6CB55A6D
5B011F13806D90C7FCEB01F824377CB52D>48 D<EB07FC90387FFFC048B512F000078048
14FEEBF803391FE000FFD83F80EB3F80151F6D14C0150FA26C5A6CC7FCC8FC151F1680A2
153FED7F0015FE1401EC0FFC90380FFFF8495BA2816D13FE90380003FF1400ED3F80ED1F
C0150FED07E0A216F01503A21218127EB4FCA2150716E05A007EEC0FC0007F141F6C6CEB
3F8001E0EBFF00381FFC036CB55A6C14F800015CD8003F1380D907FCC7FC24377CB52D>
51 D<000FB6FC16805AA216000180C8FCAEEB81FE90388FFFC090B512F08115FEEBFE01
9038F0007F49EB3F8049EB1FC06C48130F90C713E0C81207A216F01503A31218127EB4FC
A2150716E048140F16C0007E141F007FEC3F806C6CEB7F00391FE001FF9038F807FE6CB5
5A6C14F000015C6C6C90C7FCEB07F824367CB42D>53 D<EB03FC90381FFF80017F13E048
B57E48803907FC07FC390FF001FE381FE00049133F4848148048C7121F007E15C0150F12
FE4815E01507A416F0A27E127E150F127F6C6C131F001F143F01E0137F6C6C13FF3807FC
076CB512FB6C14F36C14E3013F1387903907F807E090C7FCA2150F16C0A2ED1F80A2000F
EC3F00486C5B486C137E15FE4A5AEC07F849485A391FE03FE090B55A6C5C6C49C7FC0001
13F838003FC024377CB52D>57 D<120EEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA0E00C7
FCAF120EEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA0E000B256FA42D>I<EC3F80903801
FFF0010713FC011F7F497F90397FC07F809038FF001FD801FCEB0FC048481307484814E0
9038E003E3390FC01FFF48484813F0495A4890B5FC393E01FC1F9138F80FF8397E03F007
007CEBE0031307ECC00112FCEAF80FEC8000A7ECC001D8FC0714F0127CECE003010314E0
007EEBF0073A3E01F80FC0ECFC1FD83F00B512806C6D13006D6C5A6C6C6C5A3907E003E0
6DC8FC6C6CEB01F06C6CEB03F86CB4130790387FC03F6DB512F06D14C0010714800101EB
FC009038003FE025357CB42D>64 D<147E14FFA2497FA314E701037FA501077FA214C3A2
010F7FA490381F81F8A549C67EA4017E137EA490387FFFFE90B6FCA43A01FC003F804913
1FA3000315C049130FA44848EB07E0D87FFEEB7FFE6D13FFB514FF6C15FE49137F28357E
B42D>I<007FB512E015F8B612FE6C8016803A03F0003FC0ED1FE0150716F0150316F815
01A6ED03F0A2ED07E0150FED3FC0EDFF8090B6120015FCA215FF16809039F0003FC0ED0F
E0ED07F01503ED01F8A3ED00FCA7ED01F8A21503ED07F0150FED3FE0007FB612C01680B7
12006C5C15F026357EB42D>I<027F1338903903FFE07C010FEBF8FC4913FE017F13FFEB
FF803901FE003F49131F4848130F48481307484813035B001F14015B003F140090C8FCA2
5A007E15781600A212FE5AAB7E127EA3007F15786C15FCA27F121F6D1301000F15F87F6C
6C13036C6CEB07F06C6CEB0FE06D131F3A00FF80FFC06DB51280011F14006D13FC010313
F09038007F8026377DB52D>I<007FB5FCB612E08115FC6C803907E003FF02001380153F
ED1FC0ED0FE0A2ED07F0150316F81501A216FC1500A4167EAC16FCA4ED01F8A2150316F0
150716E0150FED1FC0153FEDFF8002031300007FB55AB65A5D15E06C91C7FC27357EB42D
>I<007FB612FCB712FEA37ED803F0C7127EA7163C1600A6157815FCA490B5FCA5EBF000
A4157892C7FCAE387FFFE0B5FC805C7E27357EB42D>70 D<9138FC01C0903907FF83E001
1F13E74913F74913FFEBFF033801FC004848137F4848133F49131F485A150F485AA248C7
1207A25A127EED03C092C7FCA212FE5AA8913801FFFC4A13FEA27E007E6D13FC91380007
E0A3007F140F7EA26C7E151F6C7EA26C6C133F6D137F6C7E3901FC01FF6CB45A6DB5FC6D
13F76D13E70107EB83C0D900FCC7FC27377DB52D>I<D87FFEEB7FFEB590B5FCA36C48EB
7FFED807E0EB07E0B290B6FCA59038E00007B3A2D87FFEEB7FFEB590B5FCA36C48EB7FFE
28357EB42D>I<007FB512F8B612FCA36C14F839000FC000B3B3A7007FB512F8B612FCA3
6C14F81E3579B42D>I<0103B512C04914E0A36D14C090390001F800B3B11218127EB4FC
A214035D481307007F495AEBC03F6CB55A6C5C6C49C7FC000313F838003FC023367BB42D
>I<D87FFCEB3FFC486CEB7FFEA36C48EB3FFCD807C0EB0FC0ED1F80153F1600157E5D4A
5A14035D4A5A4A5A4A5AA24AC7FC147E5C13C15CEBC3FC13C7EBCFFE13DF14BFEBFF1F01
FE7FEBFC0F81496C7EEBF00301E07FEBC00181140081157C157E153E153F811680ED0FC0
150716E0D87FFCEB1FFC486CEB3FFEA36C48EB1FFC27357EB42D>I<D87FE0EB07FE486C
EB0FFFA26D5B007F15FE000F15F001BC133DA4019E1379A3019F13F9A2018F13F11481A3
018713E114C3A2018313C1A214E701811381A4903880FF01A3147EA2143C1400ADD87FF0
EB0FFE486CEB1FFFA36C48EB0FFE28357EB42D>77 D<007FB512E0B612F815FE816C1580
3A03F0007FC0ED1FE0ED0FF01507ED03F81501A2ED00FCA7ED01F8A21503ED07F0150FED
1FE0ED7FC090B6128016005D15F815E001F0C8FCB1387FFF80B57EA36C5B26357EB42D>
80 D<387FFFFCB67E15E015F86C803907E007FE1401EC007F6F7EA2151F82150FA5151F
5E153FA24BC7FCEC01FE140790B55A5D15E081819038E007FC14016E7E157E157F81A8EE
0780EE0FC0A4ED1F8FD87FFEEC9F80B514FF6F1300816C486D5AC912F82A367EB42D>82
D<90380FF00790397FFE0F8048B5128F000714FF5A381FF00FEBC00348487E48C7FC007E
147F153F5AA2151FA37EED0F00007E91C7FC127FEA3FC07FEA1FFC380FFFC06C13FC6CEB
FFC0C614F0013F13FC01037F9038003FFF02031380EC007FED3FC0ED1FE0150F150716F0
0078140312FCA56C140716E07E6DEB0FC06D131F01F0EB7F8001FEEBFF0090B55A5D00F8
5C011F13E0D8700390C7FC24377CB52D>I<007FB612FEB8FCA43AFC007E003FA7007815
1EC71400B3B190383FFFFCA2497F6D5BA228357EB42D>I<003FB612E04815F0A4007EC7
EA0FE016C0151FED3F8016005D15FE003C5CC712014A5A5D14075D4A5A141F5D143F4AC7
FC147E14FE495A5C1303495A5C130F495A5C133F91C8FC137E13FE5B0001EC01E04848EB
03F05B1207485A5B121F485A90C7FC5AB7FCA46C15E024357CB42D>90
D<EBFFF0000713FF001F14C08148809038C00FF8EC03FCEC00FE6C48137E0006C7127FC8
7EA3EC0FFF0103B5FC133F48B6FC120748EBF03F381FFC00EA3FE0EA7F8090C7FC12FE5A
A47E007F5C6D485A383FE00F6CB612FE6C15FF6C14DF0001140F3A001FF001FE28257CA4
2D>97 D<EA7FF0487EA3127F1201ABEC0FE0EC7FFC01F9B5FC90B6128016C09138F03FE0
9138C00FF091380007F8491303ED01FC49130016FE49147EA2167F163FA7167F167E7F16
FE6D14FC15016DEB03F891388007F0ECC00F9138E03FE091B512C001FB148001F9EBFE00
01F813F83900F01FC028357FB42D>I<903803FFC0011F13F8017F13FE90B5FC00038048
48C6FCEA0FF813E04848137E4848131890C9FC5A127EA212FE5AA77E127EA2127F6C140F
6DEB1F806C7E6C6C133F01F8EB7F003907FE01FF6CB55AC65C6D5B011F13E0D903FEC7FC
21257AA42D>I<EC07FF4A1380A380EC001FABEB03F8EB1FFF017F13DF48B6FC5A3807FC
07380FF001497E4848137F4848133F90C7FC48141F127EA212FE5AA77E007E143FA2127F
6C147F7F6C6C13FF6D5A6C6C5A3807FC0F6CB612FE6CECDFFF6C149F90383FFE1F903907
F00FFE28357DB42D>I<EB03FC90381FFFC0017F13F090B57E0003803907FE03FE390FF8
00FF01E07F4848EB3F804848131F90C7EA0FC05A127E16E000FE14075AB7FCA416C000FC
C9FC7E127EA2127F6C6CEB03C0001FEC07E07FD80FF0130F6C6CEB3FC06CB413FF6C90B5
12806C1500013F13FC010F13F00101138023257CA42D>I<EC07F8EC3FFF4A138049B5FC
4914C0ECFC3FEB07F09138E01F80EB0FC0ED060092C7FCA6007FB6FCB71280A36C150026
000FC0C7FCB3A9007FB512F8A2B67E6C5CA222357DB42D>I<16F8903901F807FE90390F
FF1FFF013F90B512805B90B6123F3901FE07FC2603F801EB1F00D9F000130E4848017EC7
FCA2000F147F497FA56D5B0007147EA26C6C5BEBF8013901FE07F848B55A5D485C01CF90
C8FCEBC1F801C0C9FCA37F6C7E90B512F06C14FE0007ECFFC04815F048819039C0000FFC
48C71201007EEC007E007C153E00FC153F4881A46C5D007C153E007E157E6C6C495A01E0
1307D81FFCEB3FF86CB65A000315C0C692C7FC011F13F8010313C0293A7EA52D>I<EA7F
F0487EA3127F1201ABEC0FF0EC7FFC01F9B5FC13FB90B67E9138F01FC0ECC00F02807FEC
00075B5BA35BB3267FFFE0B51280B56C14C014F114F06C4914802A357FB42D>I<EB0380
EB0FE0A2497EA36D5AA2EB038090C8FCA8383FFFE0487FA37EEA0003B3A9007FB512FE15
FFB7FC7E15FE20367AB52D>I<1407EC1FC0A2EC3FE0A3EC1FC0A2EC070091C7FCA890B5
12C04814E0A37EEB0007B3B3A3140F15C0123C007E131FB4EB3F80EC7F005CEBFFFE6C5B
6C5B6C13E0000390C7FC1B497CB52D>I<EA7FE0487EA3127F1201AB91380FFFFC5CA36E
13F89138007F0015FE4A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF3FCEBF7FE90B5FC81
149FEC0FC0496C7E01FC7FEBF803496C7E6E7E81157E81ED1F8016C0150F3A7FFFC07FFE
B56CB5FCA36C497E28357EB42D>I<387FFFE0B57EA37EEA0003B3B3A7007FB61280B712
C0A36C158022357BB42D>I<3A7F81F001F09039CFFE0FFED8FFDF131F6CB5487E92B512
803A07FE0FFE0F01FC01FC13C09039F807F80701F013F001E013E0A301C013C0B3A23B7F
FC3FFC3FFCA23BFFFE7FFE7FFE3B7FFC3FFC3FFCA22F2581A42D>I<397FF00FF039FFF8
7FFC01F9B5FC13FB6CB67E00019038F01FC0ECC00F02807FEC00075B5BA35BB3267FFFE0
B51280B56C14C014F114F06C4914802A257FA42D>I<EB07F8EB3FFF90B512C048804880
3907FC0FF8390FF003FC391FC000FE49137E003F147F90C77E007EEC1F80A348EC0FC0A8
6C141F007E1580A2007F143F6C15006D5B6C6C13FEEBE0016C6C485A3907FC0FF86CB55A
6C5C6C5C013F90C7FCEB07F822257BA42D>I<397FF00FE039FFF87FFC01F9B5FC90B612
806C15C000019038F03FE09138C00FF091380007F8491303ED01FC49130016FE49147EA2
167F163FA7167F167E7F16FE6D14FC15016DEB03F891388007F0ECC00F9138E03FE091B5
12C001FB148001F9EBFE0001F813F8EC1FC091C8FCAE387FFFE0B57EA36C5B28387FA42D
>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FC1ECFF019138FC00F8
4A13704A13005CA25CA25CA391C8FCAF007FB512F0B6FC815D7E26257DA42D>114
D<90383FFC3848B512FC1207121F5A387FC007387E00014813005AA36C14786C91C7FCEA
7FC0EA3FFE381FFFF86C13FF000314E0C66C13F801077F9038001FFEEC01FF00786D7E00
FCEC1F80150FA27EA26C141F6DEB3F006D5B9038F003FE90B55A5D00FD5CD8F87F13C026
700FFCC7FC21257AA42D>I<130F497EAA007FB61280B712C0A36C158026001F80C7FCB2
ED01E0ED03F0A5ECC007010FEB0FE0ECF01F6DB512C06D14806D14006D13FCEC1FE02430
7EAF2D>I<3A7FF001FFC0486C487FA3007F7F0001EB0007B3A4150FA2151F6D137F3900
FE01FF90B712806D15C06D13F7010F13C70101010313802A257FA42D>I<D87FFFEBFFFE
B5008113FFA36C010013FED803E0EB07C06D130F00011580A26D131F00001500A26D5B01
7C133EA2017E137E013E137CA2013F13FC6D5BA21481010F5BA214C301075BA3903803E7
C0A36DB45AA36D90C7FCA2147E28257EA42D>I<D87FFF90383FFF806E5AB515C06C1680
4A7ED807C0903800F800A56D130100035DA4143FEC7F81D801F0EB83E0A2ECFFC3A214F3
A2D800F1EBE3C001F913E7A214E1A201FB13F7017B5C14C0017F13FFA3EC807F013F91C7
FC90381F003E2A257FA42D>I<3A3FFF83FFF84815FC14C714836C15F83A00FC003F0001
7E137E5D6D485AEB1F8190380F83F0ECC7E0903807E7C0EB03FF6D5B92C7FC6D5A147EA2
14FE497E81903803E7C0903807C7E0EB0FC3EC81F090381F01F8496C7E017E137C017C13
7E01FC7F4848EB1F80D87FFFEBFFFE1481B514FF6C15FE140028257EA42D>I<D87FFFEB
FFFE028113FFB5FC7E020013FED803F0EB07C00001140F16807F0000141F6D1400137CA2
017E133E133EA2013F5B7F1480010F5BA214C0903807C1F0A2EB03E15D14E3EB01F35DA2
EB00F7ECFF80147FA292C7FC80A2143EA35CA35CA2EA1E01003F5BEA7F835CEA7E07EB1F
C0387FFF806C90C8FC6C5A6C5AEA03F028387EA42D>I<003FB612F04815F8A4007EC7EA
0FF0ED1FE0ED3FC0ED7F80EDFF00003C495AC7485A4A5A4A5A4A5A4A5A4A5A4AC7FCEB01
FCEB07F8495A495A495A495A49C8FC484814F04848EB01F8485A485A485A485A485AB7FC
A46C15F025257DA42D>I E /Fb 20 124 df<913801FFC0023F13F891B57E0103EB807E
90390FFC000FD91FF0EB3F804948497E494813FF13FF5C5AA3705A70C7FC93C8FCA69238
1FFFE0B8FCA40001903880007FB3AC007FD9FE1FB51280A4313C7EBB37>12
D<EA0F80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F80C7FCACEA0F80EA
1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F800D2679A51B>58
D<B812C017FC17FF18C028007FF0000113F0706C7E717E717EA2717EA2711380A719005F
A24D5A604D5A4D5A4C485A040F138091B648C7FCA2EFFFC002F0C7EA7FF0EF1FFC717E71
7E19807113C0A27113E0A219F0A819E05F19C05F4D13804D13004D5A4CB45AB95A18E018
8005F8C7FC3C3B7CBA46>66 D<B812C017FCEFFF8018E028007FF8000313F89338003FFE
EF0FFF717F05017F717F727E727EA2727EA2727EA28584A21A80A41AC0AC1A80A41A0060
A261181F61183F614E5A4E5A4D5B4D5B050F90C7FCEF3FFE933803FFF8B95A18804DC8FC
17C0423B7CBA4C>68 D<B500F80203B512F0808080C66C6D90390003F000725A81017B7F
8101797F01787F147F6E7E6E7E826E7F806E7F6E7F826E7F6F7E153F6F7E6F138017C06F
13E0816F13F06F13F817FCEE7FFEEE3FFF827013817013C118E17013F17013F982EF7FFD
EF3FFFA283838383A28383187F183F181FA201FC160FB500FC150718031801A2443B7CBA
4D>78 D<90381FFF8048B512F04814FC3907F003FF486CC67F486C6D7E6F7E82151F6C48
80A26C5AEA01C0C8FCA391B5FC130F90387FFC1F3801FFC03807FE00485AEA1FF0123F48
5AA2485AA4153F6C7E156F3A3FF001CFFC3B1FFC0787FFF00007B512070001EBFC033A00
3FF0007F2C267DA530>97 D<ECFFF0010F13FF013F14809039FFC01FC0489038003FE0D8
03FCEB7FF01207485A485AED3FE0123FED1FC04848EB070092C7FCA212FFA8127FA27F12
3FA2001F15787F000F15F06C7E6C6CEB01E03A01FF8007C06C9038E01F80013FB5120001
0F13FC010013C025267DA52C>99 D<49B47E010F13F8013F13FE9038FF80FF3A01FE003F
80D807FCEB1FC04848EB0FE016F048481307003F15F8A2485AED03FCA312FF90B6FCA301
E0C8FCA4127FA3123F6D143C121FA26C6C14786C6C14F86C6CEB01F06C6CEB07E06C9038
C03FC0013FB51200010713FC010013E026267DA52D>101 D<EA01F0EA07FC487EA2487E
A56C5AA26C5AEA01F0C8FCAA13FF127FA412077EB3AAB512F8A4153D7DBC1B>105
D<13FFB5FCA412077EB3B3AEB512FCA4163C7DBB1B>108 D<01FED93FE0EB07FC00FF90
2601FFFC90383FFF8002076D90B57E913C0F81FF01F03FE0DA1C00903983801FF0000749
DAC7007F00030160D97FCC130F02E002FC804A5C6D485CA391C75BB3A4B5D8FC1FB50083
B512F0A44C267CA553>I<01FEEB7FC000FF903801FFF802077F91380F03FE91381C01FF
0007013014800003497E02E014C05C6D5AA391C7FCB3A4B5D8FC3F13FFA430267CA537>
I<ECFFC0010F13FC013F13FFD9FFC013C03A01FE001FE0D807FCEB0FF849130748486D7E
001F81003F81497F007F1680A400FF16C0A9007F1680A36C6C491300A2001F5D6C6C495A
A26C6C495A6C6C495A3A00FFC0FFC0013FB5C7FC010F13FC010113E02A267DA531>I<90
39FF01FF80B5000F13F0023F13FC9138FE03FFDAF0001380000301C0EB7FC04AEB3FE091
C713F0EE1FF817FC160F17FEA2160717FFA917FEA2160F17FCA2EE1FF8A2EE3FF06E14E0
6EEB7FC09139F001FF80DAFC07130091383FFFFC020F13F0020390C7FC91C9FCADB512FC
A430377DA537>I<9038FE01FC00FFEB07FF4A138091381E1FC09138383FE00007903870
7FF00003136014C0A201FFEB3FE01480ED1FC0ED070091C8FCB3A3B512FEA424267EA529
>114 D<90383FF8383901FFFEF8000713FF380FC00F381F0003003E13005A157812FCA2
7E6C6C130013F0EBFF806C13FC14FF6C14C06C14E06C14F06C14F8000114FCD8003F13FE
13019038000FFF14010070EB007F12F0153F7E153E7E7E6C147C6D13F89038F007F000FD
B512E000F0148039E01FFC0020267DA527>I<130FA55BA45BA25BA25B5A5A5A001FEBFF
F0B6FCA3000390C7FCB3153CA86C147814806C14F090387FC1E090383FFFC0010F138090
3801FE001E377EB626>I<B500F8EBFFFEA4000390C7EA0FC06E14806C16006E5B6C151E
6E133E017F143C80013F5CA26E13F8011F5CECFC01010F5CECFE0301075CECFF076D5C15
8F6D91C7FC15CF6D13DEA215FE6E5AA26E5AA26E5AA26E5AA26E5AA22F267EA534>118
D<B500F8EBFFFEA4000390C7EA0FC06E14806C16006E5B6C151E6E133E017F143C80013F
5CA26E13F8011F5CECFC01010F5CECFE0301075CECFF076D5C158F6D91C7FC15CF6D13DE
A215FE6E5AA26E5AA26E5AA26E5AA26E5AA25DA2140F92C8FC000C5B003F131E387F803E
38FFC03C147C14785C13C16C485AEB0FC06CB4C9FC6C5AEA03F02F377EA534>121
D<B9FCA33003809831>123 D E /Fc 2 49 df<B612FCA21E027C8C27>0
D<EA01C0EA03E0A3EA07C0A31380120F1300A3121EA2121CA2123C1238A25AA21260A212
E05A12400B1A7F9B0E>48 D E /Fd 4 51 df<132013401380EA01005A12061204120CA2
5AA25AA312701260A312E0AE1260A312701230A37EA27EA2120412067E7EEA0080134013
200B327CA413>40 D<7E12407E7E12187E12041206A27EA2EA0180A313C01200A313E0AE
13C0A312011380A3EA0300A21206A21204120C5A12105A5A5A0B327DA413>I<13801203
120F12F31203B3A9EA07C0EAFFFE0F217CA018>49 D<EA03F0EA0C1CEA10070020138038
4003C0A2008013E012F0EAF801A3EA2003120014C0A2EB07801400130E5B13185B5B5B48
5A90C7FC000213205A5A00181360481340383FFFC05AB5FC13217EA018>I
E /Fe 18 122 df<B712FCEEFFC017F0C69039C0000FFC6D48EB03FEEE00FFEF7F80EF3F
C0EF1FE018F0170FA218F8A618F0171F18E0173FEF7FC01880933801FF00EE03FCEE1FF0
91B612C0A2913980000FF8EE01FEEE007FEF3FC0EF1FE0EF0FF0A2EF07F818FC1703A218
FEA7EF07FCA2EF0FF8A2EF1FF0EF3FE0EF7FC0933801FF80496C010F1300B812FC17F094
C7FC373B7CBA42>66 D<DB3FF01306913803FFFE021F9038FFC00E913A7FF007E01E4948
C7EAF83ED903FC143CD90FF0EC0E7ED91FC0EC07FE4948140349C8120101FE1500484816
7E0003173E5B4848161E120FA24848160EA2485A1806127FA349160012FFAB127F7F1806
A2123FA26C7E180C6C7EA20007171C6C6C16186D1638000117306C6C1660017F16E06D6C
EC01C06D6CEC0380D90FF0EC0700D903FC141E6DB4147C903A007FF003F0021FB512C002
0391C7FC9138003FF8373D7ABB44>I<B91280A3C69038C000016D48EB003FEF0FC01707
1703A21701A21700A418E01860A21630A21800A41670A216F0150391B5FCA3EC80031500
1670A21630A693C8FCAEEBFFE0B612F0A3333B7CBA3D>70 D<B612F0A3C601E0C9FCEB7F
80B3AEEF0180A517031800A45FA25FA25F5F5F17FE1603496C131FB8FCA3313B7CBA3B>
76 D<D907FE130C90383FFFC090B5EAF01C3A01FC01F83C3903E0003E4848EB0F7C4848
EB03FC48C71201003E1400167C5A163CA200FC151CA3160C7EA27E6C6C14007F13F0EA3F
FC381FFFE014FE6CEBFFE06C14FC6C806CECFF806C6C14C0011F14E0010114F0D9001F13
F814019138001FFC1507ED03FE1501ED00FF167F124012C0163FA37E163EA27E167C7E6C
15F87E6CEC01F0D8FBC0EB03E0D8F1F0EB0FC0D8F07FEB3F803AE03FFFFE00D8C00713F8
9038007FE0283D7ABB35>83 D<EC0380A24A7EA34A7EA24A7E141BA2EC31F8A3EC60FCA2
4A7E157EA249487EA2010380EC001FA201066D7EA2010E80010C1307A2496D7E011FB5FC
49809038300001A2496D7EA349147EA20001157F82120300071680D81FE0EC7FC0D8FFF8
903803FFFEA22F2D7DAC35>97 D<B612F815FF3A07F8001FC06C48EB07E0ED01F86F7E16
3E163FEE1F80160F17C0160717E0A2EE03F0A317F8AA17F0A3160717E0A2EE0FC0178016
1F1700163E5E4B5AED07F0486CEB1FC0B7C7FC15F82D2C7CAB36>100
D<B712F8A23907F800076C481300163CA2161C160CA482A2153093C7FCA31570A2EC01F0
90B5FCA2EBF001EC0070A21530A2EE0180A21500A2EE0300A45EA25EA25E167E486CEB03
FEB7FCA2292C7CAB30>I<B712F0A23907F800076C481301ED0078A216381618A4160CA3
ED6000A415E0A2140390B5FCA2EBF0031400A21560A492C7FCABEA07FCB512F0A2262C7C
AB2E>I<B512C0A23807F8006C5AB3B3A2487EB512C0A2122C7CAB1A>105
D<B512F0A2D807FCC8FCEA03F0B3A61630A416701660A316E0A2150115031507ED0FC048
6C137FB7FCA2242C7CAB2C>108 D<D8FFF0903801FFF8A2D803F89038003FC06DEC1F80
017EEC0F0016067F6D7E6D7EA26D7E6D7E8013016D7E147E147F80EC1F80EC0FC0A2EC07
E0EC03F0EC01F8A2EC00FC157E153FA2ED1F86ED0FC6ED07E6A2ED03F6ED01FEA2150016
7E163E487E486C141E486C140ED8FFFC1406A22D2C7CAB35>110
D<B612C015FC3907F8007F6C48EB0FC06F7E6F7E6F7E82150082A55E15015E4B5A4B5A4B
5A037FC7FC90B512FC15F09038F000FC153E816F7E82150782A482A41706A2ED03F8170C
486CEB01FCB5D8C0001318EE3FF0C9EA0FE02F2D7CAB34>114 D<90387F80603801FFE0
39078078E0380E001D48130748130314015A140012F0A21560A27EA26C1400127EEA7F80
EA3FF86CB47E6C13F86C13FE6C7FC61480011F13C0010113E0EB001FEC07F0140115F814
00124000C01478A46C1470A26C14F015E06CEB01C07E00F7EB078039E3E01E0038C0FFFC
EB1FF01D2E7BAC27>I<007FB712F0A29039001FE003007890380FC00000701670A20060
163000E01638A2481618A5C71500B3A9EC3FF0011FB512E0A22D2C7DAB33>I<B56C9038
0FFF80A2D807FCC73803FC006C48EC01F05F00015E7F00005EA2017E4AC7FCA2017F5C6D
1406A26D6C5BA26E131C010F14188001075CA26D6C5BA26E13E001015CA26D6C485AA2EC
FE03027E90C8FCEC7F07EC3F06A2EC1F8CA215DCEC0FD815F86E5AA26E5AA36E5AA2312D
7EAB35>118 D<3B7FFFC003FFF0A20007D900011380D801FE903800FC0000005D167001
7F5C6D6C5B6D6C485A15036D6C48C7FC903807F00601035BECF81C6D6C5A903800FE30EC
7E60EC7FE06E5A141FA26E7E81A2EC1BF8EC39FCEC70FEEC607EECC07F01016D7E49486C
7E140001066D7E010E6D7E010C6D7E5B01386D7E496D7E01F0147E0001157F00031680D8
1FF8ECFFE0B46C010313FEA22F2C7DAB35>120 D<B56C90380FFF80A2D807FCC73803FC
000003ED01F000015E6C6C5D4C5A017F92C7FC6D6C5B16066D6C5B6D6C131C16186D6C5B
6D6C137016606D6C5B903800FE01027F5B4BC8FCEC3F87EC1FC615CCEC0FFC6E5A5D1403
AF4A7E91B512C0A2312C7EAB35>I E /Ff 13 90 df<140C141814381430146014E014C0
1301EB0380A2EB0700A2130EA25BA25BA21378137013F0A25B1201A2485AA4485AA3120F
90C7FCA35AA2121EA3123EA4123CA3127CA81278A212F8B1164B748024>48
D<12C01260127012307E121C120C120E7EA26C7EA26C7EA26C7EA21370A213781338133C
A2131C131EA27FA4EB0780A314C01303A314E0A21301A314F0A41300A314F8A81478A214
7CB1164B7F8024>I<1318137813F0EA01E0EA03C0EA0780EA0F005A121E123E123C127C
A2127812F8B3A50D25707E25>56 D<12F8B3A51278127CA2123C123E121E121F7EEA0780
EA03C0EA01E0EA00F0137813180D25708025>58 D<137CB3A613F8A313F0120113E01203
13C0EA07801300120E5A5A12F012C012F012387E7E7E1380EA03C013E0120113F0120013
F8A3137CB3A60E4D798025>60 D<12F8AE050E708025>62 D<12F8B11278A2127CA8123C
A3123EA4121EA3121FA27EA37F1207A36C7EA46C7EA212007FA2137013781338A27FA27F
A27FA2EB0380A2EB01C0130014E01460143014381418140C164B748224>64
D<147CB11478A214F8A814F0A31301A414E0A31303A214C0A313071480A3EB0F00A4131E
A2131C133CA2133813781370A25BA2485AA2485AA248C7FCA2120E120C121C12185A1270
12605A164B7F8224>I<12F8B3A9051B748024>I<12F8B3A9051B6E8024>I<B712F0A200
70C7EA0FF8007814006C1538001C151C6C150C000F15046C15066C6C14026D14006C7E12
00137013787F131C131E7F7F6D7EA291C8FC5B13065B5B133813305B5B120149140248C8
120600061504000E150C000C151C4815384815F80070140F007FB612F0B7FC272A7E7F2C
>80 D<B912C018E06CC81201EE001F6C6CED03F06C6C1500000F17386D16186C6C160C6C
6C1604A26C6C16026C6C1600137FA26D7E6D7E130F806D7E6D7EA26D7E6D7E147E147F6E
7E6E7EA2140F6E5A14034AC9FC140E5C5C5CA25C495A495A49CAFC130EA2491602491604
5B49160C00011718491638484816F848C9EA01F0000E160F48ED01FF003FB812E0A25AB9
12C0373A7E7F3C>88 D<B9FCA3D80FF8C7EA1FF0000316C000011680B3B3AC486CEC3FC0
D80FFFECFFF0B5D8F00F13FFA3303A7E7F35>I E /Fg 7 62 df<130813101320134013
C0EA0180A2EA03001206A2120E120C121CA212181238A212301270A512F05AAD7E1270A5
12301238A21218121CA2120C120E1206A27EEA0180A2EA00C013401320131013080D3D7A
AC17>40 D<7E12407E7E12187EA27E7EA21380120113C0A2120013E0A213601370A51378
1338AD13781370A5136013E0A213C01201A2138012031300A212065AA25A12105A5A5A0D
3D7DAC17>I<1438B3B712FEA3C70038C7FCB327297DA22E>43 D<1310137013F0120712
FF12F81200B3AD487E387FFFE0A213287BA71E>49 D<13FE3807FF80380E07E0381803F0
382001F8130048137CA200F8137E7E143EA30078137EC7FC147CA214F8A2EB01F014E0EB
03C0EB07801400130E5B5B5B13605B38018002EA0300000613045A5A0010130C383FFFFC
4813F8B5FCA217287DA71E>I<137F3803FFC0380701F0380C00F80010137C121C003E13
7E143EA2121E000C137EC7127CA214785C5C495A0107C7FC13FFEB01E06D7E147880143E
80A21580A21230127812FCA215005A00405B143E00305B6C5B380F01F03803FFC0C690C7
FC19297EA71E>I<B712FEA27ECAFCA9007FB612FEB7FCA2270F7D952E>61
D E /Fh 11 121 df<90387FFF8048B5FC5A390783C000EA0E01486C7E5AA25AA348485A
A3495A91C7FCEA6007130EEA3018EA1870EA07C019157E941C>27
D<127012F812FCA212741204A41208A21210A212201240060F7C840E>59
D<90B512F090380F003C150E81011EEB0380A2ED01C0A25B16E0A35BA449EB03C0A44848
EB0780A216005D4848130E5D153C153848485B5D4A5A0207C7FC000F131CB512F023227D
A128>68 D<9039FFF83FFE90390F0003C0A3011EEB0780A449EB0F00A449131EA490B512
FC9038F0003CA348485BA448485BA44848485AA4000F130339FFF83FFE27227DA128>72
D<141E14FC141CA31438A41470A414E01378EA01C4EA0302380601C0120E121C123C3838
03801278A338F00700A31408EB0E101270131E38302620EA18C6380F03C017237EA219>
100 D<13F0EA07E01200A3485AA4485AA448C7FCEB0F80EB30C0EB4060380E8070EA0F00
120EA24813E0A4383801C0A2EB0380148200701384EB07041408130300E01310386001E0
17237EA21C>104 D<13E0A21201EA00C01300A9121E1223EA4380A21283EA8700A21207
120EA35AA3EA38201340127013801230EA3100121E0B227EA111>I<147014F0A2146014
00A9130FEB3180EB41C01381A2EA0101A238000380A4EB0700A4130EA45BA45BA3EA7070
EAF0605BEA6380003EC7FC142C81A114>I<13F0EA0FE01200A3485AA4485AA448C7FC14
78EB0184EB021C380E0C3C1310EB2018EB4000485A001FC7FC13E0EA1C38487EA27F1408
38701C10A3EB0C20EAE006386003C016237EA219>I<383C07C038461860384720303887
403813801300A2000E1370A44813E0A2EB01C014C1003813C2EB03821484130100701388
383000F018157E941D>110 D<3801E0F03806310C38081A1C0010133CEA201C14181400
C65AA45BA314083860E01012F0142038E1704038423080383C1F0016157E941C>120
D E /Fi 4 107 df<B712E0A323037B8F2E>0 D<EA01E0EA03F0A4EA07E0A313C0120FA2
1380A3EA1F00A3121E123E123CA312381278A21270A212F05AA20C1E7EA010>48
D<903803FFF8131F137FD801FCC7FCEA03E0EA078048C8FC121E121C5AA25AA35AA3B612
F8A300E0C8FCA31270A37EA27E121E7E6C7EEA03E0EA01FC39007FFFF8131F13031D257B
A028>50 D<12E0B3B3B3A6033C79AC11>106 D E /Fj 38 122 df<0130133001781378
A34913F0A43901E001E0A43903C003C0A439078007801582A3000FEB0F04A214179038C0
2708391EE0C39890383F00E090C8FCA25AA45AA45AA212601F277E9924>22
D<127812FCA212FEA2127A1202A41204A31208A212101220124007127B8511>59
D<15021506150EA2151FA25D155FA2159FA2EC011F1402821404150F14081410A2142014
60144014808290380100075B91B5FC5B90380400075B5BA2498015035B5BA248C7FC5AD8
0F80497ED8FFF090387FFF8092B51200292A7EA92D>65 D<013FB512E016FC903901F800
7E4A131F1780160F17C0495AA449481480161F1700163E4948137E16F84B5AED07C049B5
C7FC91380007E0ED01F06F7E013E147CA2167EA25BA4495CA24B5A5E484813034B5AED1F
800003027FC7FCB612FC15E02A297EA82D>I<DA01FE134091391FFF80C091387F01C190
3901F80063D903E0EB1780D90F80130F49C7FC013E14074915005B484880485A00071502
5B120F485A93C7FC48CAFCA3127EA4127C12FCA3007C1520A35EA26C5D4BC7FC6C5C1506
6C6C5B6C6C5BD803F013603900FC03C0D93FFFC8FCEB0FF82A2B7EA92B>I<013FB512F0
16FC903901F8003F4AEB0F80EE07C0EE03E0EE01F0495AEE00F8A3495A17FCA3495AA449
C812F81601A3013EEC03F0A217E016074915C0A2EE0F80EE1F005B163E5E5E4848495AED
07C0ED1F800003027EC7FCB612F815C02E297EA831>I<013FB612E0A2903901F800074A
130116001760A249481440A4495A1502A2170049485AA2150C153C90381FFFF8A2EC0038
1518013E1310A25E160249132015005EA249140C1608161816104848143016704B5A0003
140FB7FC5E2B297EA82C>I<DA01FE134091391FFF80C091387F01C1903901F80063D903
E0EB1780D90F80130F49C7FC013E14074915005B484880485A000715025B120F485A93C7
FC48CAFCA3127EA4127C00FC91B5FC5C91380003F0007C5DA4007E4A5A123EA27E4B5A6C
6C131F6C6C1337D803F013632700FC0383C7FC90383FFF01D90FF8C8FC2A2B7EA92F>71
D<903B3FFFE07FFFC0A2903B01F80003F0004A5CA44948495AA44948495AA4494849C7FC
A449B512FEA291C7123EA2013E5CA4495CA449495AA44848495AA300031407B50081B5FC
A232297EA832>I<90383FFFF0A2D901F8C7FC5CA4495AA4495AA4495AA449C8FCA4133E
A31610491420A21640A24914C016801501ED030048485B5D153E000314FEB6FC5D24297E
A829>76 D<D93FF8EDFFF0A201019238017C0002785D17026E1404A20102ED09F01711A2
172101044B5A801783EE010301084B5A1602A2160401104A485A801610162001204BC7FC
16401680A2903A400781003EA21582158401805D15881590EC03D0D8010001E05B5D5AD8
0780EB8001D8FFF89039007FFFC0A23C297EA83A>I<D93FF8903807FFC0800100913800
7C00D9017E1430023E1420A28001025D6E7EA281D904075CA26E7EA201086D48C7FC1401
15F81400491402157CA2157E49EB3E04153F151FA249EB0F88A216C815074914F01503A2
150148C75BA2481400487ED8FFF81440A232297EA830>I<EC03FC91381C07809138F001
C0903901C000F0D90780137849C77E133E49805B4848141FA2485A48481580A2485A121F
A248C8FCA3007EED3F00A4167E5A167C16FC5E1501007C5D4B5A15075E6C4A5A4BC7FC00
1E143E6C5C6D13F00007495A3901E007802600F81EC8FCEB1FF0292B7EA92E>I<013FB5
12E016FC903901F8007E4AEB1F80160FEE07C0A2494814E0A44948EB0FC0A21780161F49
481400163E5EED01F090391F0007E091B5C7FC91C9FCA2133EA45BA45BA4485AA31203B5
7EA22B297EA826>I<91383F80409138FFE0C0903803E078903807801990390E000F8049
130749130313780170140013F0A300011402A292C7FC7F6C7EEBFFC0EB7FF814FF6D13C0
010F7F01037FEB003FEC07F814011400A215781210A300305CA25D140100705C0078495A
007C49C7FC0076131E38E3C07C38C0FFF038803FC0222B7DA925>83
D<B5903801FFC0495BD807E09038007C0049143016205E7F00035D150193C7FC1502A25D
6D5BA200015C5DA25DA25D6D48C8FC120014025CA25C5C13FCEB7C20A25C5CA2017DC9FC
137EA2133CA213381330A22A2A7DA823>86 D<131FEB70C63801C02FEA03800007131EEA
0F00121EA2003E5B123C127CA2485BA4485B1540A3903801E080EA7003EA7804393808E1
00381C30733807C01C1A1A7E9920>97 D<EA01E0123FA212035BA4485AA448C7FCA4EA1E
1FEB60C0EB80E0381F0070003E1378123CA2147C5AA44813F8A314F0130100E013E0A2EB
03C0148038700700130EEA301C6C5AEA07C0162A7DA91A>I<EB0FE0EB3818EBE0043801
C00E3803801E3807003E5A001E131C003E1300123C127CA25AA55AA21402007813041408
003813306C1340380E03803803FC00171A7E991A>I<15F0141FA2140115E0A4EC03C0A4
EC0780A490381F0F00EB70CF3801C02FEA03800007131EEA0F00121EA2003E5B123C127C
A2485BA4485B1540A3903801E080EA7003EA7804393808E100381C30733807C01C1C2A7E
A91F>I<EB0FE0EB3830EBE0083803C00CEA0780EA0F00121E003E1318A2481370EB03C0
387FFE0000F8C7FCA700781302140400381308003C1330001C1340380603803801FC0017
1A7E991C>I<EB03E090380E18C090383805E013709038F003C0EA01E0EA03C0A20007EB
07801380120FA2391F000F00A4001E131EA45C000E137C000F13BC3807013C38038678EA
00F81300A25CA3495A127038F803C05CD8F00FC7FCEAE03CEA3FF01B267F991D>103
D<133CEA07FCA2EA007C1378A45BA4485AA43803C1F8EBC60EEBC80FEBF007EA07A001C0
13801380A2390F000F00A4001E131EA35C5A15101478A248EB702014F0EC704015804813
310060EB1E001C2A7DA922>I<131C133EA2133C13381300A9EA0780EA08E01210EA20F0
A21240A2EA41E012811201EA03C0A2EA0780A3EA0F00A21304121EA2EA1C08123CEA1C10
1320EA0C60EA07800F287EA715>I<1407140F141FA2140E1400A9EB03E0EB0430EB0838
EB103C1320A21340A2EB80781300A314F0A4EB01E0A4EB03C0A4EB0780A4EB0F00A3131E
1270EAF81C5B485A485A003FC7FC183481A719>I<133CEA07FCA2EA007C1378A45BA448
5AA43903C00F80EC1040EC61C0148338078107138290388403800188C7FC485A5B13C07F
EA1E7C130F6D7E6D7E123C1580A30078EB8100A21482130100F013C4386000781A2A7DA9
1F>I<1378EA07F8120F120013F0A4EA01E0A4EA03C0A4EA0780A4EA0F00A4121EA45AA4
5A1340A3EAF080A21270EA71001231121E0D2A7EA912>I<000F017F133F3B11818380C1
C03B21C201C101E09039E400E600D841E813E401F001F813F0495BA23B83C001E001E012
03A33B078003C003C0A3EE0780390F0007801782EE0F02A2001E90390F000E04161EEE0E
08171048011EEB06300018010CEB03C02F1A7E9934>I<000F137E39118183803921C203
C0EBEC01EA41E801F013E013E0A23983C003C01203A33907800780A3EC0F00EA0F001504
141EA2001EEB1C08143CEC1C10152048EB0C600018EB07801E1A7E9924>I<EB0FE0EB38
38EBE00C3801C00E48487ED8070013805A121E003E14C0123C127CA248EB0F80A315005C
48131E143E143C00785B5C383801E0381C0380D80E0FC7FCEA03F81A1A7E991D>I<9038
7807C090388C183039010E203890380F401C0002EB801E1400A2151FEA041E1200A34913
3EA3153C49137C1578A215F001F813E0EC01C0EC03809038F407003801E20EEBE1F001E0
C7FCA2485AA4485AA3120FEA7FF812FF202683991E>I<000F13F03811830C3821C41CEB
E83C3841F07C13E014381400485A1203A3485AA448C7FCA4121EA45A1218161A7E991B>
114 D<EB1FC0EB60203801C010EB800838030038481378A21430EB800013E013FE3803FF
806C13C07EEB0FE01301A2EA3800127C14C0EAF80100701380EA400338200700EA181CEA
07F0151A7D991C>I<13301378A25BA4485AA4B51280A23803C000A2485AA448C7FCA412
1EA45A1302A25B12785BEA38101330EA1C40EA0F8011257EA416>I<D8078013C03908E0
01E01210EA20F0EC03C01240A2EA41E00081EB07801201EA03C0A2EC0F00EA0780A3380F
001E1508A3EC3C10A26C135C3903809C203801C30E3900FC03C01D1A7E9922>I<380780
073908E00F801210EA20F0A20040130714033841E001008114001201EA03C0A21402EA07
80A25CEA0F00A25CA25C6C5BA2380380C0D801C1C7FCEA007E191A7E991D>I<90387C07
C0390186082039020310700004EBA0F0000813A114C10010EBC0E0150048485A1200A349
C7FCA4131E1540A200301480EA783E00F8EB0100134E00F0130638618708381E01F01C1A
7E9922>120 D<39078001803908E003C01210EA20F0EC07801240A2EA41E00081EB0F00
1201EA03C0A2141EEA0780A348485AA45CA26C13F8EB0178380382F0EA00FC1300A2495A
1210387803C0007C5BEAF80791C7FCEA600EEA401CEA3070EA0FC01A267E991D>I
E /Fk 43 123 df<EE0FFE93387FFFC0923901F803E0923903C000704B4813784BC712F8
031EEB01FC033EEB03F8153C037CEB01F0EF00E04B1400A44A5AA54A5AA449B712805B7F
903B0007C0001F00A44A48133EA45F4AC7FCA35FA2143EA24C5AA35C4C5A1870A34A9038
07C0E0A4EFC1C0495A0403138017C3933801C700EE00FE4948147C94C7FCA25C1307A300
1C5BEA3E0F007E90CAFC12FE130EEAFC1EEAF81CEA70386C5AEA1FE0EA07C0364F83BC30
>12 D<1506150E1518153015E0EC01C0EC0380EC0700140EA25C5C5C14F0495A5C130349
5A91C7FC5B130E131E5BA25BA25BA212015BA2485AA212075BA2120FA290C8FC5AA2121E
A2123EA2123CA2127CA31278A412F8A35AAB1270A21278A31238A2123C121CA27EA21206
12077E6C7E6C7EA21F5673C023>40 D<1404140C80801580140115C0A2EC00E0A215F015
70A21578A31538A2153CAB157CA31578A415F8A315F0A21401A215E0A21403A215C01407
A21580A2140F1500A2141EA2143E143CA25CA25CA2495A5C13035C130749C7FC130E131E
5B13385B5B485AA2485A48C8FC120E5A12305A5A5A1E567EC023>I<EA03C0EA07E0EA0F
F0A2EA1FF8A213F0120FEA07B0EA0030A21360A213C0A2EA0180A2EA0300A212065A5A5A
5A5A5A0D1A7A881A>44 D<120E123FEA7F80A212FFA21300127E123C090977881A>46
D<151015381570A215F01401EC03E0140F141F147F903803FFC0EB3FEF148FEB3C0F9038
001F80A4EC3F00A4147EA45CA4495AA4495AA4495AA4495AA4495AA449C7FCA2497EB612
80A31D3876B72C>49 D<EC01FCEC0FFF91383E07C091387001E09138E000F0494813F849
48137C49C7FC010E147EEB0C10EB1C180138147FA21370A213E0A348484813FEA25CED01
FC14C09039C18003F82600C30013F001FEEB07E0017C130F90C713C0ED1F00153E15FC4A
5AEC03E0EC0FC0023FC7FC147CEB01F0495AEB0F80011EC8FC5B01701430491470485A48
5A48C812E05A000E140148EC03C0D81FFCEB0780393FFFE01FD8381FB51200D870075B01
015B486C5BEC3FF0EC0FC0283979B72C>I<131C137E13FFA25AA213FEEA00FC13781300
B3120E123FEA7F80A212FFA21300127E123C102577A41A>58 D<49B7FC4916E06D16F890
3B0007F80003FC02036E7E4A486D7E841980183F4A5AA44A5AA2187FA24A48150060604D
5A4AC7485A4D5A4D5A4D5A02FEEC7F80DC01FEC7FC91B612F8A2903A01FC0001FE933800
3F80717E717E4948811707841703495AA4495A1707A349484A5AA24D5AA249484A5A4D5A
4DC7FC4C5A49C7485AEE0FF849EC7FE0007F90B61280B748C8FC6C15F0393B7BBA3D>66
D<DCFF801380030F9038E001C0037F9038F80380913A01FF807C07913A07F8000E0FDA0F
E01307DA3F809038039F004AC76CB4FC14FC494880D907F05D4948157E495A5C49C9127C
5B01FE163C485A1838485A1207491678000F17701830484893C7FCA3485AA3485AA590CC
FC5AA217035FA26C160EA35FA26C5E6D5DA2001F5E6C6C4A5A4C5A6C6C4AC8FC6C6C140E
6C6C143C6C6C5C017FEB03E090393FE01FC0010FB5C9FC010313FC9038007FC03A3D74BB
3E>I<49B812C05B7F90260007F8C7FC0203151F4A48140F1807A2F003804A5AA44A5AA2
F00700A24A4813C01601A295C7FC4A48485AA21607A202FE49C8FC163F91B6FCA2495C91
38FC007E161EA24948131CA318184948491338A393C75A495A60A2170149485D17036017
07495A4DC7FC5F173E49C812FE160349EC1FFC007F90B6FCB85A7E3A3B7BBA3A>69
D<49B812805B7F903A0007F800010203EC003F4A48141F180FA2F007004A5AA44A5AA218
0EA24A5AEE01C0A295C7FC4A48485AA3160702FE91C8FC5E163F91B6FC495CA29138FC00
7E163E4948131CA449485BA31630494890C9FCA4495AA4495AA449CBFCA2497E007FEBFF
80B6FC7E393B7BBA38>I<4BB45B031F9038E00380037F9038F00700913A01FF00FC0FDA
07F8EB1E1FDA1FE0130EDA3F80EB073E027EC7EA03FE49481401495A49485D4948140049
5A495A91C95A49167813FE485A1870485A12074916F0000F5F1860484893C7FCA3485AA3
485AA590CCFC484AB512F8A260DB000190C7FC705A7E4C5AA46C4B5A7FA2121F6D4A5A12
0F6C6C140F7F6C6CEC3FE06C6C147BD8007FEB01F190393FE00FC16DB5EA80C001079038
FC00409026007FE090C8FC393D74BB43>I<49B512FE5B7F90260007FCC7FC6E5A4A5AA4
4A5AA44A5AA44A5AA44AC8FCA414FEA4495AA4495AA3170249481407A3170E495AA2171C
A24948143C17381778A2494814F016011603EE07E049C7120FEE7FC049EB03FF007F90B6
FCB812807E303B7BBA36>76 D<902601FFFCEE7FFF4995B5FC7F90260007FE4B13800203
1800DA077E4B5AF1077EA2190E020E5F191C1938A24A6CED71F8A219E1F001C10238EEC3
F0F00383A2F00703027092380E07E0A26F6C131CA202E04B485A1870A218E0D901C04C5A
EF01C0EF0380A249486C6C484848C7FCA2170E5FD90700167E5FA25F010E4B5BA2EEC1C0
ED07E1499139E38001F8EEE700A216EE494C5A16FC5E13784C495A01F81303D803FE4A13
0F267FFFE0D9C007B512C0B55D6C4B7E503B7BBA4D>I<49B612FE49EDFFC06D82903B00
07F8000FF80203EC03FC4A48EB00FEA2187FA24A48EC3F80A3187F4A5AA44A48ECFF00A2
6017014AC75B4D5AA24D5A02FEEC0FC0EF3F8005FFC7FCEE07FC49B612F0178002FCCAFC
A2495AA4495AA4495AA4495AA4495AA449CBFCA25B007F13FEB5FC7E393B7BBA3A>80
D<49B612F04915FF6D16C0903B0007F8003FE00203EC07F84A481303717E717EA24A4880
84A2604A5AA44A48495AA2604D5A4AC7120760EF0FC04D5A02FE027FC7FCEE01FCEE0FF0
91B61280494AC8FC9139FC001F80EE07C0707E494880160183A2494880A44948495AA449
481307A44948130F9438F00380A2190049C700075B1806490203130E007F01FE6E5AB502
015B6C9238007FF0CAEA1FC0393C7BBA3F>82 D<92383FC002913901FFF8074AEBFC0E91
390FC03F1E91381F000F023CEB03BE4AEB01FC5C49481300495A010715F85C010F1578A2
49C81270A317F017E06E14601700A28014F014FE90380FFFC015F86D13FF6D14C06D806D
6C7F021F7F02037FEC003FED07FE15011500167FA282A20006153E120EA4001E5DA21678
16F8003E5D003F4A5A15036D5C007F4A5AD87DC0011FC7FCD879F0133E39707E01F839F0
3FFFF0D8E00F13C026C001FEC8FC303D7ABB30>I<48B812F85AA2903AFC003F8007D807
F0150101C049C7FC49167848C7FC000E1770001E14FE121CA25A4A5AA24817E0A24A5A5A
A2C716004A5AA44A5AA44A5AA44A5AA44AC9FCA414FEA4495AA4495AA4495AA2EB1FF800
3FB512FC48805D353B71BA3E>I<147CEB03FF90380F838690381F01CF90383C00FF5B01
F87F485A4848137E120749133E120F001F5C5B123FA290C75A5AA300FE495AA448495A16
70A3913807C0E0140F127C141F91383FC1C0003C1377003E01E31380391E01C3C33A0F07
81C7003903FE00FED800F8137C242777A52C>97 D<133EEA0FFF485A120FEA007EA2137C
A45BA4485AA4485AA43807C0FCEBC3FF9038CF07809038DC03C0D80FB813E0EBF00101E0
13F013C0D81F8013F8A21300A2123EA4481303A448EB07F0A315E0140F4814C0A2EC1F80
A2EC3F00143E00785B14785C383801E06C485A380E0F80D807FEC7FCEA01F81D3D76BB28
>I<EC3F80903801FFF0903807E07890380F801C90381E000E137C49133E0001147E4848
13FE5B000714FC4848137C153048481300123FA290C8FC5AA312FEA55AA31504007C140E
151C007E143C003E1478001E14E0001FEB03C06CEB0F803907C07E003801FFF838007F80
1F2777A528>I<167CED1FFEED3FFC151F1500A216F8A4ED01F0A4ED03E0A4ED07C0A491
387C0F80EB03FF90380F838F90381F01CF90393C00FF005B01F87F485A4848137E120749
133E120F001F5C5B123FA290C75A5AA300FE495AA448495A1670A3913807C0E0140F127C
141F91383FC1C0003C1377003E01E31380391E01C3C33A0F0781C7003903FE00FED800F8
137C273D77BB2C>I<EC3F80903801FFE0903807E07090381F803890383E001C5B5B485A
1203485A485A1538001F14784913F0003FEB03E0EC3F80397FFFFE0014E090C8FCA2127E
12FEA5127EA21504150E151C003E143C15786C14E06CEB03C03907800F803903C07E0038
01FFF838007F801F2777A528>I<ED01E0ED07F8ED0E1CED1C0EED3C1EED783F167FEDF8
FEA2EDF07C020113381600A25D1403A44A5AA5140F0103B512804914C016809039000F80
00A24AC7FCA5143EA55CA55CA5495AA5495AA413075CA4495AA391C8FC5B121CEA3E1E12
7EEAFE3E133C12FCEAF838EA7070EA30E0EA1FC06C5A284F82BC1A>I<EC07E0EC1FF891
387C1C309138F80E78903901E007F8903803C0031307EB0F80D91F0013F0491301137EA2
01FEEB03E05B1201A24848EB07C0A44848EB0F80A4ED1F005BA25D153E0003147E15FEA2
6C6C485A0000EB037CEB780EEB3C3C90381FF8F8EB07E090C7FCA24A5AA44A5AA2001C5C
007E13074A5A00FE91C7FC141E485B007813F8387C03F0381FFFC0D807FEC8FC25387CA5
28>I<EB03E0EBFFF0485B7E1307A25CA4495AA449C8FCA4133EA490387C07F0EC1FFCEC
7C1EECE00F9039F9C00780EBFB80EBFF004914C0485AA25B5B0003EC0F80A25BA24848EB
1F00A3153E485AA25DA248C7FCEDF80EA3003E903801F01CA3EDE0385A1630167016E048
903800E1C0ED7F800070EC3E00273D7ABB2C>I<14E0EB01F0EB03F8EB07F0A2EB03E0EB
01C090C7FCAC13F8487EEA030EEA060F120C001C1380121812381400485AA3EAE03EA2C6
5AA35BA3485AA3485AA23807C070A3380F80E0A3EB01C0A2EB038014005BEA070EEA03FC
EA01F0153A79B81A>I<EB03E0EBFFF0485B7E1307A25CA4495AA449C8FCA4133EA449EB
07C0ED1FE0ED7870EDE0F89038F80181EC03031406020C13F03801F01891383001C04AC7
FC5CEA03E1EBE38001E6C8FC13FC485AEBFF80EBDFE0EBC1F0380F80F8143C143E80EA1F
0016E0A3003E90383E01C0A3ED03805A141EED0700EC0E06486D5AEC03F800706D5A253D
7ABB28>107 D<EB0F803803FFC04813807EEA001FA21400A4133EA45BA45BA4485AA448
5AA4485AA4485AA448C7FCA4123EA45A130EA3485AA45BA2EA7870A2EA38E0EA1FC06C5A
123D78BB16>I<D803E001FEEB03F83C07F003FF800FFE3C0E380F83C03E0F3D1C3C1C01
E0700780903C1E3800F0E003C0003849EBF1C04AEBF380D93FC0D9FF0013E00070495BA2
91C75A013E5CD8E07E0101EC07C0A2D8007C5CA2494948EB0F80A3F01F004848495AA218
3EA24848495AF07C07A3484849C7EAF80EA3F0F01C4848133E19181938197048C748EC70
E0F03FC0000E0238EC1F00402779A546>I<D803E013FE3A07F003FF803A0E380F83C03A
1C3C1C01E06D486C7E00385B5CD93FC07F00705BA291C7FC133ED8E07E495AA2EA007CA2
49495AA34B5A485AA24B5AA2485A92381F01C0A3484890383E0380A392383C0700485A16
065E161C48C7EA1C38ED0FF0000EEC07C02A2779A530>I<EC3F80903801FFE0903807E0
F890380F803C90383E001E49131F5B0001EC0F80485A4914C01207485AA2485A123FA290
C7121F5AA300FEEC3F80A316005D48147E15FE5D5D007C13014A5A007E5C003E495A4A5A
6C49C7FC6C137C3807C1F83801FFE06C6CC8FC222777A52C>I<90390F8007E090391FC0
1FF8903938E0783C903970F0E01E913879C01F9039E07B800FDA7F00138014FE48484814
C0A25CA2380381F0A2EA0001A24948131FA44948EB3F80A3170049485B167EA25E131F4B
5A5E4B5A013F5C6E485A013E49C7FCECE01E90387C707CEC3FF0EC0FC091C9FC5BA4485A
A4485AA31207B57EA32A377FA52C>I<027C1380903803FF0190380F838390381F01C790
393C00EF005B01F8137F485A4848137E120749133E120F001F5C5B123FA290C75A5AA300
FE495AA448495AA44A5A140F127C141F4A5A003C137F003E13EF381E01CF260F079FC7FC
3803FE1FEA00F81300143EA45CA45CA3130190387FFFE090B5FCA2213777A528>I<3903
E001F83907F00FFE3A0E381E0780381C3C3890391E700FC00038EBE01FEB1FC0D93F8013
8012709138000E0092C7FC133EEAE07E137C1200A25BA4485AA4485AA4485AA4485AA448
C9FCA2120E222779A524>I<14FF010313C090380F81E090381C00704913381378017013
7801F013F8EBE001120115F0EC00E06D1300A213FEEBFFE06C13FC6D7E6D7E6D13800103
13C0EB003FEC0FE014071403121C123E127E00FE14C0A248148048130700E01400007013
0E5C6C5B381F01F03807FFC0D801FEC7FC1D277AA523>I<EB0380EB07C0A3EB0F80A4EB
1F00A4133EA45B007FB5FCB6FC14FE3800F800A4485AA4485AA4485AA4485AA448C7FC14
1CA21438123E1430147014E0A2EB01C0381E0380EB0700EA0E0EEA07FCEA01F0183778B5
1D>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E038701F
00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133E1607A3ED7C0EA315FC
0201131C12019138033C182600F00613389039783C1C7090393FF80FE090390FE007C028
2779A52E>I<01F8ED01C0486C9138E003E0D8070E903901F007F0D8060F150F000CEC03
E0001C01801407001816031238923807C00138701F00A21700D8E03E494813E0A2C65AA2
92391F0001C05BA34848013EEB0380A318004848495BA21706170EA25F15FC1718000101
01143803BC5B2600F0031460902678071E5B903A3C0E0F838090271FFC07FFC7FC903907
F000FC342779A539>119 D<903907E003F090391FF80FFC90393C3C1C1E9038701E3090
39E00E703F3A01C00FE07FD8038013C00100147E48148000061538000E1500A24849C7FC
A2C7FCA2143EA45CA45C1638A349481370121C003E15E0EA7E0300FEEC01C00107EB0380
26FC0678130039780E380E3938381C1C391FF00FF83907E007E028277CA528>I<13F848
6C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E038701F00A3D8E03EEB
07C0A2C65AA2ED0F805BA34848EB1F00A44848133EA45DA315FC4A5A120114033800F006
9038783DF0EB3FF9EB0FE1EB00014A5AA25D001C1307003E5C007F130F92C7FC007E131E
143E0078133C00705B5C383803C0381C0F80D80FFEC8FCEA03F8253879A52A>I<D901E0
13C0903807F00190390FF80380EB1FFC90393FFE070090387C1E0E9038F007FE9038E001
FC0001EB0038495B5DC8FC4A5A4A5A4AC7FC140E5C5C5C5C495A495A49C8FC130E5B4913
0E5B49131E4848131C4848133C48C71238D80FF8137801FE5B391C0F83E0486CB45A0078
5CD8700390C7FC486C5AEB00F822277BA523>I E /Fl 52 123 df<D801F0EB3FC0D803
FCEBFFF03A061E03C0F83A0C1F07007C26180F0C133E1498003013B0D91FE0133F5C1260
5C163E4848C7127EA21200A2017E14FCA449EB01F8A44848EB03F0A44848EB07E0A44848
EB0FC0A44848EB1F8012076C5AC8FCED3F00A4157EA45DA44A5AA25D6E5A28387EA52B>
17 D<EB01C0496C13070107EC0F8017C04948EB1F80A44948EB3F00A449C7127EA4017E
5CA449495AA44848495A170CA30003913807E018A3030F13300007141F15376D01731360
03E313C03A0FDF0381E1903ACFFF00FF80D9C3FCEB3E0001C0C9FC485AA448CAFCA4127E
A45AA25A12702E387EA534>22 D<011FB612F8017F15FC90B7FC000316F84816F09026C0
3003C7FCEA0E005A48EB70070030EB60065A4813E00040140EC712C01301A3903803801E
A21307A214005BA25B011E133E133E153F133C137C8101FC805B000181A249130F5E6C48
6DC7FC2E267EA431>25 D<027FB512E049B612F01307131F4915E090267F81FEC7FC9038
FE007ED801F87F48487F485A4980485A121F90C7FC5AA2127EA3484AC7FCA3153E157E5A
5D5DA24A5A4A5A007C5C4A5A003C49C8FC6C131E6C137C380781F03803FFC0C66CC9FC2C
267CA431>27 D<121C123E127FEAFF80A3EA7F00123E121C0909798818>58
D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A21206A25A5AA25A
12200A1A798818>I<17181738173C177C17FCA21601A216031607A2160D831618163816
301660A216C0150116804B487EA203067F150E150C5DA25D157015604B80A24A48133F14
0392C7FC1406A2020FB6FC5CA20230C7EA3FC0A24A141F14E05C495AA249C8FC1306A249
82170F5B1338137813F8D807FCED3FF0267FFFC0010FB512C0B517E06C4916C03B3D7DBC
41>65 D<0103B712C018F818FE903B0007F80001FF02039138007F804A48EC1FC019E018
0F19F04A481407A44A5AA2180F19E04A5AF01FC0183F19804AC8EA7F0018FE4D5AEF07F8
02FEEC1FE0EF7F8091B600FEC7FC5FD901FCC7EA7F80EF1FC0EF07F0717E495A717E84A2
49481400A4495A1701A349484A5AA24D5A604948140F4D5A4D5A4D5A49C74848C7FCEE07
FE49EC1FF8B812E0178004F8C8FC3C3B7CBA41>I<DC7FC01320922607FFF81370033F01
FE13E09238FFC01F913A03FC000781DA0FF0EB01C3DA1FC0903800E7C0027FC8127F02FE
153FEB01F84948ED1F80495A4948150F495A013F170049C9FC13FE8448481606485AA200
07170E4848160C1804484893C7FCA3485AA3485AA590CCFC5AA2184018C07E4D5AA34DC7
FC7E6D15065F121F6D5D000F5E6C6C5D6D4A5A00034B5A6C6C4AC8FCD800FE141ED97F80
13F890391FF007F00107B512C0010149C9FC9038003FF03C3D7CBB3E>I<0103B77E18F8
18FE903B0007F80003FF02039138007F804A48EC1FC0F00FE0F007F0F003F84A48140119
FC180019FE4A48157EA2197FA24A5AA44AC9FCA402FE16FFA4494816FE1801A3494816FC
180319F8A24948150719F0F00FE0A24948ED1FC0A2F03F80F07F004948157E18FE4D5A4D
5A49484A5A4D5AEF1F80057FC7FC49C7EA01FEEE07F849EC3FE0B812804CC8FC16E0403B
7CBA47>I<0103B812F8A390260007F8C7121F18014B14001978A219704A481530A44A5A
A21960A24A4813101730A219004AC75AA217E0A202FE495A160F91B6FCA2495D9138FC00
0F16071603494891C8FCA31980494801061301A2F0030093C7FC49485D1806180E180C49
48151C1818183818304948157018F04D5A170349C8EA0FC0173F49913803FF80B9FC95C7
FCA23D3B7CBA40>I<0103B812E0A390260007F8C7123F020315074A4814031801A219C0
4A481400A44A5AA2F00180A24A5A1760A295C7FC4AC75AA3160102FE5C1603161F91B6FC
4992C8FCA29138FC001F8249481306A449485BA31608494890C9FCA4495AA4495AA449CB
FCA2497EB612C0A33B3B7CBA37>I<DC7FE01310922607FFFC1338033F6D13709239FFC0
1F80913B03FE0003C0F0DA0FF0EB00E1DA1FC0EC73E04A48143702FEC8121F495AD903F0
ED0FC0495A49481507131F4948168049C9FC13FEA24848EE030012035B00075F48481606
1802484893C7FCA3485AA3485AA590CCFC48031FB512804C14C019809339001FF0006C70
5AA24D5AA36C7E4D5AA26C7EA26C6C4BC7FC12076C6C5D7F6C6CEC03BE6CB4EC073ED93F
C0EB3E1E90391FF801F80107B5EAE00C0101EC80049026001FF8C9FC3D3D7CBB44>I<01
03B5D8FC01B512FEA390260007FCC73803FE004B5D4B5DA44A484A5AA44A484A5AA44A48
4A5AA44AC8485AA402FE4BC7FCA291B8FCA2495E02FCC8FCA349484A5AA449484A5AA449
484A5AA449484A5AA449484A5AA449C8485AA249157FB6017FB57EA3473B7CBA48>I<49
B512FE5B7F90390003FE005D5DA44A5AA44A5AA44A5AA44A5AA44AC7FCA414FEA4495AA4
495AA4495AA4495AA4495AA4495AA2497E007FB57EB6FC7E273B7DBA26>I<0103B6FCA3
90260007FCC8FC6E5A4A5AA44A5AA44A5AA44A5AA44AC9FCA414FEA4495AA4495AA44948
15C0A3EF0180495AA2EF0300A249485C1706170E171E4948141C173C177C5F49C71203EE
0FF04914FFB8FC5FA2323B7CBA3B>76 D<EEFFC0030F13F892387F00FEDA01F8EB1F80DA
07E0EB07C0DA0F80EB03F0023FC76C7E027E140002F881D903F0157E495A494881131F49
48168091C9121F137E01FE17C0485AA2485A12075B120F5B121F183F5B123FA34848EE7F
80A318FF190048CAFC4D5AA26017036017076C5F170F604D5A6D4B5A003F4CC7FCA2001F
16FE6D4A5A000FED03F06D4A5A00074B5A6C6CEC3F806C6C027EC8FC6C6C495A013FEB07
F090391FE03F80902607FFFEC9FC9038007FE03A3D7CBB42>79 D<0103B77E18F018FC90
3B0007F80003FE9438007F804B143FF01FC0F00FE0A24A4815F0A44A5AA44A48EC1FE0A2
19C0183F4AC81380F07F0018FE4D5A02FE4A5A4D5AEF1FC005FFC7FC49B612FC17E002FC
CAFCA2495AA4495AA4495AA4495AA4495AA449CBFCA25BB6FCA33C3B7CBA37>I<EEFFC0
030F13F892387F00FEDA01F8EB1F80DA07E06D7E4A48EB03F0023FC76C7E147E4A6E7ED9
03F8157E495A494881495A4948168091C9FC49161F01FE17C0485AA2485A12075B120FA2
485A183FA2485AA34848EE7F80A4F0FF0048CAFC6017016017036017076C5F170F604D5A
4D5A273F8003F091C7FC4A6C5B001FD91C0C13FE903AC0180601FC000F9039300203F090
3AE0600307E000074B5A2603F0C0495AD801F8027EC8FCD800FC5C90393F6007F090391F
F03F800107B514C09038007FE3EC00030307495AA217034DC7FC705A171EEEE07EEEFFFC
A25F5F6F5B6F5B6F5B047EC8FC3A4D7CBB44>I<0103B612F8EFFF8018E0903B0007F800
1FF80203EC03FC4A48EB00FE187FF03F80A24A4815C0A44A5AA44A48EC7F80A2F0FF0060
4AC7485A604D5AEF0FE002FEEC1F80057FC7FCEE07F891B612E04992C8FC9139FC000FC0
EE03F0707E49486D7EA2177EA24948147FA4494814FEA449481301A4494813034D1330A2
196049C7120119C0496E7EB691387E038094383F07004AEC1FFCCAEA03F83C3C7CBA41>
I<DB1FE013809239FFFC01C002039038FF038091390FE01F8391391F0003C7023EEB00EF
0278EC7F004A80495A4948800107151E5C130FA249C8120CA3171C17186E140894C7FC80
808014FF6D13E06D13FEEDFFC06D14F06D806D6C7F021F7F02017FEC003F03037FED007F
163F161F83A2160F00045E120CA4001C4BC7FCA2161E163E003C153C003E5D5E003F1401
486C495AD87DC0495AD878F0011FC8FCD8707F137E486CB45AD8C00F13F001001380323D
7BBB35>I<48B912805AA2903BFC000FE0007FD807E0160F01804948130790C7FC000E17
031900484A5A1218A2123800304AC7FCA2481706A215FE5AA2C892C7FC4A5AA44A5AA44A
5AA44A5AA44A5AA44A5AA44ACAFCA414FEA4495AA2EB07FE001FB67E48815E393B7EBA32
>I<267FFFFC91380FFFF0B56C4A13F84A6E13F0000190C80001130049ED00F860600000
5F1701604DC7FC5F17066D5D7F5F5FA25F17E06E5C4C5A133F4CC8FC1606A25E6E5BA201
1F5C167016605EA24B5A6E48C9FCA2010F13065DA25D1538ECF0305D13075DECF180A202
F3CAFC14FEA26D5AA25C5CA25C5CA26D5A3D3C7BBA32>86 D<267FFFF890267FFFFC9038
1FFFE0B56C90B54A13F04A6D4915E0000390C7000390C73803FE0001FCDA01FCEC00F863
63000162A2505A0403150398C7FC04071506160D621619715C043015381A3004605D6D14
E004C05D0000EC01804F5ADB0300140397C8FC03061506150E030C5D5D614B7F715B4B5D
15E06D495D4A5A017F4C5A4AC7FC4EC9FC02065D18064A5D5C605C18B04AEC3FF0604A5D
A24A5D6DC8FC95CAFC133E173E013C153CA2013815381330543C7BBA51>I<91B500FC90
380FFFFC704913FE4C15FC020301C001031380020090C73801FC00F000F0F001C06F6C5C
4EC7FC6F6C130660031F141C705B606F6C5B4D5A0307495A04F890C8FC17066F6C5A5F6F
6C5A5F03005B705AA2167FA2163F83167F8316DF9238018FF0ED030FED0607030C7F1518
4B6C7E1560EDE001DA01C07FEC03804AC77E140E4A6E7E14184A143F4A815C49486E7E49
C8FC49150F011F82137F2603FF80EC3FF8007F01F00103B512F0B55C6C81473B7EBA47>
I<267FFFFE913803FFFCB55D7E000101C09138007F806C90C9EA7E006D6C15781860606D
6C14014D5A6D6C92C7FC17065F6D6C5C17385F6D6C5C5F6D6C495A4CC8FC16066D6C130E
5E5E6D6C13305E6E6C5AED81801583DA3FC7C9FC15CE15CCEC1FF85D6E5AA25D141FA35D
143FA392CAFC5CA3147E14FEA35C1301A213030003B512FCA25D3E3B7DBA32>I<027FB7
FC91B8FCA203F0C712FE4990C7EA01FC02FCEC03F802F0EC07F04AEC0FE04948141F4AEC
3FC0EF7F8049C8130017FE01064A5A010E4A5A010C4A5A4C5A49141F4C5A5F90C848C7FC
16FE4B5A4B5A4B5A150F4B5A4B5A5E4BC8FC15FE4A5A4A5A14074A5A4A5A4B5B4A485B4A
C7FC14FE49481406495A13074948140E4A140C495A4948141C49C8121801FE1538484815
7800035E485A484814034914074848EC3FE04848EB01FF48B7FCB85AA2383B7BBA3B>I<
147E49B47E903907C1C38090391F0067C0013E136F49133F5B4848131F00031580485AA2
485A001FEC3F005B123FA290C7127E5AA300FE5CA44A5A481506A3913803F00CA2127C02
071318140F6C131B001E013113306C01E11360260783C013E03A03FF007FC0D800FCEB1F
0027277DA52D>97 D<133F380FFF804890C7FC7EC67EA2137EA45BA4485AA4485AA43807
E07E9038E1FF809038E783E09038EE00F0EA0FD801F0137849137C5B001F147E5BA348C7
FCA4007E14FEA448EB01FCA315F814034814F0A2EC07E0A2EC0FC000781480EC1F00007C
133E003C133C001C5B381E01F0380F07E03803FF80D800FCC7FC1F3D7CBB25>I<EC1FE0
ECFFF8903803F01C90380FC00649C67E013E131F495B495B48485B485A12074848137E15
3C001F91C7FC485AA290C9FC5AA312FEA65AA21680007C1401007EEC0300003E14065D6C
14386C14F039078003C02603E01FC7FC3800FFFCEB3FE021277DA525>I<163F92380FFF
804B130081ED007FA2167EA45EA44B5AA44B5AA491387E07E0903801FF87903807C1C790
381F0067013EEB6FC049133F5B4848131F00035D485AA2485A001F4AC7FC5B123FA290C7
127E5AA300FE5CA44A5A481506A34A485AA2127C02075B140F6C131B001E01315B6C01E1
5B260783C013E03A03FF007FC0D800FC011FC7FC293D7DBB2D>I<EC1FE0ECFFF8903807
F03C90380F800E90383F0007137C5B485A1203485A120F49130E121F49133C003F14F0EC
0FE048B5128002F8C7FC90C9FCA2127E12FEA4127EA316801501003EEC030015066C5C15
386C6C13F00007EB03C02603E01FC7FC3800FFFCEB3FE021277DA528>I<167C4BB4FC92
3803C38092380700C0ED0F07ED1E0FED3E1F163F157EA292387C1F809238FC0E0093C7FC
A34A5AA54A5AA40103B512F8A25E90260007E0C7FCA44A5AA54A5AA54AC8FCA6147EA55C
A5495AA45C1303A25CA3381E07C0123FEA7F875CEAFF0F91C9FCEAFE0EEA7C1EEA601CEA
3878EA1FE0EA07C02A4F7CBC2A>I<EC03F0EC1FFC91383E0E1C9138F8033E903901F001
FEEB03E0903807C000495A011F14FC49C7FCA2137E01FEEB01F85B1201A249EB03F01203
A34848EB07E0A4ED0FC05BA30003EC1F80A2153F6C6C137FEDFF000000EB01BF90387803
3FEB3C1E90381FFC7EEB07E090C7FCA25DA44A5A121E003F5C48130348495A5D4A5A4849
C7FC0078137E383C01F8381FFFE0000390C8FC27387FA529>I<EB03F0EBFFF8485B7E13
07A25CA4495AA4495AA449C9FCA490387E03FCEC0FFF91383C0F8091387007C09039FCC0
03E0EBFD80EBFF004980485AA25B5E48481307A44848495AA34B5A485AA24BC7FCA2485A
037E13C0A348C738FC0180A2EE030015F8007E1506A25EED7818481570007CEC3FE00038
EC0F802A3D7CBB32>I<147014F8EB01FC1303A214F8EB01F0EB00E01400AC137CEA01FE
EA038738060780000C13C01218A2EA300FA21260EB1F80A212C0EB3F001200A2137EA25B
A3485AA3485A140CA2EA07E01418EA0FC01430A214601380000713C0EB81803803C300EA
01FEEA007C163B7EB91E>I<ED0780ED0FC0151F16E0ED3FC0151F1680ED0F0092C7FCAC
EC07C0EC1FF0EC7878ECE07C903801803C903803003EA20106137E5BA25BA2495BA290C7
FCA24A5AA44A5AA44A5AA44A5AA44A5AA44AC7FCA4147EA45C121E003F5BEA7F0100FF5B
495A495A48485AD8781FC8FCEA307EEA1FF8EA0FC0234C81B923>I<EB03F0EBFFF8485B
7E1307A25CA4495AA4495AA449C8FCA4017EEB03E0ED0FF8ED3C1CED703C49EBC0FEEC01
81EC030114062601F80C13FC021813F891383000F04A130048485AEBF18001F3C8FC13FE
485AEBFFC0EBEFF8EBE1FC380FC07E141F816E7EEA1F801618A33A3F001F8030A3166012
7E020F13C0A2913807818048903803C300007CEB01FE0038EB007C273D7CBB2D>I<EB0F
C03803FFE014C0A2EA001FA21480A4EB3F00A4137EA45BA4485AA4485AA4485AA4485AA4
485AA448C7FCA4127E1303A3EAFC06A35BA3EA7C18A2EA3C30EA1FE0EA07C0133D7CBB1A
>I<D801F0D91FC0EB3FC0D803FCD9FFF0EBFFF03D061E01E07C03C0F83D0C1F07003E07
007C26180F0E020C7F02986D5A003001B05CD91FE002E0133F5F00605B4A5C193E4848C7
48C7127EA21200A2017E027E5CA34E5A495CA24E5AA24848495A953807E00CA348484948
90380FC018A21A301980484849481560A21AC0953807818048484948EC870000070207EC
03FE6C486D48EB00F846277EA54C>I<D801F0EB3FC0D803FCEBFFF03A061E03C0F83A0C
1F07007C26180F0C7F1498003013B0D91FE0133F5C12605C163E4848C7127EA21200A201
7E5CA34B5A5BA24B5AA2485A923807E00CA3484890380FC018A21730168048481560A217
C092380781804848EC87000007EC03FE6C48EB00F82E277EA534>I<EC1FE0ECFFFC9038
03F03E90380FC00F90391F000780013EEB03C04914E04914F0484813011203484814F848
5AA2121F5B003F140390C7FC5AA300FEEC07F0A3ED0FE0A216C048141F1680007CEC3F00
007E143E157E003E5C5D6CEB03E06C495A6C6C485A2603E07EC7FC3800FFF8EB3FC02527
7DA52A>I<90390F8003F090391FE00FFC903930F03C1F903A60F87007809038C078C091
397D8003C02701807F0013E014FE17F048485AA3380601F8A21200A249481307A44948EB
0FE0A317C04948131F1780A2EE3F00495A167E167C5E496C485A5E91386003C0ED0F8090
267E383FC7FCEC1FFCEC07E091C9FC5BA4485AA4485AA31207B512C0A32C3783A52B>I<
D801F0137E3903FC03FF3A061E0781803A0C1F0C03C03A180F180FE0ECB01F003013E013
1F02C013C0006001801380ED0F0092C7FC4848C8FCA21200A2137EA45BA4485AA4485AA4
485AA4485A12076C5A23277EA527>114 D<EC7F80903801FFE0903807C07090380E0018
49130C133C0138137C017813FCEB700113F0A29038F800F815606D1300EBFF8014FC14FF
6D13806D13C06D13E0010713F0EB007FEC07F814011400121E123F5A4814F0A24814E048
13014814C00060EB03800070EB07006C131E000F137C3807FFF0C613801E277CA528>I<
EB01C0497E1307A2495AA4495AA449C7FCA4137E007FB51280B6FC1500D800FCC7FCA448
5AA4485AA4485AA4485AA4485A1406A25CEA3F005CA25CA25C6C5B495AD80F07C7FCEA07
FEEA01F819377DB51F>I<137C48B4143826038780137C260607C0137E000C5D80121812
304B5A38600FC0A3484848485AA21200EB3F004B5A137EA349495AA44848495A1760A392
383F00C0A3EE0180157F000014FF9139019F030090397C031F0690393E0E0F0E90391FFC
07FC903903F001F02B277EA531>I<017CEB01E048B4EB03F03903878007260607C013F8
120C14E00018140300301400A24848481378A34848481330A2120049C7FC1660137EA349
14C0A3ED0180485AED0300A21506A25DA25D00005CA2017C5B90383C01C090381F0780D9
0FFEC7FCEB03F825277EA52A>I<017C163848B40238137C26038780017C13FE260607C0
017E13FF000C5D800018177F0030173F4B48131F26600FC0150FA348484848481306A212
00EB3F004B48130C137EA34949481318A318304848495AA21860A218C0A2EF0180A20000
023FEB0300036F1306017CEB67C06D01C3131C903A1F0381F078903A07FF00FFE0D901FC
EB3F8038277EA53E>I<D903F013FC90390FFC01FF903A3C1E0303809026700F0613C090
3AC0078C0FE0D80180EBD81FD8030013F0A2000602E013C0178048ED0F0093C7FC48495A
A2C7FCA24A5AA44AC8FCA4147E1603A3001E491306123FD87F805C1381D8FF015CD9033C
5B007E013E5B267C061E5B3A381C0F0780271FF807FFC7FC3907E001F82B277EA531>I<
137C48B4141C26038780133E260607C0133F000C157E801218123016FC48485AA33AC01F
8001F8A21200EB3F00ED03F0137EA349EB07E0A44848EB0FC0A4ED1F80A4ED3F0000005C
5D90387C01BF90383E077EEB0FFEEB03F890C7FC5DA25D380F8001D81FC05B003F13035D
49485A4A5A010090C7FC0030131E5C6C13F8380E03E03807FF80D801FEC8FC28387EA52A
>I<D903E01320496C1360496C13C0497E90393FFE018090397FFF03009038F81FFEEBE0
033901C0000C495B5DC85A5D4A5A4AC7FC14065C5C5C5C495A495A0106C8FC5B5B491303
5B495B4848130648C7120E00065CD807FC137C390FFF81F8391C0FFFF0486C5BD830035B
00605C486C90C7FCEB007C23277CA528>I E /Fm 40 123 df<ED7FC0913807FFF89138
1FC03C91387F000F02FCEB0380EB01F04948EB0FC00107141F4948497E131F495AA291C7
6C5A496E5A70C7FC93C8FCADEE0FE0B8FCA3C66CC7123F161F160FB3B12601FFC0EB3FF8
007FD9FF0FB512E0A333497EC839>12 D<1678A316FCA34B7EA24B7EA34B7FA34B7FED0E
7FA2031E7FED1C3FA2033C7FED381FA203707F160FA203E07F1607A24A486C7EA34A486C
7EA34AC77FA24A81020E147FA2021E81021C143FA2023C810238141FA2027881027FB6FC
A291B77E02E0C71207A20101824A1403A249488183A249C97FA3010E707EA349707E131E
133E017F8348486C82000701E0EDFFFCB500FC023FEBFFFCA346497DC84D>65
D<B812E017FE717E26007FF0C7EA7FE06D48EC1FF8011F6F7E717E717E7113808319C019
E0187FA219F0A2183FA3187FA219E0A218FF19C0A24D13804D13004D5A4D5AEF1FF0EF7F
E0933801FF8091B600FCC7FC17FF02E0C7EA3FE0EF0FF8EF03FE717E711380F07FC019E0
F03FF0F01FF8A219FC180FA219FEA819FC181FA219F8183FF07FF019E0F0FFC04D13804D
1300013FED0FFE496CEC7FFCB912F0188005FCC7FC3F477DC649>I<DB03FF140C033F01
F0131C4AB512FC0207D9007F133CDA1FF090380F807CDA7FC0903803C0FC4AC812F0D903
FC15794948153F4948151F4948150F494815074948150313FF4890C912015B0003170048
5A197C120F5B001F183CA2485AA2191C127FA25B190012FFAD127FA26D171CA2123FA36C
7E1938120F7F120719706C7E000118E07F6C6DED01C0137F6D6CED03806D6CED07006D6C
150E6D6C5D6D6C5DD900FF5DDA7FC0495ADA1FF0EB07C0DA07FF017FC7FC0201EBFFFEDA
003F13F0030313803E497AC74B>I<B812E017FE717E26007FF8C713E06D48EC1FF8011F
ED07FCEF01FF717F727EF01FE085727E1807727E85180185721380A21AC0197FA21AE0A2
193F1AF0A51AF8AC1AF0A5F17FE0A31AC0A2F1FF80A24E1300A26118034E5A614E5A4E5A
4E5A4E5A4D48C7FCEF07FE013FED1FF8496CECFFE0B912804DC8FC17E045477DC64F>I<
BA1280A3C601F0C7120F6D48020013C0013F163F181F180F18071803A2180119E0A21800
A51970A217E0A21900A41601A316031607163F91B6FCA39138E0003F160716031601A316
00A3190EA394C7121CA5193CA21938A21978A219F8A2F001F01803A2180F181F017F167F
496CEC07FFBA12E0A33F477DC646>I<BAFCA3C601F0C7121F6D4802011380013FED007F
183F181F180F1807A2180319C0A21801A5F000E0A3EE01C01900A51603A31607160F167F
91B6FCA39138E0007F160F16071603A31601A693C9FCB1497EEBFFFCB7FCA33B477DC643
>I<DB03FF140C033F01F0131C4AB512FC0207D9007F133CDA1FF090380F807CDA7FC090
3803C0FC4AC812F0D903FC15794948153F4948151F4948150F494815074948150313FF48
90C912015B00031700485A197C120F5B001F183CA2485AA2191C127FA25B96C7FC12FFAD
007F93B612F8A27F9439003FFE00003FEF0FFC1807A26C7EA2120F7F1207A26C7E12017F
6C7F137F6D7E6D7E6D6C150F6D7ED903FE151DD900FF1538DA7FC014F0DA1FF8903803E0
7CDA07FF90383FC03C020190B5EA001CDA003F01F8130C030301C090C7FC45497AC751>
I<B6D8FE01B612FCA326007FFCC8EBF8006D486F5A6D486F5AB3AA91B8FCA302F0C8123F
B3AC496C4B7E496C4B7EB6D8FE01B612FCA346477DC64D>I<B77EA3C66C48CAFCEB3FF8
6D5AB3B3A4F00380A4F00700A560A360181E183EA2187E18FE17011703170F013F153F49
6C49B45AB9FCA339477DC641>76 D<B500F8051FB5FCA3C66C6C94383FFE00013F61D91D
FEEF77F8A3D91CFF17E7A26E6CED01C7A36E6CED0387A26E6CED0707A36E6C150EA36E6C
151CA26E6C1538A36E6C1570A26E6C15E0A36F6CEB01C0A36F6CEB0380A26F6CEB0700A3
6F6C130EA26F6C5BA36F6C5BA26F6C5BA36F6C5BA393387F81C0A293383FC380A3DC1FE7
C7FCA2EE0FFEA3705AA2133E017F6E5A496C4D7E000301E06D484A7EB60080033FB6FCA2
705A58477DC65F>I<B500F00207B512FC80A226003FFCDA001F13006D6CED07FC725AD9
1DFF6F5A6F6E5A131C6E7E81143F81141F6E7E8114076E7E81806E7F82157F6F7E82151F
6F7E8215076F7E82816F7F83167F83163F707E83160F707E831603707E188082EF7FC018
E0173FEF1FF018F8170FEF07FC18FE1703EF01FFA283A2187F183FA2181F180F133E017F
1607496C1503000313E0B66C14011800A246477DC64D>I<ED0FFE92B512E0913907F803
FC91391FC0007F027FC7EA1FC002FE6E7ED903FCEC07F8D907F0EC01FC49486E7E011F82
49486F7E49486F7E49C96C7EA24848707E0003844916070007844848707EA2001F84A249
82003F1980A3007F19C04982A300FF19E0AD007F19C06D5EA4003F1980A26D5E001F1900
A26C6C4C5AA20007606D160F0003606C6C4C5AA26C6D4B5A6D6C4B5A013F5F6D6C4BC7FC
6D6C4A5A6D6C4A5A6D6C4A5AD900FEEC0FE0DA7F80EB3FC0DA1FE001FFC8FC913907FC07
FC0200B512E0DB0FFEC9FC43497AC750>I<B812C017FC17FFC69026F0000113C06D4890
38003FF0013FED0FF8717E717E717E19808319C019E0187FA219F0A819E0A2F0FFC0A219
805F19004D5A4D5AEF0FF0EF3FE0933803FF8091B648C7FC17F002E0CAFCB3AB497E497E
B612F8A33C477DC646>I<B712FEEEFFE017FC3B007FF8000FFF6D48010013C0011FED3F
E0EF1FF8EF07FC717E8483858583A285A761A24D5BA296C7FC4D5A4D5A60EF1FF0EF3FC0
05FFC8FCEE0FFC91B612E017809139F0000FE0EE03F8EE00FC177E177F717E717E84A271
7EA284A484A584A41A0272130783A27113801A0E496C80496C6EEBC01CB600FE027F1318
95381FF070953807FFE0CCEA7F8048487DC64C>82 D<003FBAFCA3903BF8000FFE000701
C06D48130090C7163F007EF01F80007C180FA200781807A300701803A500F019C0481801
A5C893C7FCB3B3A64B7E92383FFF800103B712F8A342467CC54B>84
D<B600E0021FB5FCA3000101FCC8000313F026007FF0030013804AEE7F00013F173E193C
6D6C1638A280010F5FA26E16F001075FA26D6C4B5AA2806D4C5AA26F14076D94C7FCA26E
6C140EA281023F5DA26F143C021F1538A26E6C5CA26F14F002075DA26F130102035DA26E
6C495AA2EE80076E92C8FCA2705A037F130EA26F6C5AA2EEF03C031F1338A2EEF878030F
137016FC03075BA216FF6F5BA36F5BA26F90C9FCA3167EA3163CA248487EC64D>86
D<EB03FE90383FFFC09038FC03F03901E000FCD80380137E48C77E486C6D7E01E080001F
140F6D80A26F7E6C5AA2EA0380C8FCA4EC01FF147F903803FF8790381FF007EB7F803801
FE00EA03F8485A485A485A123F5B007F161CA248C7FCA3150FA36C6C131B15336C6C9038
31F838001F14613B0FF001C0FC703B03FC0780FFE03B00FFFE003FC0D90FF8EB1F802E2F
7CAD34>97 D<13FE12FFA3120312011200B3A315FF020713E091381F01FC913838007E4A
EB1F8002C06D7E6D486D7E707E91C77F496E7EA2707EA283A2EF7F80A318C0AA1880A217
FF1800A25F16015F5F6D4A5A6E130701FD5DD9F9C0EB0F80D9F8E0013FC7FCD9F078137E
91381E03F89039E00FFFE090260001FEC8FC32497DC739>I<EC3FE0903801FFFE903907
E01F8090391F8003C0013EC712E001FC1470484814F8000314034914FC00071407485A12
1F49EB03F8123FED00E01600127F5BA212FFAA127FA27F123F160E121F7F000F151C7F00
0715386C7E000115706C6C14E0017EEB01C090391F80078090390FE03E00903801FFFC90
38003FE0272F7DAD2E>I<EE1FC0ED1FFFA3ED007F163F161FB3A3EC1FE0903801FFFC90
3807F01E90391F80079F90393F0001DF017CEB00FF4848147F0003153F5B4848141F120F
121F5B123FA2127F5BA212FFAA127FA36C7EA2121FA26C7E163F6C7E0003157F6C6C14FF
6C6C903801DFE0017E9038039FF0903B1F800F1FFFC090380FE03E903801FFF89026003F
C0EBC00032497DC739>I<EC7F80903803FFF090380FC0FC90383F003F017CEB1F8049EB
0FC00001EC07E0485A4848EB03F0000F15F8A24848EB01FCA2123FA2484814FE1500A212
FFA290B6FCA20180C8FCA6127FA37F123F160E121F7F000F151C12076D1438000315706C
7E6C6C14E0013EEB03C090391F800700903807E03E903801FFF89038003FC0272F7DAD2E
>I<EC07F0EC3FFCEC7C0E903801F81F903903F03F80903907E07FC0EB0FC0A2EB1F8001
3FEB3F80ED1F00EC000E4990C7FCB1B612E0A3C66CC8FCB3B28048487E007FEBFFC0A322
497DC820>I<49B4EB03F0010F9038E01FFC903A1F83F07C3E903A7E00FDE07E01F8EB3F
800001ED003C484890381F80180007EDC000A248486D7EA2001F81A7000F5DA26C6C495A
A200035D6C6C49C7FC0000143ED801FE13FC90389F83F039030FFFE0010190C8FC48CAFC
A67F7F7F6CB512FEEDFFE06C15F86C15FE6D8048B712802703E0000113C0D80F80903800
3FE048C8120F003EED03F0003C1501007C16F80078150012F8A5007CED01F0A26CED03E0
001E16C06CED0780D807C0EC1F006C6C143ED800FCEB01F890393F800FE0010FB5128001
0001F8C7FC2F437DAC34>I<13FE12FFA3120312011200B3A3ED7F80913803FFF0913807
81F891380C007C4A137E4A7F4A804A131F6D5A8391C7FCA35BB3AA2603FF80EB7FF0B5D8
FE1FB512C0A332487CC739>I<EA01F0487E487E487EA56C5A6C5A6C5AC8FCAE13FE127F
A3120312011200B3B1EA03FFB512FCA316467DC51C>I<13FE12FFA3120312011200B3B3
B3A83803FF80B512FEA317487DC71C>108 D<D801FCD97FC0EB07FC00FF902601FFF890
381FFF8091260780FC9038780FC091260E003E9038E003E00003011890263F01807F0001
49903A1F830001F800004902C6804A14CCD9FD80D90FD8130005F88001FFC75BA3495DB3
AA2603FF80D93FF8903803FF80B5D8FE0FB500E0B512FEA34F2D7CAC56>I<D801FCEB7F
8000FF903803FFF091380781F891380C007C000349137E0001497F000049804A131FEBFD
808301FFC7FCA35BB3AA2603FF80EB7FF0B5D8FE1FB512C0A3322D7CAC39>I<EC3FE090
3801FFFC903807E03F90391F800FC090397E0003F0496D7E48486D7E4848147E0007157F
4980000F16804848EC1FC0A2003F16E0A249140F007F16F0A300FF16F8AA007F16F0A36C
6CEC1FE0A3001F16C06C6CEC3F80A26C6CEC7F000003157E6C6C5C6C6C495A017E495A90
391F800FC090390FE03F80902603FFFEC7FC9038003FE02D2F7DAD34>I<01FE13FF00FF
010713E091381F01FC913838007E0003496D7E000101C06D7E6C6C486D7E707E91C77F49
6E7E160183A2707EA21880A2177F18C0AA188017FFA21800A24C5AA24C5A5F6D4A5A804C
5A6EEB1F80496C49C7FC027813FE91381E03F891380FFFE0DA01FEC8FC91CAFCAF3803FF
80B512FEA332417DAC39>I<DA1FE013E09138FFFC01903807F01E90391FC0038190393F
0001C3017EEB00E3491467000115374848143F4848141F120F485A160F123F5B127FA25B
12FFAA127F7FA2123FA26C7EA26C6C141F12076D143F12036C6C146F6C6C14CF013FEB01
8F90391F80070F903807F03E903801FFF89038003FE091C7FCAFEE3FF8030FB512E0A333
417DAC37>I<3901FC01FC00FFEB07FF91380E0F809138181FC000039038303FE0000113
60000013C0A29039FD801FC0ED0F80ED070001FFC8FCA45BB3A77F00037FB67EA3232D7E
AC28>I<90381FF80690B5120E3903F0079E39078001FE000EC7127E5A003C143E48141E
A212F8150EA27EA27E7ED87FC090C7FC13FC383FFFE06C13FE6C6D7E6C14E06C80C614FC
011F7F13019038000FFF02011380EC007F0060EC1FC012E0150F7E1507A37E16807EED0F
007E6C141E6D5BD8F9E05B39F0F803E039E03FFFC026C007FCC7FC222F7DAD29>I<130E
A7131EA4133EA3137EA213FE120112031207001FB512FCB6FCA2C648C7FCB3A4150EAB01
7E131C137F7F151890381F803890380FC070903807E0E0903801FFC09038007F001F417E
BF28>I<01FEEC1FC000FFEC1FFFA30003EC007F0001153F0000151FB3A9163FA3167F13
7EA26D14DF9238019FE06D9038031FF090260F8006EBFFC0903807F01C903801FFF89026
003FE0EBC000322E7CAC39>I<B500F890387FFFC0A30007018090380FFE00D801FEC7EA
07F80000ED03E05F7F6D5DA26D6C49C7FCA26E5B011F140EA26D6C5BA26E133C01071438
A26D6C5BA26E13F001015CA26D6C485AA2ECFF03027F5BA2DA3F87C8FCA215CFEC1FCEA2
EC0FFCA36E5AA26E5AA36E5AA2322D7EAB37>I<B53CF03FFFF807FFFCA30007D90001D9
800013E06C486D90C7EA7F806C48027EEC3F00191E6C6C147F191CA2017F4A6C5BA36D6C
486D5B16CF19F090261FC0036D5B1687180190280FE00703F05BA202F01503010790260E
01F85BA202F81507010390261C00FC90C7FCA202FC5D010149EB7E0EA2902600FE78EB7F
1C0370133FA2DA7FF014B84B131FA2023F15F04B130FA2021F5D4B1307A2020F5D92C712
03A2462D7EAB4B>I<B500F890387FFFC0A30003018090381FFE006C48C7EA07F80000ED
03E05F7F6D5D6E1307013F92C7FCA26D6C130EA26E131E010F141CA26D6C5BA26E137801
031470A26D6C5BA2ECFE0101005CA291387F0380A21587023F90C8FC15CFEC1FCEA215FE
6E5AA26E5AA26E5AA36E5AA25DA214035DA24AC9FCA25C140E003C131E007E131CB4FC5C
14781470485B387C01C038380380D81E0FCAFCEA0FFEEA03F832417EAB37>121
D<003FB612F8A29039F00007F00180EB0FE0003EC7121F003C15C0ED3F800038147F0078
ECFF005D4A5A007013035D4A5A140F4A5AC75B4A5A147F92C7FC14FE1301495A5C495A01
0F141C5C495A133F4948133C91C7123813FE12015B484814781207485A4914F848481301
003FEC03F049130F48C7127FB7FCA2262C7DAB2E>I E /Fn 10 115
df<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C00100A25C14023807
8006A25C141C380F0078B512F8191F7D9E1D>76 D<D801FEEC7FC0D8001EECFC005E0117
EB0178A20127EB02F01504A215080147EB09E015111521A20187495AEB83801583A23A01
038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C1380001C143E3A
FF8103FFC02A1F7D9E29>I<EBF180380389C038070780EA0E03121C123C383807001278
A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070013147C9317>97
D<137EEA01C138030080EA0E07121E001C1300EA3C0248C7FCA35AA5EA70011302EA3004
EA1838EA07C011147C9315>99 D<137CEA01C2EA0701120E121C123CEA3802EA780CEA7B
F0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C9315>101
D<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA3381E01C0A4EB0380A2EA0E07
130B38061700EA01E7EA0007A2130EA21230EA781C485AEA6070EA3FC0151D7F9315>
103 D<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180380F01C0120EA2381C
0380A438380700A3EB0E1000701320A2131CEB0C4000E013803860070014207D9F17>I<
13C0EA01E0A213C0C7FCA7120E12131223EA4380EA4700A21287120EA35AA3EA38401380
A21270EA31001232121C0B1F7C9E0E>I<381C0F80382630C0384740601380EB0070A200
8E13E0120EA3381C01C0A3EB038400381388A2EB0708EB031000701330383001C016147C
931A>110 D<EA1C1EEA266138278380EA47871307EB0300008EC7FC120EA35AA45AA45A
123011147C9313>114 D E /Fo 33 121 df<127012F012F8A212781208A31210A31220
A21240050E7C840D>44 D<127012F8A3127005057C840D>46 D<EA03F0EA0E1C487EEA18
06EA380738700380A400F013C0AD00701380A3EA780700381300EA1806EA1C0E6C5AEA03
F0121F7E9D17>48 D<13801203120F12F31203B3A6EA07C0EAFFFE0F1E7C9D17>I<EA03
F0EA0C1CEA100E487E00401380128000F013C0EAF803A3EA200712001480A2EB0F00130E
5B5B5B13605B485A48C7FC000613405A5A00101380EA3FFF5AB5FC121E7E9D17>I<EA03
F0EA0C1CEA100EEA200F007813801307A2EA380F12001400A2131E131C1370EA07F0EA00
3C130E130FEB0780A214C0122012F8A300F013801240EB0F00EA200EEA183CEA07F0121F
7E9D17>I<1306A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220
A2124012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B5B13E00010C7
FCA6EA11F0EA161CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB07
00EA20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C071218
3838030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A2
14801238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<1240387FFFE014C0A2384000
8038800100A21302485AA25B5BA25BA21360A213E05B1201A41203A76C5A131F7E9D17>
I<EA03F0EA0C0CEA1006EA3003382001801260A3127038780300123EEA3F06EA1FC8EA0F
F0EA03F8487EEA0C7EEA103F38300F80EA6007EB01C012C01300A31480EA600100201300
EA1002EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E487E13071270EB038012F0A2
14C0A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07001230EA7806130EEA700C
EA2018EA1070EA0FC0121F7E9D17>I<90380FE0109038381C309038E002703803C00139
078000F048C71270121E15305A1510127C127800F81400A7EC3FFEEC01F000781300127C
123CA27EA27E6C7E3903C001703900E002309038380C1090380FF0001F217E9F24>71
D<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F7E9E22>I<B46CEB07FE
000715C0A2D805C0130BA2D804E01313A301701323A26D1343A36D1383A290380E0103A3
EB0702A3EB0384A2EB01C8A3EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>77
D<007FB512E038780F010060EB006000401420A200C0143000801410A400001400B3497E
3803FFFC1C1F7E9E21>84 D<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E
0E1238127800F01310A3131E127838386720380F83C014147E9317>97
D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A21478A6147014F014E0
001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA0706EA1C0F1238130600
78C7FC127012F0A61270127800381380A2381C0100EA0706EA01F811147F9314>I<EB01
C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A61270A21238EA180312
0CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC
00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314>I<137CEA01C6EA03
0F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<121C12FC121CAA137C13
86EA1D03001E1380A2121CAE38FF8FF014207E9F19>104 D<1238127CA31238C7FCA612
1C12FC121CB1EAFF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B
5B136013E0EA1DF0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>
107 D<121C12FC121CB3ABEAFF8009207F9F0C>I<EA01F8EA070E381C0380383801C0A2
387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317
>111 D<EA1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>114
D<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E1306
12C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA
0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120C
EA061B3803E3F014147E9319>I<39FF9FE1FC393C078070391C030060EC8020000E1440
A214C0D80704138014E0A239038861001471A23801D032143A143E3800E01CA2EB6018EB
40081E147F9321>119 D<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813
D8EA00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC
16147F9318>I E /Fp 17 113 df<007FB812E0B912F0A26C17E03404799743>0
D<EB03C0A2805CA50030140C007C143E00FE147F007F14FEEBC3C3391FE187F83907F18F
E03900FDBF00EB3FFCEB0FF0EB03C0EB0FF0EB3FFCEBFDBF3907F18FE0391FE187F8397F
C3C3FEEB03C000FE147F007C143E0030140C00001400A5805CA220257BA72B>3
D<EB0FF0EB7FFE48B512804814C04814E04814F04814F84814FCA24814FEA3B7FCA86C14
FEA36C14FCA26C14F86C14F06C14E06C14C06C148039007FFE00EB0FF020207BA52B>15
D<18E0EF03F0170FEF3FE0EFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8
ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803
FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB
03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE
3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF01703EF00E01800AD007FB812E0B912F0A2
6C17E0344479B643>20 D<14301478A25CA313015CA2495AA2495A130F91CDFC131E5B13
7C5B485AEA07E0EA1FC0007FBB1280BC12C0A26C1A80D81FC0CDFCEA07E0EA01F06C7E13
7C133C7F7F8013076D7EA26D7EA2801300A31478A214304A2E7AAC56>32
D<18034E7EA2727EA3851801A2727EA21978197C193C858586737E737EF101F8F100FE00
7FBB1280BC12E0A26C1A80CDEAFE00F101F8F103E04F5A4F5A97C7FC191E61197C197861
A24E5AA2180361A34E5AA272C8FC4B2E7BAC56>I<0060160600F0160FA26C161F007816
1E007C163E003C163CA2003E167C001E1678A2001F16F86C16F06D1401000716E0A26D14
03000316C06D140700011680A290B7FC6C1600A30178C7121E017C143E013C143CA2013E
147C011E1478011F14F86D5CA2EC800101075CECC00301035CA2ECE00701015CA2ECF00F
010091C7FC6E5AEC781EA2EC7C3EEC3C3CEC3E7CEC1E78A2EC1FF86E5AA36E5AA26E5AA2
6E5A303D80BB31>56 D<007FB712F8B812FCA27ECA123CB217182E177B9E39>58
D<0060161800F0163CB3B27E0078167C1778007C16F8003C16F0003E15016CED03E0D80F
C0EC0FC0D807F0EC3F80D803FCECFF003A01FFC00FFE6C6CB512F8011F14E00107148090
26007FF8C7FC2E347BB239>91 D<14034A7EA24A7EA24A7EA24A7E143CEC7CF8EC7878A2
ECF87CECF03C0101133EECE01E0103131F4A7EA2010780EC8007010F80EC00034980011E
1301013E80013C1300A2017C800178147801F8147C49143C0001153E49141EA20003151F
498000071680491407000F16C090C812034816E0001E1501A2003E16F0003C1500007C16
F80078167800F8167C48163CA2006016182E347BB239>94 D<0060161800F0163CA26C16
7C00781678007C16F8003C16F0003E1501001E16E0A2001F15036C16C06D140700071680
6D140F000316006D5C0001151EA26D143E0000153C6D147C01781478017C14F8013C5CA2
013E1301011E5C011F13036D5CEC800701075CECC00F010391C7FCA26E5A0101131EECF0
3E0100133CECF87CEC7878A2EC7CF8EC3CF0143F6E5AA26E5AA26E5AA26EC8FC2E347BB2
39>I<15FC140FEC3F80EC7E0014F8495A495A1307A2495AB3A9495AA249C7FC137E5BEA
03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F6D7EA26D7EB3A96D7EA213036D7E6D7E14
7EEC3F80EC0FFC14001E577AC02B>102 D<127CEAFFC0EA07F0EA01F8EA007C7F7F80A2
6D7EB3A96D7EA26D7E6D7E6D7E147FEC1FF8EC03FCEC1FF8EC7F0014FC495A495A495AA2
495AB3A9495AA291C7FC133E5B485AEA07F0EAFFC0007CC8FC1E577AC02B>I<14C0EB01
E0A2130314C0A213071480130F1400A25B131EA2133E133CA2137C137813F85BA212015B
A212035B12075BA2120F90C7FCA25A121EA2123E123C127C1278A212F85AA27E1278A212
7C123C123E121EA2121F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA213
3E131EA2131F7FA21480130714C01303A214E01301A2EB00C0135678C021>I<126012F0
A27E1278A2127C123C123E121EA2121F7EA27F1207A27F12037F1201A27F1200A27F1378
137C133CA2133E131EA2131F7FA21480130714C01303A214E01301A2130314C0A2130714
80130F1400A25B131EA2133E133CA2137C137813F85BA212015BA212035B12075BA2120F
90C7FCA25A121EA2123E123C127C1278A212F85AA2126013567BC021>I<126012F0B3B3
B3B3AD1260045776C018>I<1A601AF0A219011AE019031AC019071A80190F1A0061191E
193E193C197C197819F861180161180361180761180F96C7FC60181EA2183E183C187C18
7818F860170160170360170760170F013093C8FC01F05D486C151E0003163ED80FFC153C
001D167CD830FE1578006016F8D8C07F5D000015015F6D6C13035F6D6C13075F6D7E160F
6D6C91C9FC5E161E6D6C133E163C6D6C137C16786D6C13F85EEC7F015EEC3F835E158791
381FC78015CFDA0FEFCAFC15FF6E5AA26E5AA25D14015D14005D44577A8348>112
D E /Fq 80 123 df<ED0380A24B7EA24B7EA24B7EA24B7EA2ED67FCA2EDC3FEA2913801
81FFA24AC67F167F020680163F4A80161F4A80160F4A8002706D7E146002E06D7E5C0101
6E7E5C01036E7F91C8FC496F7E1306010E6F7E130C011C6F7E131801386F7E133001706F
7E136001E06F7E5B0001707E5B000370138090CAFC48EF7FC01206000EEF3FE0120C001C
EF1FF0001FB9FC4818F8A24818FCA2BA12FEA23F3D7CBC48>1 D<DA07FC137F913A3FFF
81FFC0913AFC03C7C0E0903B03F0006F81F0903B07C001FF03F8903A0F8003FE0790391F
0007FC5B017EED03F0923903F801E0017C010190C7FC13FCADB812FCA32800FC0001F8C7
FCB3AC486C497E3B7FFFF07FFFF8A3353D7FBC32>11 D<EC07FCEC3FFF9138FC03809039
03F000C0D907C0136090390F8001F04948487E491307137EA2137C01FC6D5AED00C093C7
FCAAED01F8B7FCA33900FC00071501B3AB486C497E3B7FFFF07FFFF0A32C3D7FBC30>I<
121C127FA2EAFF80A7EA7F00AB123EAB121CAB1208C7FCA8121C123E127FEAFF80A3EA7F
00123E121C093D79BC18>33 D<001C131C007E137E007F137F39FF80FF80A26D13C0007F
137FA2001C131C00001300A53901800180A33903000300A200061306A2485B485BA2485B
002013201A1A7DBB2B>I<03061460030F14F0A24B1301031E5CA3033E1303033C5CA303
7C130703785CA303F8130F4B91C7FCA302015C4B131EA30203143E4B133CA3007FB912F0
BA12F8A3C7000FC700F0C7FC4A1301021E5CA4023E1303023C5CA5027C130702785CBA12
F8A36C18F0280001E0001EC8FCA30103143E4A133CA30107147C4A1378A3010F14F891C7
5AA3491301011E5CA3013E1303013C5CA3017C130701785CA301306DC9FC3D4D7BBB48>
I<013E161801FF163C2603C180157C260780C01578260F007015F8000E6DEC03F0001E01
1E4A5A48011F141FDA19E0EB7FC0007C903A0CFF0FE78092381FFF8F0078912600F01FC7
FC6EEB001E00F8163E173C177C5F5F16014C5A5F160700784B5A4A91C8FC007C5D163E00
3C49133C167C6C5D000E495B000FEB60016C6C48485A2603C1805B3900FF0007013E495A
90C790C712F84BEB03FC031EEB0F06033EEB1E034B90383C0180037890383800C003F801
7813604A485B5D020301011430EC07C003805B020F161891381F0003141E143E5C147814
F8495A5C13034A13010107173049488091C7FC4902001460133E013C1578017C033813C0
4992383C01804992381E03000001EE0F0649ED03FC6C48ED00F83D467BC048>37
D<141FEC7F80903801E0C0903803C06049487E130F1400497FA25B133EA3133F5DA25DA2
5D4A5A131F0283CAFC1486148CD90FD849B512C0A214F04A9039001FFC000107ED07E018
806E6EC7FC5F496C140601195DEB31FC01605D497E0001017E5C2603807F5C496C7E4801
1F5C4880001E6D6C485A003E010749C8FC007E14F0913803F80600FE6D6C5A02005B15FE
ED7F30ED3FE06C6E48EB0180150F6C6E6C13036D496C1400003FDA1DF85B6C6CD978FE13
0E280FE001F07F131E3C07F80FC01FE07C6CB5486CB45AC69026FE000313E0D91FE09038
007F803A3E7CBC43>I<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA03
00A21206A25A5AA25A12200A1A79BB18>I<146014E0EB01C0EB0380EB0700130E5BA25B
137813705B12015B1203A2485AA248C7FCA35A121EA2123EA2123CA2127CA5127812F8B2
1278127CA5123CA2123EA2121EA2121F7EA36C7EA26C7EA212017F12001370137813387F
A27F7FEB0380EB01C0EB00E01460135678C021>I<124012E012707E7E7E7EA26C7E7F12
016C7E7F13701378A27FA27FA3131F7FA21480A21307A214C0A5130314E0B214C01307A5
1480A2130FA21400A25B131EA35BA25BA2137013F05B485A12035B48C7FCA2120E5A5A5A
5A124013567BC021>I<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8FCB3A71518
38387BB143>43 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A2
1206A25A5AA25A12200A1A798818>I<B512FCA516057F941D>I<121C123E127FEAFF80A3
EA7F00123E121C0909798818>I<1506150FA2151F151EA2153E153CA2157C1578A215F8
15F0A2140115E0A2140315C0A214071580A2140F1500A25C141EA2143E143CA2147C1478
A214F85CA213015CA213035C13075CA2130F91C7FCA25B131EA2133E133CA2137C1378A2
13F85BA212015BA212035BA212075BA2120F90C8FCA25A121EA2123E123CA2127C1278A2
12F85AA2126020577BC02B>I<EB03FC90381FFF8090387E07E09038F801F048486C7E48
48137C48487F48487FA248C7EA0F80A24815C0A3007EEC07E0A500FE15F0B3007E15E0A4
007F140F6C15C0A36C15806D131F000F1500A26C6C133E6C6C5B6C6C5B6C6C485A90387E
07E090381FFF80D903FCC7FC24397DB72B>I<EB01C013031307131F13FFB5FCA2131F12
00B3B3A8EB7FF0007FB512F8A31D3879B72B>I<EB0FF8EB7FFF48B512C03903E03FE039
070007F8000E6D7E00186D7E481300157F481580127C00FE143F6C15C07FA46CC7FC123E
C8FC1680157F1600A215FEA24A5A5D4A5A4A5A5D4A5A4AC7FC143E143C5C5C495A495A49
5A49C8FC011E14C013381330491301491480485A48C7FC00061403000FB6FC5A5A481500
B7FCA322387CB72B>I<EB07FC90383FFF8090B512E03901F807F03903C001F848C77E00
0E80D80FC07F486C7F6D1480A46C5A6C5A0001C71300C85AA25D4A5A5D4A5A5DEC0FC002
3FC7FCEB1FFCECFF8090380007E0EC01F86E7E157E157FED3F8016C0A2ED1FE0A216F0A3
123F487E487EA216E0A2153F4914C06CC7FC0070EC7F806C15006C14FE390F8001FC3907
F007F80001B512E06C6C1380D907FCC7FC24397DB72B>I<151C153CA2157C15FCA21401
1403A21407140F141D141914311471146114C11301EB038114011307130E130C13181338
1330136013E0EA01C01380EA03005A12065A121C5A123012705AB712FCA3C73801FC00AB
4A7E49B512FCA326397EB82B>I<00061406D80780131E9038F801FC90B55A5D5D5D92C7
FC5C38067FF090C9FCABEB03FCEB1FFF90387C0FC09038E003E039078001F090C77E0006
800004147EC8FC157FED3F80A316C0A4123E127F5A7FA290C71380A248147F00601500A2
6C14FE00385C6C495A6C495A6C6C485A3903E01FC06CB5C7FC6C6C5AEB0FF022397CB72B
>I<EC1FC0ECFFF0010313FC90380FE03E90381F800690383E000349131F49EB3F804848
137F1203485AA24848EB3F00001F141E4990C7FCA2123FA2127F90C9FCA2EB01FE903807
FFC039FF0E03E090381800F849137C497F153F49EB1F80A24914C0ED0FE0A290C7FC16F0
A37EA56C7E16E0A2121FED1FC06C7E16800007EC3F006C6C133E6C6C5B6C6C5B90387E03
F06DB45A010F1380D903FEC7FC24397DB72B>I<12301238123E003FB612F0A316E04815
C01680A20070C7EA030000601406A25D00E05C485CA25DC85A4A5AA24AC7FC1406A25C14
1C141814381478147014F0A2495AA21303A31307A25C130FA3131FA5133FA96D5A6DC8FC
243B7BB92B>I<EB03FC90381FFF804913E09038FC03F03901E000F8D80380133C90C77E
4880120EED0780A2121EA2121FA27F6DEB0F00EA0FF06D131E01FE131C6C6C5B6CEBC070
ECE1E06CEBFBC06C01FFC7FC133F6D7F6D13E0497F017813FC3901E07FFE3903C01FFF48
486C1380380F0003001E010013C048EC7FE0151F48140FED07F04814031501A21500A316
E01278ED01C07EED03806CEC07006C6C130ED807E0133C3903FC01F8C6B512E0013F1380
D907FCC7FC24397DB72B>I<EB03FC90381FFF80017F7F9038FE07F03901F001F848486C
7E4848137C000F804848133F003F80168048C7FC16C0A248140F16E0A516F0A37E151FA2
6C7E001F143FA26C6C136F12076C6C13CF3901F0018F39007C070FEB3FFED907F813E090
C7FCA3ED1FC0A31680D80780133F486C1400487E157E157C15FC49485AD80F805B390C00
03E00007EB0FC02603C03FC7FC3801FFFE6C13F8EB1FC024397DB72B>I<121C123E127F
EAFF80A3EA7F00123E121CC7FCB3121C123E127FEAFF80A3EA7F00123E121C092579A418
>I<121C123E127FEAFF80A3EA7F00123E121CC7FCB3121C127E127F5A1380A2127FA212
1D1201A5EA0300A41206A25AA25A5AA21220093679A418>I<007FB812FEBAFCA3CCFCAE
BAFCA36C17FE38167BA043>61 D<EB3FE03801FFFE3907C03F80390E000FC00018EB07E0
48EB03F04814F8140100FC14FC7E7EA3127E123CC7EA03F8A215F0EC07E0EC0FC0EC1F80
EC3E00143C5C5C5C13015C495AA291C7FC5BA21306AA130490C8FCA8130E131F497E497E
A36D5A6DC7FC130E1E3D7BBC29>63 D<150C151EA3153FA34B7EA34B7EA39138019FE0A2
02037F150FA202077FEC0607A2020C7F1503A202187F1501A24A6C7EA34A6D7EA202E080
4A133FA20101814A131FA249C77F91B6FCA249810106C71207A2496E7EA3496E7EA20138
81013080A20170820160157FA201F082EA03F8D80FFC4A487EB500C0013FEBFFC0A33A3D
7DBC41>65 D<B712F816FF17E0C69039C0001FF06D48EB07FC707E707E82EF7F8018C017
3F18E0A718C0A2EF7F8017FF18004C5A4C5AEE0FF8EE3FE091B61280A2913980001FE0EE
03F8EE01FE707EEF7F80EF3FC018E0171F18F0170F18F8A8EF1FF0A218E0173FEF7FC0EF
FF804C13004C5A496CEB1FFCB812F017C04CC7FC353B7EBA3D>I<DBFFC01360020713F8
023F01FE13E09139FFC01F01903A03FE000783D907F8EB01E3D90FE0EB0077D91F80143F
017FC8121F01FE150F4915071201484815031207491501120F48481500A2123F5B186012
7FA25B180012FFAB127FA26D1660A2123FA27F121F18C06C7E12076DED018012036C6CED
03006C6C5D1706017F5DD91F805CD90FE05CD907F814E0D903FEEB03C0903A00FFC01F80
91263FFFFEC7FC020713F8020013C0333D7BBB3E>I<B712F816FF17C0C69039C0003FF0
6D48EB07FCEE01FEEE007F717E717E717E717EA2717E84170184170084A3F07F80A419C0
AC1980A4F0FF00A34D5AA2604D5AA24D5A4D5A4D5A173F4DC7FCEE01FEEE07FC496CEB3F
F0B85A94C8FC16F83A3B7EBA42>I<B91280A3C69038C000016D48EB003FEF0FC0170717
03A21701A21700A418E018601630A31800A31670A216F0150391B5FCA3EC800315001670
A21630A2180CA3181893C7FCA31838A21830A21870A218F018E017011703170F173F496C
EB01FFB912C0A3363B7EBA3B>I<B812FEA3C69038C000076D481300173F8383A283A283
A418801701A21660A294C7FCA416E0A21501150791B5FCA3EC800715011500A21660A693
C8FCAEEBFFE0B612F0A3313B7EBA38>I<DB7FC01330913807FFF8023F01FE1370913AFF
C01F80F0903A01FE0003C1D907F8EB00E1D90FE014334948141F49C8120F017E150713FE
48481503484815011207491500120F48481670A3485A1830127FA25B95C7FC12FFAB007F
037FB512C0A27F9339003FF800003FEE0FF0A26C7EA36C7E12077F12036C7E6C7E137F6D
6C141F6D7E6D6C1433D907F81473D901FEEB01E1903A00FFE00FC0023FB5EA0070020701
FC13309126007FE090C7FC3A3D7BBB44>I<B6D8C03FB512F0A3C601C0C7383FF0006D48
6E5AB3A591B7FCA30280C7121FB3A7496C4A7EB6D8C03FB512F0A33C3B7EBA41>I<B612
C0A3C6EBC0006D5AB3B3AF497EB612C0A31A3B7EBA1F>I<B612F0A3C601E0C8FCEB7F80
B3AE1706A5170E170CA4171CA3173C177CA2EE01FCEE03F8160F496C137FB8FCA32F3B7E
BA36>76 D<B56C4BB5FC6E5DA2C61900D96FE0ED06FEA3D967F0150CA2D963F81518A3D9
61FC1530A2D960FE1560A3027F15C0A36E6CEB0180A26E6CEB0300A36E6C1306A36E6C5B
A26E6C5BA36E6C5BA26E6C5BA3037F5BA392383F8180A2DB1FC3C7FCA3ED0FE6A3ED07FC
A26F5AA213F0486C6D5AD807FE4C7EB527F000E001B6FCA3483B7DBA4F>I<B56C91B512
F08080D8007F923807FE006EEC01F8D96FF86E5A01671660EB63FC801361EB60FF816E7E
143F816E7E140F6E7E8114036E7E816E7F157F826F7E151F6F7E8215076F7E826F7E81EE
7F8017C0163FEE1FE017F0160FEE07F817FCEE03FE1601EE00FF18E0177F173FA2171F17
0FA2170701F01503486C1501EA07FEB500F014001860A23C3B7EBA41>I<4AB47E021F13
F891387F00FED901F8EB1F80D907F0EB0FE0D90FC0EB03F049486D7E49C87E017E157E49
81000117804848ED1FC04848ED0FE0A2000F17F0491507001F17F8491503003F17FCA300
7F17FE491501A300FF17FFAB007F17FE6D1503A4003F17FC6D1507001F17F8A26C6CED0F
F0A2000717E06D151F000317C06C6CED3F806C6CED7F00017F15FE6D5D6D6C495AD90FE0
EB07F06D6C495AD901FCEB3F80D9007F01FEC7FC91381FFFF802011380383D7BBB43>I<
B712F016FF17C0C69039C0003FF06D48EB07F8707E707E707EEF7F80A218C0173F18E0A7
18C0A2177F188018005F4C5A4C5AEE0FF0EE3FE091B6128004FCC7FC0280C9FCB3A6497E
B612C0A3333B7EBA3B>I<B77E16F816FEC69039C001FF80903A7F80003FE0EE0FF0707E
707E707EA2838284A795C7FC5E5F5F4C5A4C5A4C5AEE3F80DB01FEC8FC91B512F816E091
388003F8ED007E82707E83707E83160783A683A61930A2707EA204011460496C6D7EB600
C06D13C094383F838094380FFF00CAEA01FC3C3C7EBA3F>82 D<D90FF81360EB3FFF90B5
EAC0E03901F807E13907E000F1D80F80133B90C7121F48140F003E14071503481401A212
FC1500A316607EA27E6C15007F13E0EA3FF8EBFF806C13F86CEBFF806C14E06C14F86C80
6C80013F7F01071480D9007F13C0020713E0EC007FED1FF0150F150716F81503124012C0
1501A37EA216F07E15036C15E0A26CEC07C0B4EC0F80D8FB801400D8F1F0133ED8F0FE13
FC39E03FFFF8D8C00F13E001011380253D7BBB30>I<003FB812F8A3D9E001EB800790C7
EB0001007CEE007C0078173CA20070171CA20060170CA500E0170E481706A4C81500B3B1
020313C0010FB612F0A3373B7DBA3E>I<B600C090B512F0A3C601C0C73807FE006D48EC
01F8715A1860B3B3A2013F5E80A2011F4B5AA26D6C4AC7FC01075D6D6C14066D6C5C6D6C
1438027E5C6E6C485A91391FF00FC00207B55A020149C8FC9138001FF03C3C7EBA41>I<
B500FE91381FFFF0A3000301C0020313006C90C912FC6C17786E1570017F1660A26E15E0
013F5E80011F4B5AA26E1403010F93C7FCA26D6C1406A28001035DA26E141C0101151880
6D5DA26F1370027F1460A26E6C5BA281021F495AA2EDF003020F91C8FC15F802071306A2
EDFC0E0203130C15FE02015BA215FF6E5BA216F06F5AA26F5AA36F5AA26FC9FCA315063C
3C7EBA41>I<B5D8FC01B500FC90383FFFE0A300079026800007018001071300000190C7
6C48C7EA01FC49725A6D020116706C1A60836E7F017F618480013F4E5AA2933801BFC06D
6C4DC7FCA29338031FE06D6C1706A29338060FF06D6C5FA24C6C7E6D6C5FA24C6C7E6D6C
5FA24C6C7E6D6C5FA204707F91277F8060005CA204E014806F48EB7F81023F5F03C115C1
DBE180EB3FC3021F94C8FC03E315E303F3C7EA1FE7020F16E619F603FEEC0FFE02075EA2
4B140702035EA24B140302015EA24B140102005EA24B140003605D533C7EBA58>I<EAFF
F8A4EAF000B3B3B3B3A7EAFFF8A40D5777C018>91 D<485B485B00061306A2485B485BA2
485BA2485BA3485BA500CE13CE39FF80FF80A26D13C0007F137FA2393F803F80001F131F
390E000E001A1A73BB2B>I<EAFFF8A4EA0078B3B3B3B3A7EAFFF8A40D577FC018>I<1330
137813FC487EEA03CF38078780380F03C0381C00E048137048133848131C48130C160C76
BA2B>I<EB1FF0EBFFFC3803E03F3907000F80486D7E9038C003E0486C6C7E81A214006C
487F6C5AC8FCA4140FEB03FFEB1FF8EBFF00EA01FCEA07F0EA0FC0485A123F90C7FC5A00
7E150612FEA31401A2007EEB037C127F3A3F80063E0C3A1FC00C3F1C3A0FF0381FF83A03
FFF00FF03A007FC007C027287DA62B>97 D<EA01F812FFA312071201B1EC0FF0EC3FFEEC
F01F9039F9C007C09039FB0003E001FE6D7E496D7E167C49147E163E163FA21780161FA2
17C0A91780A2163F1700A2167E167C6D14FC5E01F6495A01E3495A9039E1800F809026C0
F03FC7FC9038807FFCC7EA0FE02A3D7EBB30>I<EB03FE90381FFFC090383E01F09038F8
00384848133C484813FC3907C001FE120F1380121F48C712FC1578481400A2127EA212FE
A9127EA2127F6C1403A26C7E15066C7E0007140C6C6C13186C6C13306C6C13E090387E03
C090381FFF00EB03FC20287DA626>I<ED07E0EC03FFA3EC001F1507B1EB01FC90380FFF
8790383F03C790387C0067D801F013374848131F4848130F120F491307121F48C7FCA25A
127EA212FEA9127EA2127F7EA27E6D130F120F6C6C131F6C7E6C6CEB77F86C6C9038E7FF
C090383E038790381FFF07D903FCEBE0002A3D7DBB30>I<EB03FCEB1FFF90387E07C090
38F801E03901E000F0000314784848137C48487F121F90C7123F4880A25A007E1580A212
FEA2B7FCA248C9FCA5127EA3127F6CEC0180A26C7E000FEC03007F000714066C6C5B6C6C
5BD80078137090383F01E090380FFF80D901FEC7FC21287EA626>I<147F903801FFC090
3807C0E090380F81F090381F03F8EB3E07137CA29038FC03F09038F801E0000190C7FCAE
B512FCA3D801F8C7FCB3AC487E387FFFF8A31D3D7FBC1A>I<903907F001F890393FFE0F
FC90397C1F1E3E9038F007F03A01E003E01C2603C00113080007ECF000000F80EB800000
1F80A7000F5CEBC00100075C00035C6C6C485A6D485A26037C1FC7FC38073FFE380607F0
90C9FC120EA3120FA2EA07C090B512C06C14FC6C14FF6C1580000315C03A0F80003FE048
C7EA07F0003EEC01F8003C1400127C0078157C12F8A5007C15F8A26CEC01F06CEC03E06C
6CEB07C0D803E0EB1F00D801FC13FE39003FFFF00107138027397EA52B>I<EA01F812FF
A312071201B1EC07F8EC1FFEEC781F9138E00F809039F98007C0D9FB007F150301FE805B
A35BB3A5486C497EB500F1B512E0A32B3C7EBB30>I<EA0380487E487E487EA36C5A6C5A
6C5AC8FCABEA03F012FFA3120F1203B3AB487EB512C0A3123A7EB917>I<14E0EB01F0EB
03F8EB07FCA3EB03F8EB01F0EB00E01400ABEB01FC137FA3130313011300B3B3A3123C00
7E13F8B4FC130114F0A2387E03E0003C13C0381C0F80380FFE00EA03F8164C84B91A>I<
EA03F012FFA3120F1203B2913801FFFCA39138007FC0ED7E00157C157015604A5A4A5A02
06C7FC5C5C5C147814FCEBF1FEEBF73EEBFE3F9038F81F80EBF00F816E7E1403816E7E14
0081157E81A2ED1F8016C0486CEB3FF0B500C0B5FCA3283C7DBB2D>I<EA03F012FFA312
0F1203B3B3AF487EB512C0A3123C7EBB17>I<2701F803F8EB03F800FFD91FFFEB1FFF91
3B3C0F803C0F80913BE007C0E007C03D07F9C003E1C003E02601FB00D9F3007F03011401
01FE02FE80A2495CA2495CB3A5486C496C497EB500F0B500F0B512F0A344267EA549>I<
3901F807F800FFEB1FFEEC781F9138E00F803A07F98007C02601FB007F150301FE805BA3
5BB3A5486C497EB500F1B512E0A32B267EA530>I<EB01FE90380FFFC090383F03F09038
F8007C48487F48487F4848EB0F804848EB07C0A248C7EA03E04815F0A3007EEC01F8A300
FE15FCA9007E15F8A2007F14036C15F0A26C15E06D1307000F15C06C6CEB0F806C6CEB1F
006C6C133E6C6C5B90383F03F090380FFFC0D901FEC7FC26287EA62B>I<3901F80FF000
FFEB3FFEECF01F9039F9C007C03A03FB0003E0D801FE6D7E49806F7E49147EA2167F8217
80A2161F17C0A91780163FA217005E167E5E7F4B5A6D495A01FB495A9039F9800F809026
F8F03FC7FCEC7FFCEC0FE091C9FCAC487EB512F0A32A377EA530>I<D901FC13C090380F
FF0190383F03819038FC00C3D801F013634848133712074848131F485AA2003F140F90C7
FC5AA2127E12FEA9127E127FA27EA26C7E151F6C7E0007143F6C6C136F6C6C13EF3900F8
01CF90387E070FEB1FFEEB03F890C7FCACED1FE00203B5FCA328377DA52D>I<3903F00F
8000FFEB3FE0EC70F0ECC1F83807F1833801F303A29038F601F0EC004001FC1300A45BB3
A3487EB512F8A31D267EA522>I<90387F81803803FFE3380F807F381E001F00381307A2
481303A200F01301A37EA200FE90C7FCEA7F8013FC383FFFC06C13F06C13FC00037F6C7F
D8001F13801300EC1FC00040130F00C0EB07E014036C1301A47E15C06C13036C1480EC07
0000F7130E38E3C03C38C0FFF8EB3FC01B287DA622>I<1330A61370A413F0A21201A212
031207001FB5FCB6FCA2D803F0C7FCB2EC0180A912019038F80300A21200EB7C066D5AEB
1FF8EB03F019367EB421>I<D801F8EB03F000FFEB01FFA30007EB000F00011403B3A515
07A30000140FA26D131B017C14FC6D903873FFE090381F81E390380FFF83903A01FE03F0
002B277EA530>I<B538801FFFA33A07F80007F86C48EB03E0ED01C06C7E16806D130300
001500A2017E1306A2137F6D5BA2EC801C011F1318A26D6C5AA2ECE07001071360A26D6C
5AA214F901015BA26DB4C7FCA3147EA2143CA3141828267EA42D>I<B53B87FFF80FFF80
A33D0FF8003FC003FC006C486DC75A00035F701360A26C6C5E8215376C6C4B5AED77E06D
01631303017E93C7FCEDE3F0017F01C15B6D1506020113F8DA8180130E011F150C028313
FC9139C3007C1C010F151802C7137E02E6EB3E380107EC3F3002EC131FD903FC5C17E04A
130F01015DA24A130701005DA24A1303026091C8FC39267EA43E>I<B539C03FFF80A300
039039001FF000C648EB0FC093C7FC017E130E6D130C6D6C5AECC038010F5B6D6C5A6D6C
5AECF980EB01FB6DB4C8FC147E147F80814A7EEC6FE014C7903801C3F090380381F8EC01
FCEB0600010E137E497F49800130131F01706D7ED801F880000F4A7ED8FFFE90387FFFC0
A32A257FA42D>I<B538801FFFA33A07F80007F86C48EB03E0ED01C06C6C1480A26D1303
00001500A2017E1306A2017F130E6D130CA26D6C5AA2ECC038010F1330A26D6C5AA2ECF0
E001035B14F8903801F980A214FF6D90C7FCA2147EA2143CA31418A25CA35CA25C1210EA
7C0100FE5BA249C8FC5BEAFC0EEA701C6C5AEA1FF0EA07C028377EA42D>I<003FB512FE
A290388000FC393E0001F8003C1303003814F00030EB07E00070130FEC1FC000601480EC
3F005C147E5CEA0001495A5C495A130F5C495A013F1303EB7F00137E5B1201491307485A
12074848130649130E485A003F141E90C7127E007EEB01FEB6FCA220257EA426>I
E /Fr 43 123 df<15F01401EC03E0EC07C0EC1F80143FEC7F0014FE495A5C1303495A49
5AA2495A133F5C137F49C7FCA2485AA212035B1207A25B120FA3485AA3123FA25BA2127F
A612FF5BAF7F127FA6123FA27FA2121FA36C7EA312077FA212037F1201A26C7EA26D7E13
3F80131F6D7EA26D7E6D7E1301806D7E147FEC3F80141FEC07C0EC03F0140114001C6775
CC2E>40 D<127012F8127C7E6C7E7F6C7E6C7E6C7E12017F6C7E137FA26D7E80131F806D
7EA26D7EA280130380A2130180A36D1380A315C0A2147FA215E0A615F0143FAF147F15E0
A615C0A214FFA21580A3491300A35C1303A25C13075CA2495AA2495A5C133F5C49C7FCA2
13FE485A5B1203485A485A485A5B003EC8FC5A5A12701C677ACC2E>I<EA07E0EA0FF0EA
3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E01010788F21>46
D<EC1FF849B57E010714E0011F14F890393FF81FFC9039FFE007FF48D9800113804890C7
13C0A24848EC7FE0A24848EC3FF0A2001F16F8A2003F16FC49141FA2007F16FEA600FF16
FFB3A3007F16FEA6003F16FC6D143FA2001F16F8A3000F16F06D147F000716E06C6CECFF
C06E5A6C6D4813806C6D48130090397FF81FFE011FB512F8010714E0010114809026001F
F8C7FC30457BC33B>48 D<ECFFE0010F13FE013FEBFFC090B612F0000315FC2607FE017F
3A0FE0007FFF4848011F138048486D13C001E06D13E0EA7FF86D6D13F012FF6D6D13F8A3
6F13FCA26C5AA26C5A6C5A6C5AC85A17F8A217F05D17E0A24B13C017805D4B13005E4B5A
4B5A16E04B5A4A5B4A90C7FCEC07FC4A5A4A5AEC3FC04A48137C4AC7FC5C495AD903F014
F8495A495A495A49C71201017C140390B7FC4816F05A5A5A5A5A5AA2B812E0A42E447AC3
3B>50 D<EA07E0EA0FF0EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0C7FCAE
EA07E0EA0FF0EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0102E78AD21>58
D<EE03E04C7EA24C7EA34C7EA24C7EA24C7EA393B57EA24B80A34B8016EF03078016CF16
C7030F801683031F801601033F80153E82037E80037C7F03FC815D830201824B7F020382
5D830207824B7F020F824B7F021F8292C7FC834AB77EA24A82A302FCC86C7F4A81010184
5C840103844A810107844A81010F845C84011F8491C97ED97FC083B66C0103B71280A551
487CC75A>65 D<B912E018FEF0FFC019F085D8001F902680000113FE716C7E727F727F84
727F86A28486A862606260624E5B4E90C7FC4E5A4D485A050713F092B712C04EC8FCF0FF
C019F80380C713FE95381FFF80727F060313F08684727F86A2737EA31B80A285A361A31B
00A296B5FC62604E5B4E5B4E5B063F5B95B55ABB5A4FC7FC19F819C006FCC8FC49477CC6
54>I<DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF81023FD9
F80013C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F4949153F4990C9
121F4948160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA25A91CBFC
1A00A2B5FCAD7EA36E173E7EA37E806C197CA26C7F1AF86C7F19016C6D17F06C6DEE03E0
6D6C16076D6CEE0FC06D6DED1F806D6DED3F006D01F015FE010101FC4A5A6DD9FF80EB0F
F8023F01F8EB7FF0020F90B612C0020393C7FCDA007F14FC030F14E09226003FFEC8FC47
4979C756>I<B912C018FEF0FFC019F019FCD8001F902680000713FFDD007F7F060F13E0
727F06017F727F737E737E857313801BC0851BE0851BF0A21BF885A21BFCA51BFE85AC61
1BFCA41BF8A34F13F0A34F13E0A24F13C01B80614F130062F1FFFC4E5B4E5B060F5B067F
5B0507B5C7FCBA5A19F819C04EC8FC18C04F477CC65B>I<BA12FEA485D8001F9038C000
01EF001F180784180085A2851A80191FA3190FA2173EA2F107C0A4057E90C7FCA317FE16
01160F92B5FCA5EDC00F16011600177EA3053E147CA31AF8A394C8FC19011AF0A31903A2
19071AE0190F191F193F197F19FF060313C0180F95B5FCBBFCA21A80A346467CC54E>I<
DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF81023FD9F80013
C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F4949153F4990C9121F49
48160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA25A91CBFC97C7FC
A2B5FCAC057FB612FE7EA280A26C93C7EBFE00A37E807EA26C7FA26C7F807E6C7F6D7E6D
7E6D7F6D01E05C6D6D5C010101FC5C6DD9FF80131F023F01FCEBFFC7020F90B612830203
EDFE00DA007F02F8133E030F02E0130E9226003FFEC9FC4F4979C75D>71
D<B712F8A5D8001FEBC000B3B3B3A7B712F8A525477CC62D>73 D<B8FCA5D8001F01C0C9
FCB3B3A219F8A4F001F0A51803A31807A2F00FE0181FA2183F187F18FF1703170F177FBA
12C0A53D477CC647>76 D<B600E00503B6FC6F5FA26F5FA2D8001FF3F8006F171EA2DABF
FE5FA2DA9FFF5FA2028F6D5EA202876D4B5AA302836D4B5AA202816D4B5AA202806D4B5A
A26F6C151EA36F6C5DA26F6C5DA26F6D5CA26F6D495AA26F6D495AA36F6D495AA26F6D49
C7FCA2706C131EA2706C5BA2706C5BA3706D5AA270EBC1E0A270EBE3C0A270EBF780A370
01FFC8FCA2715AA2715AA2715AA2D97FE06E5AB600F00407B7FCA2715AA2715A68477CC6
71>I<B600C092B612F081818181D8001F9439007FE0006FEE1F8081828202BF7F149F82
028F7F02877F02837F02817F1480836F7F6F7F6F7F6F7F81836F7F6F7F6F80707F828470
7F707F707F707F707FA27014807113C07113E07113F07113F8A27113FC7113FE7113FF71
149F7213DFA27213FF84848484A28484858585A285858585D97FE082B612F01A7F1A3F1A
1F74C7FC54477CC65D>I<B97E18F818FF19C019F0D8001F902680000F13FC05017F716C
7E7213807213C0841AE0A27213F0A31AF8A81AF0A34E13E0A21AC04E1380604E13009438
01FFFC050F5B92B75A19C04EC7FC18F003C0CAFCB3A9B712F8A545477CC651>80
D<DA7FF013070107B55B011FECC01F017FECF03F90B6EAFC7F00039039C00FFEFF4848C7
B5FC49143F484880484814074980003F815B007F8183A200FF82A37F837F7F7F01FF92C7
FC6C13C014FEECFFE06C14FF16F06C15FC16FF6C16C06C82836C82C6826D81131F6D8113
01D9001F15801401DA000F14C01500161F7013E0828200788100F881A2177FA37E18C0A2
7E18806C16FF7F6D16006D4A5A01F8140301FE4A5A6D6C495A02FCEB7FF0D8FE3FB65AD8
FC0F1580D8F80392C7FC48C66C13F848010313C0334979C742>83
D<003FBBFCA5DA00039038F8003FD87FF80507138001E01701498349187F90C7173FA200
7E191FA21A0F127CA400FC1AC0481907A5C894C7FCB3B3A40103B812F8A54A467CC553>
I<903807FFFC017FEBFFC048B612F84815FE3A07FE001FFF6D010313C0486D6C7F6F7F16
7F83A26C90C76C7EA26C5AEA00F890C8FCA40207B5FC91B6FC1307013FEBE03F9038FFFE
00000313F04813C04890C7FC485A485A485AA2485AA5167F6C6C14FFED01EF6C6C130301
FF903807CFFF000F9026C03F8F13F86C90B5000713FC0001ECFC036C6CEBF00101039039
80007FF8362E7DAD3A>97 D<EB7FC0B5FCA512037EB3ED0FFC92387FFFC002C3B512F002
CF14FC9139DFF00FFF9126FF80037F4A486C7F02F86D7F4A6E7E4A6E7E84171F84A2170F
84A31980AA1900A34D5AA260A24D5A806E4A5A6E4A5A6E495B02BF01075B91271FE01FFE
C7FC496CB55AD9FC0314F049C6148049D91FF8C8FC39487CC742>I<91381FFFC091B512
F8010714FE011FECFF8090267FFC0013C09038FFE00148494813E0481380481300485AA2
48486D13C0123F6F1380EE3E00484891C7FCA312FFAA127FA27F123FA217F86C7E120F6D
EC01F06C6D13036C6DEB07E06C6DEB0FC06C6DEB1F80D97FFEEBFF00011FB55A010714F8
010014E0DA1FFEC7FC2D2E7CAD35>I<EF7FC093B5FCA5160382B3EC0FFC91B512810107
14E1011F14F990263FFC03B5FC9039FFF0007F4801C0131F48497F4890C77E484880A248
5AA2123FA2485AA312FFAA127FA3123F7FA2121F7F000F5D6C6C5C6C6D5B6C6D5B6C6D90
B57E90277FF807FBEBFF80011FB512F3010714C3010114039038001FF839487CC742>I<
EC1FFE49B512E0010714F8011F14FE90397FFC07FF9026FFE0011380489039C0007FC048
49EB3FE04890C713F04848141F001FED0FF85B003F16FC1607127F5B17FEA212FFA290B7
FCA317FC01F8C9FCA4127FA27F123FA2171C6C6C153E120F6D157E6C16FC6C6DEB01F86C
6DEB03F026007FF0EB1FE0D93FFEEBFFC06DB612800107ECFE00010014F8020F13802F2E
7DAD36>I<EDFFC0020F13F8027F7F49B6FC4913814948481380EB0FF849484813C0133F
14E0137F4A6C138013FF6F13006F5A163893C7FCAAB612FEA5C601E0C8FCB3B2007FEBFF
F0A52A487DC724>I<EF1F80DA7FF8EB7FE00103B53801FFF0011F14E7499138FFE7F890
26FFE01F130F4890388007FE4890380003FF48486DEB87F0A248486DEBC1C0EFC000A200
1F82A6000F5EA36C6C495BA26C6C4990C7FC6C6D485A6C9038E01FFC91B512F0485DD803
C391C8FC9038C07FF8000790CAFCA47F7F7F90B612F016FF6C16E017F86C16FE836C1780
7F0003B812C0120FD81FF8C7001F13E0D83FE0140148489138007FF0173F4848151FA56C
6CED3FE0A26C6CED7FC06D15FFD81FFC020313806CB4020F1300000301F0EBFFFCC690B6
12F0013F15C001074AC7FCD9003F13C035447DAE3B>I<EB7FC0B5FCA512037EB3923801
FFC0030F13F8033F13FE92B6FC9126C1FC077F9126C3E0037F9138C7C001DACF008002DE
7F14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B487CC742>I<13FC487E487E481380
4813C04813E0A66C13C06C13806C13006C5A6C5A90C7FCABEB7FC0B5FCA512037EB3B0B6
FCA518497CC820>I<EB7FC0B5FCA512037EB393387FFFF8A5933807FE0017F04C5AEE3F
C04C5A04FEC7FC4B5AED07F84B5AED1FC04B5A03FFC8FCECC1FEECC3FF02CF7F02DF7F91
B5FC828202FC7F4A6C7EECE03F4A6C7E826F7F6F7F816F7F836F7F707E163F707E707E18
8018C0B6D8807F13FFA538487CC73F>107 D<EB7FC0B5FCA512037EB3B3B3A6B61280A5
19487CC720>I<90287FC001FFC0ECFFE0B5010F01F8010713FC033F01FE011F13FF92B6
017F809126C1FC07902680FE037F9126C3E0039026C1F0017F00039026C7C0019038C3E0
006CD9CF00DAE7808002DE6D01EFC7127F02DC15EE02FC03FE814A5D4A5DA34A5DB3A8B6
D8C07F9026FFE03FB512F0A55C2E7CAD63>I<903A7FC001FFC0B5010F13F8033F13FE92
B6FC9126C1FC077F9126C3E0037F00039038C7C0016CD9CF008002DE7F14DC02FC815C5C
A35CB3A8B6D8C07FEBFFE0A53B2E7CAD42>I<EC0FFF91B512F0010714FE011F6E7E9026
3FFC037F903AFFE0007FF0480180EB1FF84890C76C7E48486E7E000F824980001F178000
3F17C04980A2007F17E0A300FF17F0AA007F17E0A46C6C4A13C0A2001F17806D5C000F17
006C6C4A5A6C6D495A6C6D495A6C6D495A903A7FFC03FFE0011FB6128001074AC7FC0100
14F0020F90C8FC342E7DAD3B>I<90397FC00FFCB590387FFFC002C3B512F002CF14FC91
39DFF01FFF9126FF80077F000349486C7F6C01F801007F4A814A6E7E717EA284171FA284
A2831980AA19005FA260A24D5AA24D5A806E4A5A6E495B6E495B6E010F5B9226E03FFEC7
FC02EFB55A02E314F002E01480DB1FF8C8FC92CAFCAFB612C0A539427CAD42>I<9039FF
803F80B5EBFFF0028313FC02877F91388FC3FF15070003D99E0F13806C13BC14B814F814
F06F1300A24A6C5AED00F893C7FCA25CB3A6B612E0A5292E7CAD31>114
D<D90FFF13E0017F13E348B6FC1207380FF801391FC0003F4848130F90C712075A15035A
A27F7F01F090C7FC13FEEBFFF86CEBFFC015F06C14FC6C14FF6C15806C15C06C15E0C615
F0133F010314F8EB001F020013FC151F0078140F00F8140715037EA26C15F8A27E6DEB07
F06D130F01F0EB1FE001FCEBFFC090B61280D8FC7FEBFE00D8F81F13F8D8E0031380262E
7CAD2F>I<EB01F0A61303A31307A3130FA2131F133FA2137FEA01FF5A000F90B512E0B7
FCA4C601F0C7FCB3A516F8A9017FEB01F014F8013FEB03E014FC90391FFE0FC06DB51280
0103140001005BEC1FF025427EC12E>I<D97FE0EC3FF0B5EC7FFFA5000315016C81B3A8
5EA35E6C5DEE0F7F017F141F6E013E7FD93FFC01FCEBFFE06DB512F8010714E001011480
9039003FFE003B2E7CAD42>I<B649B5FCA5000301E09038001FC06C6DEC0F80171F6C17
006E5C017F153E6E147E013F157C6E14FC011F5D6E13016D5DED80036D5D15C016076D5D
EDE00F6D5DEDF01F6D92C7FC6F5A027F133EEDFC7E023F137CEDFEFC021F5B15FFA26E5B
A26E5BA26E5BA26E5BA26E90C8FCA2157E153C382E7DAD3F>I<B60007B539E003FFFEA5
00039027C0001FFCC7EA3FC06E010FED1F806C1A00836E01075D6C4B6C143E6E177E017F
187C4C7F6E17FC013F4A6D5B6E013E1401011F04E05B167E6ED97C7F13036D02FC01F05B
922680F83F13076D04F85B15819226C1F01F130F6D01C302FC5B9226E3E00F131F6D04FE
90C7FC15E79226F7C0075B6D01FFECFF3E4C6C137E6E5EA24C7E6E5E4B7F021F5EA24B14
7F020F5E4B143F02075EA26E486E5A6E486EC8FC4F2E7DAD56>I<007FB5D8800FB5FCA5
28007FF8000190C7FC6E14FC6D6C495A6D6C495A6D5D6D6D485A6F485A6DEBE03F6D6D48
C8FC6DEBF8FE91387FF9FC6EB45A5E6E5B6E5B80806E7F82824A7F825C91380FEFFFDA1F
CF7FDA3F877FDA7F037FECFE0149486C7F4A6D7E49488049486D7E010F6E7E49487F4948
6D7F01FF6E7FB500F8013FEBFFC0A53A2E7EAD3F>I<007FB56C90B51280A5000101F0C7
380FE0006C6D6E5A170F017F5E6E141F013F93C7FC6E5C011F153E6E147E6D157C6F13FC
6D5DEDC0016D5D15E016036D5DEDF0076D5DEDF80F027F5CEDFC1F023F91C8FC6F5A021F
133EEDFF7E6E137C16FCA26E5BA26E5BA26E5BA26E5BA26F5AA26FC9FCA3153E157E157C
15FCD81F805B383FC001D87FE05B38FFF0035D14074A5A4A5A143F6C4848CAFCEB43FE38
3FFFF86C5B000713C0D801FECBFC39427EAD3F>I<001FB712E017F0A39026FE000713E0
01F04913C0491580495B49491300003F4A5A90C75B15FF4A5B003E495B5E5C4A5B4A5BC7
91C7FC5C4A5A4A5A495BA2495B499038E001F04913C015805B49EB0003494814E05C13FF
485B484913075C48150F485B4849131F91C7123F4815FF4848010713C0B8FCA37E2C2E7D
AD35>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 126 1
126 1 bop 25 160 a Fm(Tw)m(o)33 b(Roles)i(for)f(Ba)m(y)m(esian)g(Metho)
s(ds)1550 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1550 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474
a 64 x Fq(Pro)n(vides)29 b(practical)i(learning)g(algorithms:)40
683 y Fp(\017)21 b Fq(Naiv)n(e)29 b(Ba)n(y)n(es)g(learning)40
829 y Fp(\017)21 b Fq(Ba)n(y)n(esian)29 b(b)r(elief)j(net)n(w)n(ork)d
(learning)40 974 y Fp(\017)21 b Fq(Com)n(bine)28 b(prior)h(kno)n
(wledge)h(\(prior)f(probabiliti)q(es\))104 1078 y(with)h(observ)n(ed)f
(data)40 1223 y Fp(\017)21 b Fq(Requires)30 b(prior)f(probabiliti)q(es)
0 1418 y(Pro)n(vides)g(useful)h(conceptual)g(framew)n(ork)40
1564 y Fp(\017)21 b Fq(Pro)n(vides)29 b(\\gold)g(standard")g(for)g(ev)
-5 b(aluating)31 b(other)104 1667 y(learning)f(algorithms)40
1813 y Fp(\017)21 b Fq(Additional)31 b(insigh)n(t)f(in)n(to)g(Occam's)e
(razor)0 2748 y Fo(126)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q
(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 127 2
127 2 bop 25 160 a Fm(Ba)m(y)m(es)34 b(Theorem)756 160
y
0.8666 0.03137 0.02352 setrgbcolor
 756 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 538 651 a
Fl(P)12 b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))25 b(=)939
593 y Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))p
Fl(P)g Fq(\()p Fl(h)p Fq(\))p 939 630 466 2 v 1068 710
a Fl(P)g Fq(\()p Fl(D)r Fq(\))40 854 y Fp(\017)21 b Fl(P)12
b Fq(\()p Fl(h)p Fq(\))29 b(=)g(prior)g(probabilit)n(y)i(of)e(h)n(yp)r
(othesis)h Fl(h)40 1000 y Fp(\017)21 b Fl(P)12 b Fq(\()p
Fl(D)r Fq(\))30 b(=)f(prior)g(probabilit)n(y)i(of)e(training)i(data)e
Fl(D)40 1145 y Fp(\017)21 b Fl(P)12 b Fq(\()p Fl(h)p
Fp(j)p Fl(D)r Fq(\))30 b(=)f(probabilit)n(y)i(of)e Fl(h)f
Fq(giv)n(en)i Fl(D)40 1290 y Fp(\017)21 b Fl(P)12 b Fq(\()p
Fl(D)r Fp(j)p Fl(h)p Fq(\))30 b(=)f(probabilit)n(y)i(of)e
Fl(D)i Fq(giv)n(en)f Fl(h)0 2748 y Fo(127)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 128 3
128 3 bop 25 160 a Fm(Cho)s(osing)34 b(Hyp)s(otheses)1025
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1025 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 538 651
a Fl(P)12 b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))25 b(=)939
593 y Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))p
Fl(P)g Fq(\()p Fl(h)p Fq(\))p 939 630 466 2 v 1068 710
a Fl(P)g Fq(\()p Fl(D)r Fq(\))0 845 y(Generally)31 b(w)n(an)n(t)d(the)h
(most)f(probable)h(h)n(yp)r(othesis)i(giv)n(en)0 949
y(the)e(training)i(data)0 1053 y Fk(Maximum)h(a)f(p)l(osteriori)e
Fq(h)n(yp)r(othesis)i Fl(h)1340 1066 y Fj(M)7 b(AP)1497
1053 y Fq(:)432 1207 y Fl(h)482 1219 y Fj(M)g(AP)681
1207 y Fq(=)24 b(arg)15 b(max)923 1255 y Fj(h)p Fi(2)p
Fj(H)1082 1207 y Fl(P)d Fq(\()p Fl(h)p Fp(j)p Fl(D)r
Fq(\))681 1401 y(=)24 b(arg)15 b(max)923 1449 y Fj(h)p
Fi(2)p Fj(H)1087 1343 y Fl(P)d Fq(\()p Fl(D)r Fp(j)p
Fl(h)p Fq(\))p Fl(P)g Fq(\()p Fl(h)p Fq(\))p 1087 1380
V 1215 1460 a Fl(P)g Fq(\()p Fl(D)r Fq(\))681 1563 y(=)24
b(arg)15 b(max)923 1611 y Fj(h)p Fi(2)p Fj(H)1082 1563
y Fl(P)d Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))p Fl(P)g
Fq(\()p Fl(h)p Fq(\))0 1786 y(If)29 b(assume)f Fl(P)12
b Fq(\()p Fl(h)534 1799 y Fj(i)557 1786 y Fq(\))24 b(=)g
Fl(P)12 b Fq(\()p Fl(h)855 1799 y Fj(j)885 1786 y Fq(\))29
b(then)h(can)e(further)h(simplify)-7 b(,)0 1890 y(and)28
b(c)n(ho)r(ose)i(the)f Fk(Maximum)j(likeliho)l(o)l(d)c
Fq(\(ML\))0 1993 y(h)n(yp)r(othesis)531 2164 y Fl(h)581
2177 y Fj(M)7 b(L)711 2164 y Fq(=)24 b(arg)16 b(max)944
2212 y Fj(h)978 2224 y Fh(i)997 2212 y Fi(2)p Fj(H)1112
2164 y Fl(P)c Fq(\()p Fl(D)r Fp(j)p Fl(h)1359 2177 y
Fj(i)1383 2164 y Fq(\))0 2748 y Fo(128)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 129 4
129 4 bop 25 160 a Fm(Ba)m(y)m(es)34 b(Theorem)756 160
y
0.8666 0.03137 0.02352 setrgbcolor
 756 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fq(Do)r(es)29
b(patien)n(t)h(ha)n(v)n(e)f(cancer)g(or)f(not?)104 683
y(A)g(patien)n(t)i(tak)n(es)g(a)e(lab)i(test)g(and)e(the)h(result)104
787 y(comes)f(bac)n(k)h(p)r(ositiv)n(e.)41 b(The)29 b(test)h(returns)e
(a)104 891 y(correct)h(p)r(ositiv)n(e)j(result)e(in)f(only)h(98\045)f
(of)g(the)104 995 y(cases)g(in)g(whic)n(h)h(the)f(disease)h(is)g
(actually)h(presen)n(t,)104 1099 y(and)d(a)h(correct)g(negativ)n(e)i
(result)f(in)f(only)h(97\045)f(of)104 1202 y(the)g(cases)g(in)h(whic)n
(h)f(the)g(disease)h(is)g(not)f(presen)n(t.)104 1306
y(F)-7 b(urthermore,)27 b Fl(:)p Fq(008)i(of)g(the)g(en)n(tire)h(p)r
(opulation)104 1410 y(ha)n(v)n(e)e(this)i(cancer.)134
1709 y Fl(P)12 b Fq(\()p Fl(cancer)r Fq(\))26 b(=)403
b Fl(P)12 b Fq(\()p Fp(:)p Fl(cancer)r Fq(\))26 b(=)89
1825 y Fl(P)12 b Fq(\(+)p Fp(j)p Fl(cancer)r Fq(\))26
b(=)357 b Fl(P)12 b Fq(\()p Fp(\000j)p Fl(cancer)r Fq(\))26
b(=)60 1941 y Fl(P)12 b Fq(\(+)p Fp(j:)p Fl(cancer)r
Fq(\))26 b(=)329 b Fl(P)12 b Fq(\()p Fp(\000j:)p Fl(cancer)r
Fq(\))26 b(=)0 2748 y Fo(129)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 130 5
130 5 bop 25 170 a Fm(Basic)34 b(F)-9 b(orm)m(ulas)36
b(for)f(Probabilities)1509 170 y
0.8666 0.03137 0.02352 setrgbcolor
 1509 170 a 0 321 1947
2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 40 597 a Fp(\017)21 b Fk(Pr)l(o)l(duct)30
b(R)n(ule)p Fq(:)37 b(probabilit)n(y)32 b Fl(P)12 b Fq(\()p
Fl(A)19 b Fp(^)h Fl(B)t Fq(\))30 b(of)f(a)104 701 y(conjunction)h(of)f
(t)n(w)n(o)g(ev)n(en)n(ts)g(A)f(and)h(B:)235 854 y Fl(P)12
b Fq(\()p Fl(A)19 b Fp(^)h Fl(B)t Fq(\))25 b(=)f Fl(P)12
b Fq(\()p Fl(A)p Fp(j)p Fl(B)t Fq(\))p Fl(P)g Fq(\()p
Fl(B)t Fq(\))27 b(=)d Fl(P)12 b Fq(\()p Fl(B)t Fp(j)p
Fl(A)p Fq(\))p Fl(P)g Fq(\()p Fl(A)p Fq(\))40 1029 y
Fp(\017)21 b Fk(Sum)32 b(R)n(ule)p Fq(:)37 b(probabilit)n(y)31
b(of)f(a)e(disjunction)j(of)e(t)n(w)n(o)104 1132 y(ev)n(en)n(ts)g(A)f
(and)h(B:)297 1286 y Fl(P)12 b Fq(\()p Fl(A)20 b Fp(_)f
Fl(B)t Fq(\))25 b(=)f Fl(P)12 b Fq(\()p Fl(A)p Fq(\))20
b(+)f Fl(P)12 b Fq(\()p Fl(B)t Fq(\))21 b Fp(\000)e Fl(P)12
b Fq(\()p Fl(A)20 b Fp(^)f Fl(B)t Fq(\))40 1460 y Fp(\017)i
Fk(The)l(or)l(em)29 b(of)j(total)e(pr)l(ob)l(ability)p
Fq(:)37 b(if)30 b(ev)n(en)n(ts)f Fl(A)1612 1473 y Fg(1)1643
1460 y Fl(;)15 b(:)f(:)g(:)g(;)h(A)1900 1473 y Fj(n)104
1564 y Fq(are)29 b(m)n(utually)g(exclusiv)n(e)j(with)1169
1522 y Ff(P)1213 1533 y Fj(n)1213 1585 y(i)p Fg(=1)1326
1564 y Fl(P)12 b Fq(\()p Fl(A)1491 1577 y Fj(i)1514 1564
y Fq(\))24 b(=)g(1,)29 b(then)542 1733 y Fl(P)12 b Fq(\()p
Fl(B)t Fq(\))26 b(=)891 1670 y Fj(n)879 1682 y Ff(X)861
1791 y Fj(i)p Fg(=1)972 1733 y Fl(P)12 b Fq(\()p Fl(B)t
Fp(j)p Fl(A)1230 1745 y Fj(i)1254 1733 y Fq(\))p Fl(P)g
Fq(\()p Fl(A)1452 1745 y Fj(i)1475 1733 y Fq(\))0 2748
y Fo(130)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 131 6
131 6 bop 25 160 a Fm(Brute)35 b(F)-9 b(orce)36 b(MAP)e(Hyp)s(othesis)h
(Learner)1783 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1783 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor

0 474 a 16 592 a Fq(1.)21 b(F)-7 b(or)28 b(eac)n(h)h(h)n(yp)r(othesis)h
Fl(h)f Fq(in)g Fl(H)7 b Fq(,)28 b(calculate)k(the)104
696 y(p)r(osterior)e(probabilit)n(y)590 889 y Fl(P)12
b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))25 b(=)991 831 y
Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))p Fl(P)g
Fq(\()p Fl(h)p Fq(\))p 991 869 466 2 v 1119 949 a Fl(P)g
Fq(\()p Fl(D)r Fq(\))16 1105 y(2.)21 b(Output)29 b(the)g(h)n(yp)r
(othesis)h Fl(h)1032 1117 y Fj(M)7 b(AP)1219 1105 y Fq(with)30
b(the)f(highest)104 1208 y(p)r(osterior)h(probabilit)n(y)576
1362 y Fl(h)626 1375 y Fj(M)7 b(AP)808 1362 y Fq(=)24
b(argmax)974 1427 y Fj(h)p Fi(2)p Fj(H)1193 1362 y Fl(P)12
b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))0 2748 y Fo(131)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 132 7
132 7 bop 25 160 a Fm(Relation)35 b(to)g(Concept)f(Learning)1405
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1405 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(Consider)29 b(our)g(usual)g(concept)h(learning)g(task)40
696 y Fp(\017)21 b Fq(instance)30 b(space)f Fl(X)7 b
Fq(,)29 b(h)n(yp)r(othesis)h(space)f Fl(H)7 b Fq(,)28
b(training)104 800 y(examples)h Fl(D)40 945 y Fp(\017)21
b Fq(consider)29 b(the)h Fe(FindS)e Fq(learning)i(algorithm)g
(\(outputs)104 1049 y(most)e(sp)r(eci\014c)i(h)n(yp)r(othesis)g(from)e
(the)h(v)n(ersion)h(space)104 1153 y Fl(V)19 b(S)226
1165 y Fj(H)r(;D)347 1153 y Fq(\))0 1360 y(What)30 b(w)n(ould)f(Ba)n(y)
n(es)f(rule)i(pro)r(duce)f(as)f(the)i(MAP)0 1464 y(h)n(yp)r(othesis?)0
1617 y(Do)r(es)f Fl(F)12 b(indS)33 b Fq(output)c(a)g(MAP)f(h)n(yp)r
(othesis??)0 2748 y Fo(132)334 b(lecture)17 b(slides)f(for)f(textb)q(o)
q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 134 8
134 9 bop 25 160 a Fm(Relation)35 b(to)g(Concept)f(Learning)1405
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1405 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fq(Assume)27 b(\014xed)i(set)g(of)h(instances)g Fp(h)p
Fl(x)1211 556 y Fg(1)1243 543 y Fl(;)15 b(:)f(:)g(:)g(;)h(x)1484
556 y Fj(m)1539 543 y Fp(i)0 647 y Fq(Assume)27 b Fl(D)k
Fq(is)f(the)f(set)h(of)f(classi\014cations)0 751 y Fl(D)e
Fq(=)c Fp(h)p Fl(c)p Fq(\()p Fl(x)340 763 y Fg(1)374
751 y Fq(\))p Fl(;)15 b(:)f(:)g(:)g(;)h(c)p Fq(\()p Fl(x)718
763 y Fj(m)773 751 y Fq(\))p Fp(i)0 854 y Fq(Cho)r(ose)29
b Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))40 1000
y Fp(\017)21 b Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p
Fq(\))25 b(=)f(1)29 b(if)h Fl(h)e Fq(consisten)n(t)i(with)g
Fl(D)40 1145 y Fp(\017)21 b Fl(P)12 b Fq(\()p Fl(D)r
Fp(j)p Fl(h)p Fq(\))25 b(=)f(0)29 b(otherwise)0 1290
y(Cho)r(ose)g Fl(P)12 b Fq(\()p Fl(h)p Fq(\))30 b(to)f(b)r(e)g
Fk(uniform)i Fq(distribution)40 1435 y Fp(\017)21 b Fl(P)12
b Fq(\()p Fl(h)p Fq(\))24 b(=)436 1402 y Fg(1)p 407 1415
88 2 v 407 1465 a Fi(j)p Fj(H)5 b Fi(j)529 1435 y Fq(for)29
b(all)h Fl(h)e Fq(in)i Fl(H)0 1586 y Fq(Then,)142 1844
y Fl(P)12 b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))26 b(=)539
1661 y Ff(8)539 1698 y(>)539 1711 y(>)539 1723 y(>)539
1736 y(>)539 1748 y(>)539 1760 y(>)539 1773 y(>)539 1785
y(<)539 1860 y(>)539 1873 y(>)539 1885 y(>)539 1897 y(>)539
1910 y(>)539 1922 y(>)539 1935 y(>)539 1947 y(:)695 1695
y Fg(1)p 601 1708 218 2 v 601 1759 a Fi(j)p Fj(V)13 b(S)703
1772 y Fh(H)q(;D)802 1759 y Fi(j)865 1729 y Fq(if)30
b Fl(h)e Fq(is)i(consisten)n(t)g(with)g Fl(D)688 1958
y Fq(0)134 b(otherwise)0 2748 y Fo(134)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 135 9
135 10 bop 25 170 a Fm(Ev)m(olution)36 b(of)d(P)m(osterior)j
(Probabiliti)q(es)1661 170 y
0.8666 0.03137 0.02352 setrgbcolor
 1661 170 a 0 321 1947 2
v 0 474 a
0 0 0 setrgbcolor
 0 474 a 0 478 a
 26049576 7814871 10064609 25852231 35653713 33680261 startTexFig
 0 478 a
%%BeginDocument: ./bookps/bayes-vs.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 204.067 274.176 ] concat
%I
29 259 29 363 Line
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 203.067 275.176 ] concat
%I
30 258 129 258 Line
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 218.067 513.176 ] concat
%I
16 20 114 34 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 250.067 526.676 ] concat
%I
[
(hypotheses)
] Text
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 369.067 273.676 ] concat
%I
29 259 29 363 Line
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 368.067 275.176 ] concat
%I
30 258 129 258 Line
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 257.067 514.176 ] concat
%I
165 19 224 48 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 415.067 526.676 ] concat
%I
[
(hypotheses)
] Text
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 546.067 274.176 ] concat
%I
29 259 29 363 Line
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 545.067 275.176 ] concat
%I
30 258 129 258 Line
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 1 0 0 1 321.067 512.176 ] concat
%I
297 21 313 106 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 592.067 526.676 ] concat
%I
[
(hypotheses)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 441.163 -255.143 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 59.0218 869.32 ] concat
%I
[
(P\(h|D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 94.0347 869.32 ] concat
%I
[
(1,)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 106.039 869.32 ] concat
%I
[
(D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 117.043 869.32 ] concat
%I
[
(2\))
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 289.107 -185.117 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 57.0211 799.294 ] concat
%I
[
(P\(h|D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 92.034 799.294 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 99.0364 799.294 ] concat
%I
[
(\))
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 90.0332 -175.113 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 106.039 789.291 ] concat
%I
[
(P)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 122.045 789.291 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 131.048 789.291 ] concat
%I
[
(\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 116.043 789.291 ] concat
%I
[
(\()
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 163.023 -425.157 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 116.043 933.344 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 111.041 933.344 ] concat
%I
[
(\()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 123.045 933.344 ] concat
%I
[
(\))
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 330.524 -357.132 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 114.042 865.319 ] concat
%I
[
(b)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 108.04 865.319 ] concat
%I
[
(\()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 121.044 865.319 ] concat
%I
[
(\))
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 506.524 -289.107 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1.00037 0 0 1.00037 115.042 797.294 ] concat
%I
[
(c)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 109.041 797.294 ] concat
%I
[
(\()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1.00037 0 0 1.00037 122.045 797.294 ] concat
%I
[
(\))
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fo(135)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 136 10
136 11 bop 25 155 a Fm(Characterizing)77 b(Learning)f(Algorithms)i(b)m
(y)25 279 y(Equiv)-6 b(alen)m(t)36 b(MAP)f(Learners)1238
279 y
0.8666 0.03137 0.02352 setrgbcolor
 1238 279 a 0 434 1947 2 v 0 587 a
0 0 0 setrgbcolor
 0 587 a 0 591
a
 26049576 25789068 8156938 20458127 27825684 40061091 startTexFig
 0 591 a
%%BeginDocument: ./bookps2/vs-map-equivalent.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Roman reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1.02222 157 258.555 ] concat
%I
131 381 260 470 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 207 ] concat
%I
260 490 370 490 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 500 131 500 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1.33333 158 -49.667 ] concat
%I
131 381 260 470 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 47 ] concat
%I
260 490 370 490 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 62.9941 ] concat
%I
51 500 131 500 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 62.994 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 7 ] concat
%I
51 461 131 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.657143 0 0 1 128.946 177 ] concat
%I
119 251 149 281 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 309 757.016 ] concat
%I
[
(Inductive system)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 429.001 715.041 ] concat
%I
[
(Output hypotheses)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 428.005 556.102 ] concat
%I
[
(Output hypotheses)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 320.997 530.01 ] concat
%I
[
(Brute force)
(MAP learner)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 325.494 709.507 ] concat
%I
[
(Candidate)
(Elimination)
(Algorithm )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 179 418 ] concat
%I
[
(Prior assumptions)
( made explicit)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 504.128 ] concat
%I
[
(P\(h\) uniform)
(P\(D|h\) = 0 if inconsistent,)
(            = 1 if consistent)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 255.017 599.013 ] concat
%I
[
(Equivalent Bayesian inference system)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 721 ] concat
%I
[
(Training examples D)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 686 ] concat
%I
[
(Hypothesis space H )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 540.057 ] concat
%I
[
(Hypothesis space H )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 157.001 576.995 ] concat
%I
[
(Training examples D)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fo(136)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 137 11
137 12 bop 25 160 a Fm(Learning)35 b(A)g(Real)g(V)-9
b(alued)36 b(F)-9 b(unction)1582 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1582 160 a 0 321
1947 2 v 0 446 a
0 0 0 setrgbcolor
 0 446 a 598 450 a
 11840716 10656639 3946905 8156938 23747215 26049576 startTexFig
 598 450 a
%%BeginDocument: ./bookps/bayes-linear.epsf
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def

initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%
%tLayer
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
72.000 396.000 moveto
/Triangular 14.099 7.049 false 90.006 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 72.000 648.000 72.000 398.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
351.000 648.000 moveto
/Triangular 14.099 7.049 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 349.000 648.000 72.000 648.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 360.000 459.000 63.000 585.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
0.750 0 527.536 134.305 0.000 0.000 6.750 6.750 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {[9.000 9.000 ] 0 setdash} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 360.000 477.000 63.000 576.000 Line
%@EndLine
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Times-Italic /Times-Italic EncodeFont

%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 497.540 304.382 0.000 0.000 20.000 25.770 rect
%@EndRect
gsave
317.267 507.540 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Italic) plain F
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(h) -11.845 2.000 S
12.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(M) -4.845 6.000 S
(L) 5.150 6.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 461.540 306.000 0.000 0.000 16.000 8.424 rect
%@EndRect
gsave
310.212 469.540 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(f) -0.889 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
220.250 519.000 moveto
/Triangular 7.637 5.874 false 90.006 DrawArrowHead
220.250 548.250 moveto
/Triangular 7.637 5.874 false 270.019 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 220.249 546.949 220.250 520.300 Line
%@EndLine
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 526.346 224.807 0.000 0.000 16.000 8.226 rect
%@EndRect
gsave
228.921 534.346 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(e) -3.604 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 422.000 60.000 0.000 0.000 16.000 9.026 rect
%@EndRect
gsave
64.513 430.000 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(y) -3.612 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
0.000 0 651.077 318.432 0.000 0.000 16.000 9.053 rect
%@EndRect
gsave
322.959 659.077 T translate
0.0 rotate
1 1 scale
14.000 (_Times-Italic) fess
 /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 

(x) -3.152 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
0.750 0 547.610 85.169 0.000 0.000 6.750 6.750 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
0.750 0 495.706 349.780 0.000 0.000 6.750 6.750 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
0.750 0 476.100 267.425 0.000 0.000 5.827 6.750 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PC { /setcmykcolor where
 {begin 0.000 0.000 0.000 1.000 setcmykcolor end} {0.000 0.000 0.000 setrgbcolor} ifelse 
} def
/PF {gsave fill grestore} def
0.750 0 548.772 216.444 0.000 0.000 6.750 6.750 rect
%@EndOval
restore
end
%%EndDocument

 endTexFig
 0 1229 a Fq(Consider)29 b(an)n(y)g(real-v)-5 b(alued)31
b(target)f(function)g Fl(f)0 1332 y Fq(T)-7 b(raining)30
b(examples)f Fp(h)p Fl(x)800 1345 y Fj(i)824 1332 y Fl(;)14
b(d)907 1345 y Fj(i)929 1332 y Fp(i)p Fq(,)29 b(where)g
Fl(d)1309 1345 y Fj(i)1360 1332 y Fq(is)h(noisy)0 1436
y(training)g(v)-5 b(alue)40 1560 y Fp(\017)21 b Fl(d)149
1573 y Fj(i)195 1560 y Fq(=)j Fl(f)9 b Fq(\()p Fl(x)419
1573 y Fj(i)443 1560 y Fq(\))19 b(+)h Fl(e)622 1573 y
Fj(i)40 1698 y Fp(\017)h Fl(e)144 1711 y Fj(i)195 1698
y Fq(is)30 b(random)d(v)-5 b(ariable)31 b(\(noise\))f(dra)n(wn)104
1802 y(indep)r(enden)n(tly)h(for)e(eac)n(h)f Fl(x)1035
1815 y Fj(i)1087 1802 y Fq(according)i(to)f(some)104
1906 y(Gaussian)g(distribution)i(with)f(mean=0)0 2030
y(Then)f(the)g(maxim)n(um)d(lik)n(eli)q(ho)r(o)s(d)31
b(h)n(yp)r(othesis)f Fl(h)1641 2043 y Fj(M)7 b(L)1777
2030 y Fq(is)0 2134 y(the)29 b(one)g(that)h(minimizes)f(the)g(sum)e(of)
i(squared)g(errors:)405 2279 y Fl(h)455 2292 y Fj(M)7
b(L)586 2279 y Fq(=)24 b(arg)15 b(min)820 2327 y Fj(h)p
Fi(2)p Fj(H)992 2216 y(m)989 2228 y Ff(X)970 2337 y Fj(i)p
Fg(=1)1081 2279 y Fq(\()q Fl(d)1160 2292 y Fj(i)1202
2279 y Fp(\000)k Fl(h)p Fq(\()p Fl(x)1420 2292 y Fj(i)1443
2279 y Fq(\)\))1510 2238 y Fg(2)0 2748 y Fo(137)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 138 12
138 13 bop 25 160 a Fm(Learning)35 b(A)g(Real)g(V)-9
b(alued)36 b(F)-9 b(unction)1582 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1582 160 a 0 321
1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 286 632 a Fl(h)336 645 y Fj(M)7
b(L)484 632 y Fq(=)42 b(argmax)668 697 y Fj(h)p Fi(2)p
Fj(H)887 632 y Fl(p)p Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))484
813 y(=)g(argmax)668 878 y Fj(h)p Fi(2)p Fj(H)909 750
y(m)909 763 y Ff(Y)887 871 y Fj(i)p Fg(=1)999 813 y Fl(p)p
Fq(\()p Fl(d)1120 826 y Fj(i)1143 813 y Fp(j)p Fl(h)p
Fq(\))484 1015 y(=)g(argmax)668 1080 y Fj(h)p Fi(2)p
Fj(H)909 952 y(m)909 965 y Ff(Y)887 1073 y Fj(i)p Fg(=1)1108
957 y Fq(1)p 1004 994 252 2 v 1004 1006 a Fp(p)p 1075
1006 180 4 v 1075 1080 a Fq(2)p Fl(\031)s(\033)1222 1056
y Fg(2)1260 1015 y Fl(e)1300 980 y Fi(\000)1351 956 y
Fd(1)p 1351 966 25 2 v 1351 1000 a(2)1381 980 y Fg(\()1409
947 y Fh(d)1434 962 y(i)1453 947 y Fc(\000)p Fh(h)p Fd(\()p
Fh(x)1567 962 y(i)1585 947 y Fd(\))p 1409 966 196 2 v
1492 1000 a Fh(\033)1609 980 y Fg(\))1632 958 y Fd(2)0
1203 y Fq(Maximize)30 b(natural)g(log)f(of)h(this)f(instead...)112
1499 y Fl(h)162 1512 y Fj(M)7 b(L)311 1499 y Fq(=)41
b(argmax)495 1564 y Fj(h)p Fi(2)p Fj(H)736 1436 y(m)732
1448 y Ff(X)713 1557 y Fj(i)p Fg(=1)825 1499 y Fq(ln)1020
1441 y(1)p 916 1478 252 2 v 916 1490 a Fp(p)p 988 1490
180 4 v 74 x Fq(2)p Fl(\031)s(\033)1135 1539 y Fg(2)1191
1499 y Fp(\000)1282 1441 y Fq(1)p 1282 1478 44 2 v 1282
1558 a(2)1345 1379 y Ff(0)1345 1452 y(B)1345 1477 y(B)1345
1504 y(@)1386 1441 y Fl(d)1431 1453 y Fj(i)1473 1441
y Fp(\000)19 b Fl(h)p Fq(\()p Fl(x)1691 1453 y Fj(i)1714
1441 y Fq(\))p 1386 1478 362 2 v 1540 1558 a Fl(\033)1752
1379 y Ff(1)1752 1452 y(C)1752 1477 y(C)1752 1504 y(A)1788
1399 y Fg(2)311 1732 y Fq(=)41 b(argmax)495 1797 y Fj(h)p
Fi(2)p Fj(H)736 1669 y(m)732 1681 y Ff(X)713 1790 y Fj(i)p
Fg(=1)825 1732 y Fp(\000)897 1673 y Fq(1)p 897 1711 44
2 v 897 1791 a(2)959 1612 y Ff(0)959 1685 y(B)959 1710
y(B)959 1737 y(@)1000 1673 y Fl(d)1045 1686 y Fj(i)1087
1673 y Fp(\000)19 b Fl(h)p Fq(\()p Fl(x)1305 1686 y Fj(i)1328
1673 y Fq(\))p 1000 1711 362 2 v 1155 1791 a Fl(\033)1367
1612 y Ff(1)1367 1685 y(C)1367 1710 y(C)1367 1737 y(A)1403
1632 y Fg(2)311 1919 y Fq(=)41 b(argmax)495 1985 y Fj(h)p
Fi(2)p Fj(H)736 1856 y(m)732 1869 y Ff(X)713 1977 y Fj(i)p
Fg(=1)825 1919 y Fp(\000)14 b Fq(\()q Fl(d)985 1932 y
Fj(i)1026 1919 y Fp(\000)19 b Fl(h)p Fq(\()p Fl(x)1244
1932 y Fj(i)1267 1919 y Fq(\)\))1334 1878 y Fg(2)311
2101 y Fq(=)41 b(argmin)486 2166 y Fj(h)p Fi(2)p Fj(H)719
2037 y(m)715 2050 y Ff(X)697 2159 y Fj(i)p Fg(=1)808
2101 y Fq(\()q Fl(d)887 2113 y Fj(i)928 2101 y Fp(\000)19
b Fl(h)p Fq(\()p Fl(x)1146 2113 y Fj(i)1169 2101 y Fq(\)\))1236
2059 y Fg(2)0 2748 y Fo(138)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 139 13
139 14 bop 25 160 a Fm(Learning)35 b(to)f(Predict)i(Probabiliti)q(es)
1551 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1551 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
64 x Fq(Consider)29 b(predicting)i(surviv)-5 b(al)31
b(probabilit)n(y)h(from)0 642 y(patien)n(t)e(data)0 796
y(T)-7 b(raining)30 b(examples)f Fp(h)p Fl(x)800 808
y Fj(i)824 796 y Fl(;)14 b(d)907 808 y Fj(i)929 796 y
Fp(i)p Fq(,)29 b(where)g Fl(d)1309 808 y Fj(i)1360 796
y Fq(is)h(1)f(or)f(0)0 949 y(W)-7 b(an)n(t)29 b(to)g(train)h(neural)f
(net)n(w)n(ork)g(to)g(output)g(a)0 1053 y Fk(pr)l(ob)l(ability)f
Fq(giv)n(en)h Fl(x)686 1066 y Fj(i)738 1053 y Fq(\(not)h(a)e(0)h(or)f
(1\))0 1307 y(In)h(this)h(case)f(can)g(sho)n(w)18 1460
y Fl(h)68 1473 y Fj(M)7 b(L)198 1460 y Fq(=)24 b(argmax)365
1525 y Fj(h)p Fi(2)p Fj(H)606 1397 y(m)602 1410 y Ff(X)584
1518 y Fj(i)p Fg(=1)695 1460 y Fl(d)740 1473 y Fj(i)777
1460 y Fq(ln)15 b Fl(h)p Fq(\()p Fl(x)995 1473 y Fj(i)1018
1460 y Fq(\))20 b(+)f(\(1)g Fp(\000)g Fl(d)1383 1473
y Fj(i)1406 1460 y Fq(\))c(ln\(1)20 b Fp(\000)f Fl(h)p
Fq(\()p Fl(x)1839 1473 y Fj(i)1862 1460 y Fq(\)\))0 1696
y(W)-7 b(eigh)n(t)30 b(up)r(date)g(rule)f(for)g(a)f(sigmoid)i(unit:)631
1849 y Fl(w)693 1862 y Fj(j)s(k)780 1849 y Fp( )24 b
Fl(w)952 1862 y Fj(j)s(k)1033 1849 y Fq(+)c(\001)p Fl(w)1254
1862 y Fj(j)s(k)0 2003 y Fq(where)444 2106 y(\001)p Fl(w)578
2119 y Fj(j)s(k)665 2106 y Fq(=)k Fl(\021)838 2043 y
Fj(m)834 2056 y Ff(X)816 2165 y Fj(i)p Fg(=1)913 2106
y Fq(\()p Fl(d)991 2119 y Fj(i)1033 2106 y Fp(\000)19
b Fl(h)p Fq(\()p Fl(x)1251 2119 y Fj(i)1274 2106 y Fq(\)\))30
b Fl(x)1419 2119 y Fj(ij)s(k)0 2748 y Fo(139)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 140 14
140 15 bop 25 160 a Fm(Minim)m(um)36 b(Description)h(Length)d(Principl)
q(e)1835 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1835 160 a 0 321 1947 2 v 0 445 a
0 0 0 setrgbcolor
 0 445
a 64 x Fq(Occam's)28 b(razor:)38 b(prefer)29 b(the)g(shortest)g(h)n(yp)
r(othesis)0 763 y(MDL:)f(prefer)h(the)g(h)n(yp)r(othesis)h
Fl(h)f Fq(that)g(minimizes)325 891 y Fl(h)375 904 y Fj(M)7
b(D)r(L)557 891 y Fq(=)24 b(argmin)715 957 y Fj(h)p Fi(2)p
Fj(H)926 891 y Fl(L)985 904 y Fj(C)1028 916 y Fd(1)1056
891 y Fq(\()p Fl(h)p Fq(\))19 b(+)g Fl(L)1336 904 y Fj(C)1379
916 y Fd(2)1407 891 y Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))0
1056 y(where)29 b Fl(L)308 1069 y Fj(C)357 1056 y Fq(\()p
Fl(x)p Fq(\))g(is)h(the)f(description)i(length)f(of)f
Fl(x)g Fq(under)0 1160 y(enco)r(ding)h Fl(C)p 0 1384
1947 3 v 0 1497 a Fq(Example:)38 b Fl(H)d Fq(=)29 b(decision)i(trees,)e
Fl(D)i Fq(=)e(training)h(data)0 1601 y(lab)r(els)40 1725
y Fp(\017)21 b Fl(L)163 1737 y Fj(C)206 1749 y Fd(1)234
1725 y Fq(\()p Fl(h)p Fq(\))29 b(is)g(#)g(bits)h(to)f(describ)r(e)h
(tree)g Fl(h)40 1863 y Fp(\017)21 b Fl(L)163 1876 y Fj(C)206
1887 y Fd(2)234 1863 y Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))29
b(is)h(#)e(bits)i(to)g(describ)r(e)g Fl(D)h Fq(giv)n(en)f
Fl(h)125 2001 y Fb({)21 b Fq(Note)29 b Fl(L)462 2014
y Fj(C)505 2025 y Fd(2)533 2001 y Fq(\()p Fl(D)r Fp(j)p
Fl(h)p Fq(\))c(=)f(0)29 b(if)h(examples)f(classi\014ed)195
2104 y(p)r(erfectly)j(b)n(y)c Fl(h)p Fq(.)38 b(Need)29
b(only)h(describ)r(e)g(exceptions)40 2243 y Fp(\017)21
b Fq(Hence)29 b Fl(h)410 2255 y Fj(M)7 b(D)r(L)596 2243
y Fq(trades)29 b(o\013)g(tree)h(size)g(for)f(training)104
2346 y(errors)0 2748 y Fo(140)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 141 15
141 16 bop 25 160 a Fm(Minim)m(um)36 b(Description)h(Length)d(Principl)
q(e)1835 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1835 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474
a 165 593 a Fl(h)215 606 y Fj(M)7 b(AP)414 593 y Fq(=)41
b(arg)16 b(max)673 641 y Fj(h)p Fi(2)p Fj(H)832 593 y
Fl(P)c Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))p Fl(P)g Fq(\()p
Fl(h)p Fq(\))414 729 y(=)41 b(arg)16 b(max)673 777 y
Fj(h)p Fi(2)p Fj(H)832 729 y Fq(log)943 749 y Fg(2)990
729 y Fl(P)c Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))20 b(+)f(log)1488
749 y Fg(2)1534 729 y Fl(P)12 b Fq(\()p Fl(h)p Fq(\))414
865 y(=)41 b(arg)16 b(min)665 913 y Fj(h)p Fi(2)p Fj(H)815
865 y Fp(\000)f Fq(log)1008 885 y Fg(2)1054 865 y Fl(P)d
Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))21 b Fp(\000)e Fq(log)1552
885 y Fg(2)1598 865 y Fl(P)12 b Fq(\()p Fl(h)p Fq(\))56
b(\(1\))0 1034 y(In)n(teresting)30 b(fact)g(from)e(information)h
(theory:)104 1179 y(The)g(optimal)g(\(shortest)h(exp)r(ected)h(co)r
(ding)104 1283 y(length\))f(co)r(de)g(for)e(an)h(ev)n(en)n(t)g(with)h
(probabilit)n(y)h Fl(p)e Fq(is)104 1386 y Fp(\000)14
b Fq(log)296 1406 y Fg(2)343 1386 y Fl(p)29 b Fq(bits.)0
1532 y(So)g(in)n(terpret)g(\(1\):)40 1677 y Fp(\017)21
b(\000)14 b Fq(log)296 1697 y Fg(2)343 1677 y Fl(P)e
Fq(\()p Fl(h)p Fq(\))29 b(is)h(length)g(of)f Fl(h)f Fq(under)g(optimal)
i(co)r(de)40 1822 y Fp(\017)21 b(\000)14 b Fq(log)296
1842 y Fg(2)343 1822 y Fl(P)e Fq(\()p Fl(D)r Fp(j)p Fl(h)p
Fq(\))30 b(is)f(length)h(of)f Fl(D)j Fq(giv)n(en)e Fl(h)e
Fq(under)104 1926 y(optimal)h(co)r(de)0 2071 y Fp(!)g
Fq(prefer)g(the)g(h)n(yp)r(othesis)h(that)g(minimizes)223
2225 y Fl(l)r(eng)s(th)p Fq(\()p Fl(h)p Fq(\))19 b(+)g
Fl(l)r(eng)s(th)p Fq(\()p Fl(miscl)r(assif)9 b(ications)p
Fq(\))0 2748 y Fo(141)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)
g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 142 16
142 17 bop 25 164 a Fq(Most)29 b(Probable)g(Classi\014catio)q(n)i(of)e
(New)g(Instances)1803 164 y
0.8666 0.03137 0.02352 setrgbcolor
 1803 164 a 0 321 1947 2 v
0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fq(So)g(far)f(w)n(e'v)n(e)h(sough)n(t)g(the)g
(most)f(probable)h Fk(hyp)l(othesis)0 642 y Fq(giv)n(en)h(the)f(data)g
Fl(D)j Fq(\(i.e.,)e Fl(h)918 655 y Fj(M)7 b(AP)1075 642
y Fq(\))0 796 y(Giv)n(en)29 b(new)g(instance)i Fl(x)p
Fq(,)d(what)i(is)f(its)h(most)e(probable)0 899 y Fk(classi\014c)l
(ation)p Fq(?)40 1045 y Fp(\017)21 b Fl(h)154 1058 y
Fj(M)7 b(AP)311 1045 y Fq(\()p Fl(x)p Fq(\))30 b(is)g(not)f(the)g(most)
f(probable)h(classi\014cati)q(on!)0 1240 y(Consider:)40
1385 y Fp(\017)21 b Fq(Three)29 b(p)r(ossible)i(h)n(yp)r(otheses:)195
1530 y Fl(P)12 b Fq(\()p Fl(h)345 1543 y Fg(1)377 1530
y Fp(j)p Fl(D)r Fq(\))25 b(=)f Fl(:)p Fq(4)p Fl(;)43
b(P)12 b Fq(\()p Fl(h)907 1543 y Fg(2)939 1530 y Fp(j)p
Fl(D)r Fq(\))25 b(=)f Fl(:)p Fq(3)p Fl(;)43 b(P)12 b
Fq(\()p Fl(h)1469 1543 y Fg(3)1502 1530 y Fp(j)p Fl(D)r
Fq(\))24 b(=)g Fl(:)p Fq(3)40 1676 y Fp(\017)d Fq(Giv)n(en)29
b(new)g(instance)h Fl(x)p Fq(,)195 1821 y Fl(h)245 1834
y Fg(1)277 1821 y Fq(\()p Fl(x)p Fq(\))25 b(=)f(+)p Fl(;)43
b(h)692 1834 y Fg(2)723 1821 y Fq(\()p Fl(x)p Fq(\))25
b(=)f Fp(\000)p Fl(;)43 b(h)1138 1834 y Fg(3)1170 1821
y Fq(\()p Fl(x)p Fq(\))25 b(=)f Fp(\000)40 1966 y(\017)d
Fq(What's)29 b(most)f(probable)h(classi\014cati)q(on)i(of)f
Fl(x)p Fq(?)0 2748 y Fo(142)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 143 17
143 18 bop 25 160 a Fm(Ba)m(y)m(es)34 b(Optimal)i(Classi\014er)1170
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1170 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fb(Ba)m(y)m(es)f(optimal)f(classi\014cation:)434 709
y Fq(arg)16 b(max)579 756 y Fj(v)608 768 y Fh(j)633 756
y Fi(2)p Fj(V)788 658 y Ff(X)744 769 y Fj(h)778 781 y
Fh(i)797 769 y Fi(2)p Fj(H)906 709 y Fl(P)c Fq(\()p Fl(v)1048
721 y Fj(j)1079 709 y Fp(j)p Fl(h)1153 721 y Fj(i)1175
709 y Fq(\))p Fl(P)g Fq(\()p Fl(h)1358 721 y Fj(i)1381
709 y Fp(j)p Fl(D)r Fq(\))0 899 y(Example:)196 1156 y
Fl(P)g Fq(\()p Fl(h)346 1169 y Fg(1)378 1156 y Fp(j)p
Fl(D)r Fq(\))25 b(=)f Fl(:)p Fq(4)p Fl(;)42 b(P)12 b
Fq(\()p Fp(\000j)p Fl(h)998 1169 y Fg(1)1030 1156 y Fq(\))24
b(=)g(0)p Fl(;)41 b(P)12 b Fq(\(+)p Fp(j)p Fl(h)1527
1169 y Fg(1)1560 1156 y Fq(\))24 b(=)g(1)196 1272 y Fl(P)12
b Fq(\()p Fl(h)346 1285 y Fg(2)378 1272 y Fp(j)p Fl(D)r
Fq(\))25 b(=)f Fl(:)p Fq(3)p Fl(;)42 b(P)12 b Fq(\()p
Fp(\000j)p Fl(h)998 1285 y Fg(2)1030 1272 y Fq(\))24
b(=)g(1)p Fl(;)41 b(P)12 b Fq(\(+)p Fp(j)p Fl(h)1527
1285 y Fg(2)1560 1272 y Fq(\))24 b(=)g(0)196 1388 y Fl(P)12
b Fq(\()p Fl(h)346 1401 y Fg(3)378 1388 y Fp(j)p Fl(D)r
Fq(\))25 b(=)f Fl(:)p Fq(3)p Fl(;)42 b(P)12 b Fq(\()p
Fp(\000j)p Fl(h)998 1401 y Fg(3)1030 1388 y Fq(\))24
b(=)g(1)p Fl(;)41 b(P)12 b Fq(\(+)p Fp(j)p Fl(h)1527
1401 y Fg(3)1560 1388 y Fq(\))24 b(=)g(0)0 1542 y(therefore)527
1645 y Ff(X)483 1756 y Fj(h)517 1768 y Fh(i)536 1756
y Fi(2)p Fj(H)645 1696 y Fl(P)12 b Fq(\(+)p Fp(j)p Fl(h)886
1709 y Fj(i)909 1696 y Fq(\))p Fl(P)g Fq(\()p Fl(h)1092
1709 y Fj(i)1116 1696 y Fp(j)p Fl(D)r Fq(\))42 b(=)g
Fl(:)p Fq(4)527 1803 y Ff(X)483 1913 y Fj(h)517 1925
y Fh(i)536 1913 y Fi(2)p Fj(H)645 1853 y Fl(P)12 b Fq(\()p
Fp(\000j)p Fl(h)886 1866 y Fj(i)909 1853 y Fq(\))p Fl(P)g
Fq(\()p Fl(h)1092 1866 y Fj(i)1116 1853 y Fp(j)p Fl(D)r
Fq(\))42 b(=)g Fl(:)p Fq(6)0 2043 y(and)326 2197 y(arg)15
b(max)470 2245 y Fj(v)499 2257 y Fh(j)524 2245 y Fi(2)p
Fj(V)680 2146 y Ff(X)636 2257 y Fj(h)670 2269 y Fh(i)689
2257 y Fi(2)p Fj(H)798 2197 y Fl(P)d Fq(\()p Fl(v)940
2210 y Fj(j)970 2197 y Fp(j)p Fl(h)1044 2210 y Fj(i)1066
2197 y Fq(\))p Fl(P)g Fq(\()p Fl(h)1249 2210 y Fj(i)1273
2197 y Fp(j)p Fl(D)r Fq(\))43 b(=)e Fp(\000)0 2748 y
Fo(143)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 144 18
144 19 bop 25 170 a Fm(Gibbs)36 b(Classi\014er)768 170
y
0.8666 0.03137 0.02352 setrgbcolor
 768 170 a 0 321 1947 2 v 0 473 a
0 0 0 setrgbcolor
 0 473 a 64 x Fq(Ba)n(y)n(es)29
b(optimal)g(classi\014er)i(pro)n(vides)e(b)r(est)h(result,)g(but)0
641 y(can)f(b)r(e)g(exp)r(ensiv)n(e)i(if)f(man)n(y)d(h)n(yp)r(otheses.)
0 745 y(Gibbs)i(algorithm:)16 889 y(1.)21 b(Cho)r(ose)29
b(one)g(h)n(yp)r(othesis)h(at)g(random,)c(according)k(to)104
993 y Fl(P)12 b Fq(\()p Fl(h)p Fp(j)p Fl(D)r Fq(\))16
1138 y(2.)21 b(Use)28 b(this)i(to)f(classify)j(new)d(instance)0
1282 y(Surprising)g(fact:)40 b(Assume)27 b(target)i(concepts)h(are)f
(dra)n(wn)0 1386 y(at)g(random)d(from)i Fl(H)34 b Fq(according)c(to)f
(priors)f(on)g Fl(H)7 b Fq(.)38 b(Then:)305 1555 y Fl(E)5
b Fq([)p Fl(er)r(r)r(or)601 1568 y Fj(Gibbs)749 1555
y Fq(])24 b Fp(\024)g Fq(2)p Fl(E)5 b Fq([)p Fl(er)r(r)r(or)1227
1568 y Fj(B)s(ay)r(esO)r(ptimal)1618 1555 y Fq(])0 1708
y(Supp)r(ose)29 b(correct,)g(uniform)f(prior)h(distribution)j(o)n(v)n
(er)c Fl(H)7 b Fq(,)0 1812 y(then)40 1956 y Fp(\017)21
b Fq(Pic)n(k)29 b(an)n(y)g(h)n(yp)r(othesis)h(from)e(VS,)g(with)i
(uniform)104 2060 y(probabilit)n(y)40 2205 y Fp(\017)21
b Fq(Its)29 b(exp)r(ected)i(error)d(no)g(w)n(orse)h(than)g(t)n(wice)h
(Ba)n(y)n(es)104 2309 y(optimal)0 2748 y Fo(144)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 145 19
145 20 bop 25 160 a Fm(Naiv)m(e)35 b(Ba)m(y)m(es)e(Classi\014er)1053
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1053 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(Along)c(with)h(decision)h(trees,)e(neural)h(net)n(w)n(orks,)e
(nearest)0 642 y(n)n(br,)g(one)g(of)h(the)h(most)e(practical)j
(learning)f(metho)r(ds.)0 796 y(When)f(to)g(use)40 941
y Fp(\017)21 b Fq(Mo)r(derate)29 b(or)g(large)h(training)g(set)f(a)n(v)
-5 b(ailable)40 1086 y Fp(\017)21 b Fq(A)n(ttributes)30
b(that)f(describ)r(e)h(instances)h(are)104 1190 y(conditionall)q(y)h
(indep)r(enden)n(t)e(giv)n(en)g(classi\014cation)0 1335
y(Successful)g(applications:)40 1480 y Fp(\017)21 b Fq(Diagnosis)40
1626 y Fp(\017)g Fq(Classifying)32 b(text)e(do)r(cumen)n(ts)0
2748 y Fo(145)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 146 20
146 21 bop 25 160 a Fm(Naiv)m(e)35 b(Ba)m(y)m(es)e(Classi\014er)1053
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1053 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(Assume)27 b(target)j(function)g Fl(f)j Fq(:)24 b Fl(X)31
b Fp(!)24 b Fl(V)19 b Fq(,)29 b(where)g(eac)n(h)0 642
y(instance)h Fl(x)f Fq(describ)r(ed)h(b)n(y)f(attributes)h
Fp(h)p Fl(a)1389 655 y Fg(1)1422 642 y Fl(;)15 b(a)1506
655 y Fg(2)1552 642 y Fl(:)g(:)f(:)g(a)1712 655 y Fj(n)1751
642 y Fp(i)p Fq(.)0 746 y(Most)29 b(probable)g(v)-5 b(alue)31
b(of)e Fl(f)9 b Fq(\()p Fl(x)p Fq(\))30 b(is:)225 899
y Fl(v)267 912 y Fj(M)7 b(AP)467 899 y Fq(=)41 b(argmax)644
964 y Fj(v)673 976 y Fh(j)698 964 y Fi(2)p Fj(V)870 899
y Fl(P)12 b Fq(\()p Fl(v)1012 912 y Fj(j)1042 899 y Fp(j)p
Fl(a)1111 912 y Fg(1)1144 899 y Fl(;)i(a)1227 912 y Fg(2)1274
899 y Fl(:)g(:)g(:)g(a)1433 912 y Fj(n)1472 899 y Fq(\))225
1129 y Fl(v)267 1142 y Fj(M)7 b(AP)467 1129 y Fq(=)41
b(argmax)644 1194 y Fj(v)673 1206 y Fh(j)698 1194 y Fi(2)p
Fj(V)875 1071 y Fl(P)12 b Fq(\()p Fl(a)1020 1084 y Fg(1)1053
1071 y Fl(;)i(a)1136 1084 y Fg(2)1183 1071 y Fl(:)g(:)g(:)h(a)1343
1084 y Fj(n)1381 1071 y Fp(j)p Fl(v)1447 1084 y Fj(j)1477
1071 y Fq(\))p Fl(P)d Fq(\()p Fl(v)1652 1084 y Fj(j)1683
1071 y Fq(\))p 875 1108 842 2 v 1026 1188 a Fl(P)g Fq(\()p
Fl(a)1171 1201 y Fg(1)1204 1188 y Fl(;)i(a)1287 1201
y Fg(2)1334 1188 y Fl(:)g(:)g(:)h(a)1494 1201 y Fj(n)1532
1188 y Fq(\))467 1301 y(=)41 b(argmax)644 1365 y Fj(v)673
1377 y Fh(j)698 1365 y Fi(2)p Fj(V)870 1301 y Fl(P)12
b Fq(\()p Fl(a)1015 1314 y Fg(1)1048 1301 y Fl(;)i(a)1131
1314 y Fg(2)1178 1301 y Fl(:)g(:)g(:)h(a)1338 1314 y
Fj(n)1376 1301 y Fp(j)p Fl(v)1442 1314 y Fj(j)1472 1301
y Fq(\))p Fl(P)d Fq(\()p Fl(v)1647 1314 y Fj(j)1678 1301
y Fq(\))0 1554 y(Naiv)n(e)30 b(Ba)n(y)n(es)e(assumption:)415
1707 y Fl(P)12 b Fq(\()p Fl(a)560 1720 y Fg(1)594 1707
y Fl(;)i(a)677 1720 y Fg(2)724 1707 y Fl(:)g(:)g(:)g(a)883
1720 y Fj(n)922 1707 y Fp(j)p Fl(v)988 1720 y Fj(j)1018
1707 y Fq(\))24 b(=)1166 1657 y Ff(Y)1182 1765 y Fj(i)1233
1707 y Fl(P)12 b Fq(\()p Fl(a)1378 1720 y Fj(i)1402 1707
y Fp(j)p Fl(v)1468 1720 y Fj(j)1498 1707 y Fq(\))0 1883
y(whic)n(h)29 b(giv)n(es)0 2054 y Fb(Naiv)m(e)35 b(Ba)m(y)m(es)g
(classi\014er:)46 b Fl(v)1044 2067 y Fj(N)7 b(B)1172
2054 y Fq(=)24 b(argmax)1332 2118 y Fj(v)1361 2130 y
Fh(j)1386 2118 y Fi(2)p Fj(V)1558 2054 y Fl(P)12 b Fq(\()p
Fl(v)1700 2067 y Fj(j)1730 2054 y Fq(\))1778 2003 y Ff(Y)1794
2112 y Fj(i)1845 2054 y Fl(P)g Fq(\()p Fl(a)1990 2067
y Fj(i)2014 2054 y Fp(j)p Fl(v)2080 2067 y Fj(j)2110
2054 y Fq(\))0 2748 y Fo(146)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 147 21
147 22 bop 25 160 a Fr(Naiv)m(e)40 b(Ba)m(y)m(es)f(Algorithm)1275
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1275 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fq(Naiv)n(e)p 217 543 26 2 v 32 w(Ba)n(y)n(es)p 466 543
V 31 w(Learn\()p Fl(exampl)r(es)p Fq(\))104 688 y(F)-7
b(or)28 b(eac)n(h)h(target)h(v)-5 b(alue)30 b Fl(v)970
701 y Fj(j)214 818 y Fq(^)195 840 y Fl(P)12 b Fq(\()p
Fl(v)337 853 y Fj(j)368 840 y Fq(\))24 b Fp( )29 b Fq(estimate)h
Fl(P)12 b Fq(\()p Fl(v)1027 853 y Fj(j)1057 840 y Fq(\))195
965 y(F)-7 b(or)29 b(eac)n(h)f(attribute)j(v)-5 b(alue)30
b Fl(a)1174 977 y Fj(i)1226 965 y Fq(of)f(eac)n(h)g(attribute)i
Fl(a)292 1067 y Fq(^)273 1089 y Fl(P)12 b Fq(\()p Fl(a)418
1102 y Fj(i)442 1089 y Fp(j)p Fl(v)508 1102 y Fj(j)537
1089 y Fq(\))25 b Fp( )k Fq(estimate)g Fl(P)12 b Fq(\()p
Fl(a)1199 1102 y Fj(i)1223 1089 y Fp(j)p Fl(v)1289 1102
y Fj(j)1319 1089 y Fq(\))0 1474 y(Classify)p 295 1474
V 34 w(New)p 494 1474 V 31 w(Instance\()p Fl(x)p Fq(\))367
1628 y Fl(v)409 1641 y Fj(N)7 b(B)538 1628 y Fq(=)23
b(argmax)697 1692 y Fj(v)726 1705 y Fh(j)751 1692 y Fi(2)p
Fj(V)942 1606 y Fq(^)923 1628 y Fl(P)12 b Fq(\()p Fl(v)1065
1641 y Fj(j)1095 1628 y Fq(\))1179 1577 y Ff(Y)1143 1679
y Fj(a)1175 1691 y Fh(i)1193 1679 y Fi(2)p Fj(x)1301
1606 y Fq(^)1282 1628 y Fl(P)g Fq(\()p Fl(a)1427 1641
y Fj(i)1451 1628 y Fp(j)p Fl(v)1517 1641 y Fj(j)1546
1628 y Fq(\))0 2748 y Fo(147)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 148 22
148 23 bop 25 160 a Fr(Naiv)m(e)40 b(Ba)m(y)m(es:)52
b(Example)1238 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1238 160 a 0 321 1947 2 v 0 474
a
0 0 0 setrgbcolor
 0 474 a 64 x Fq(Consider)29 b Fk(PlayT)-7 b(ennis)30
b Fq(again,)g(and)e(new)h(instance)0 709 y Fp(h)p Fl(O)r(utl)r(k)e
Fq(=)d Fl(sun;)14 b(T)e(emp)24 b Fq(=)g Fl(cool)r(;)14
b(H)7 b(umid)22 b Fq(=)i Fl(hig)s(h;)14 b(W)e(ind)23
b Fq(=)h Fl(str)r(ong)s Fp(i)0 912 y Fq(W)-7 b(an)n(t)29
b(to)g(compute:)403 1066 y Fl(v)445 1078 y Fj(N)7 b(B)573
1066 y Fq(=)24 b(argmax)733 1130 y Fj(v)762 1142 y Fh(j)787
1130 y Fi(2)p Fj(V)958 1066 y Fl(P)12 b Fq(\()p Fl(v)1100
1078 y Fj(j)1131 1066 y Fq(\))1179 1015 y Ff(Y)1195 1124
y Fj(i)1246 1066 y Fl(P)g Fq(\()p Fl(a)1391 1078 y Fj(i)1415
1066 y Fp(j)p Fl(v)1481 1078 y Fj(j)1511 1066 y Fq(\))0
1409 y Fl(P)g Fq(\()p Fl(y)s Fq(\))21 b Fl(P)12 b Fq(\()p
Fl(sun)p Fp(j)p Fl(y)s Fq(\))20 b Fl(P)12 b Fq(\()p Fl(cool)r
Fp(j)p Fl(y)s Fq(\))20 b Fl(P)12 b Fq(\()p Fl(hig)s(h)p
Fp(j)p Fl(y)s Fq(\))20 b Fl(P)12 b Fq(\()p Fl(str)r(ong)s
Fp(j)p Fl(y)s Fq(\))25 b(=)f Fl(:)p Fq(005)0 1563 y Fl(P)12
b Fq(\()p Fl(n)p Fq(\))20 b Fl(P)12 b Fq(\()p Fl(sun)p
Fp(j)p Fl(n)p Fq(\))20 b Fl(P)12 b Fq(\()p Fl(cool)r
Fp(j)p Fl(n)p Fq(\))19 b Fl(P)12 b Fq(\()p Fl(hig)s(h)p
Fp(j)p Fl(n)p Fq(\))19 b Fl(P)12 b Fq(\()p Fl(str)r(ong)s
Fp(j)p Fl(n)p Fq(\))25 b(=)f Fl(:)p Fq(021)762 1815 y
Fp(!)g Fl(v)914 1828 y Fj(N)7 b(B)1042 1815 y Fq(=)24
b Fl(n)0 2748 y Fo(148)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q
(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 149 23
149 24 bop 25 160 a Fr(Naiv)m(e)40 b(Ba)m(y)m(es:)52
b(Subtletie)q(s)1299 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1299 160 a 0 321 1947 2 v
0 474 a
0 0 0 setrgbcolor
 0 474 a 16 592 a Fq(1.)21 b(Conditional)32 b(indep)r(endence)e
(assumption)e(is)i(often)104 696 y(violated)467 850 y
Fl(P)12 b Fq(\()p Fl(a)612 862 y Fg(1)645 850 y Fl(;)j(a)729
862 y Fg(2)776 850 y Fl(:)f(:)g(:)g(a)935 862 y Fj(n)974
850 y Fp(j)p Fl(v)1040 862 y Fj(j)1070 850 y Fq(\))24
b(=)1218 799 y Ff(Y)1234 908 y Fj(i)1285 850 y Fl(P)12
b Fq(\()p Fl(a)1430 862 y Fj(i)1454 850 y Fp(j)p Fl(v)1520
862 y Fj(j)1550 850 y Fq(\))131 1030 y Fp(\017)21 b Fq(...but)29
b(it)h(w)n(orks)e(surprisingly)j(w)n(ell)g(an)n(yw)n(a)n(y)-7
b(.)38 b(Note)195 1133 y(don't)29 b(need)g(estimated)g(p)r(osteriors)
1429 1112 y(^)1410 1133 y Fl(P)12 b Fq(\()p Fl(v)1552
1146 y Fj(j)1582 1133 y Fp(j)p Fl(x)p Fq(\))29 b(to)h(b)r(e)195
1237 y(correct;)f(need)g(only)h(that)104 1461 y(argmax)173
1526 y Fj(v)202 1538 y Fh(j)227 1526 y Fi(2)p Fj(V)417
1440 y Fq(^)398 1461 y Fl(P)12 b Fq(\()p Fl(v)540 1474
y Fj(j)571 1461 y Fq(\))619 1411 y Ff(Y)635 1519 y Fj(i)705
1440 y Fq(^)686 1461 y Fl(P)g Fq(\()p Fl(a)831 1474 y
Fj(i)855 1461 y Fp(j)p Fl(v)921 1474 y Fj(j)951 1461
y Fq(\))24 b(=)g(argmax)1168 1526 y Fj(v)1197 1538 y
Fh(j)1222 1526 y Fi(2)p Fj(V)1393 1461 y Fl(P)12 b Fq(\()p
Fl(v)1535 1474 y Fj(j)1566 1461 y Fq(\))p Fl(P)g Fq(\()p
Fl(a)1744 1474 y Fg(1)1792 1461 y Fl(:)i(:)g(:)h(;)f(a)1990
1474 y Fj(n)2028 1461 y Fp(j)p Fl(v)2094 1474 y Fj(j)2124
1461 y Fq(\))131 1774 y Fp(\017)21 b Fq(see)29 b([Domingos)f(&)h(P)n
(azzani,)g(1996])g(for)g(analysis)131 1899 y Fp(\017)21
b Fq(Naiv)n(e)30 b(Ba)n(y)n(es)e(p)r(osteriors)i(often)g(unrealistical)
q(l)q(y)195 2002 y(close)g(to)f(1)g(or)g(0)0 2748 y Fo(149)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 150 24
150 25 bop 25 160 a Fr(Naiv)m(e)40 b(Ba)m(y)m(es:)52
b(Subtletie)q(s)1299 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1299 160 a 0 321 1947 2 v
0 454 a
0 0 0 setrgbcolor
 0 454 a 16 552 a Fq(2.)21 b(what)29 b(if)h(none)f(of)g(the)g
(training)h(instances)h(with)104 656 y(target)f(v)-5
b(alue)30 b Fl(v)622 669 y Fj(j)680 656 y Fq(ha)n(v)n(e)f(attribute)i
(v)-5 b(alue)30 b Fl(a)1510 669 y Fj(i)1533 656 y Fq(?)38
b(Then)685 777 y(^)666 799 y Fl(P)12 b Fq(\()p Fl(a)811
812 y Fj(i)835 799 y Fp(j)p Fl(v)901 812 y Fj(j)930 799
y Fq(\))25 b(=)f(0,)k(and...)673 920 y(^)653 941 y Fl(P)13
b Fq(\()p Fl(v)796 954 y Fj(j)826 941 y Fq(\))874 891
y Ff(Y)890 999 y Fj(i)960 920 y Fq(^)941 941 y Fl(P)f
Fq(\()p Fl(a)1086 954 y Fj(i)1110 941 y Fp(j)p Fl(v)1176
954 y Fj(j)1206 941 y Fq(\))24 b(=)g(0)0 1123 y(T)n(ypical)31
b(solution)g(is)e(Ba)n(y)n(esian)h(estimate)f(for)1579
1102 y(^)1560 1123 y Fl(P)12 b Fq(\()p Fl(a)1705 1136
y Fj(i)1729 1123 y Fp(j)p Fl(v)1795 1136 y Fj(j)1825
1123 y Fq(\))620 1271 y(^)601 1293 y Fl(P)g Fq(\()p Fl(a)746
1306 y Fj(i)769 1293 y Fp(j)p Fl(v)835 1306 y Fj(j)865
1293 y Fq(\))25 b Fp( )1038 1235 y Fl(n)1090 1248 y Fj(c)1136
1235 y Fq(+)19 b Fl(mp)p 1038 1272 304 2 v 1073 1352
a(n)g Fq(+)g Fl(m)0 1455 y Fq(where)40 1586 y Fp(\017)i
Fl(n)28 b Fq(is)i(n)n(um)n(b)r(er)c(of)j(training)i(examples)e(for)g
(whic)n(h)104 1690 y Fl(v)e Fq(=)c Fl(v)305 1702 y Fj(j)335
1690 y Fq(,)40 1830 y Fp(\017)e Fl(n)156 1843 y Fj(c)212
1830 y Fq(n)n(um)n(b)r(er)27 b(of)i(examples)g(for)g(whic)n(h)g
Fl(v)e Fq(=)d Fl(v)1575 1843 y Fj(j)1633 1830 y Fq(and)104
1934 y Fl(a)g Fq(=)g Fl(a)309 1947 y Fj(i)40 2074 y Fp(\017)d
Fl(p)29 b Fq(is)g(prior)g(estimate)h(for)969 2052 y(^)950
2074 y Fl(P)12 b Fq(\()p Fl(a)1095 2087 y Fj(i)1119 2074
y Fp(j)p Fl(v)1185 2087 y Fj(j)1215 2074 y Fq(\))40 2214
y Fp(\017)21 b Fl(m)28 b Fq(is)i(w)n(eigh)n(t)f(giv)n(en)h(to)f(prior)g
(\(i.e.)40 b(n)n(um)n(b)r(er)27 b(of)104 2318 y(\\virtual")k
(examples\))0 2748 y Fo(150)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 151 25
151 26 bop 25 160 a Fr(Learning)41 b(to)g(Classify)f(T)-10
b(ext)1384 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1384 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 64 x Fq(Wh)n(y?)40 683 y Fp(\017)21 b Fq(Learn)28
b(whic)n(h)h(news)g(articles)j(are)c(of)h(in)n(terest)40
829 y Fp(\017)21 b Fq(Learn)28 b(to)h(classify)j(w)n(eb)c(pages)h(b)n
(y)g(topic)0 1024 y(Naiv)n(e)h(Ba)n(y)n(es)e(is)i(among)d(most)h
(e\013ectiv)n(e)j(algorithms)0 1177 y(What)f(attributes)g(shall)h(w)n
(e)d(use)h(to)g(represen)n(t)g(text)0 1281 y(do)r(cumen)n(ts??)0
2748 y Fo(151)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 152 26
152 27 bop 25 160 a Fr(Learning)41 b(to)g(Classify)f(T)-10
b(ext)1384 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1384 160 a 0 321 1947 2 v 0 465 a
0 0 0 setrgbcolor
 0
465 a 69 x Fq(T)j(arget)29 b(concept)h Fl(I)7 b(nter)r(esting)s
Fq(?)23 b(:)h Fl(D)r(ocument)g Fp(!)g(f)p Fq(+)p Fl(;)15
b Fp(\000g)16 682 y Fq(1.)21 b(Represen)n(t)29 b(eac)n(h)g(do)r(cumen)n
(t)f(b)n(y)g(v)n(ector)i(of)f(w)n(ords)131 825 y Fp(\017)21
b Fq(one)29 b(attribute)i(p)r(er)e(w)n(ord)f(p)r(osition)j(in)e(do)r
(cumen)n(t)16 968 y(2.)21 b(Learning:)38 b(Use)29 b(training)h
(examples)g(to)f(estimate)131 1111 y Fp(\017)21 b Fl(P)12
b Fq(\(+\))131 1233 y Fp(\017)21 b Fl(P)12 b Fq(\()p
Fp(\000)p Fq(\))131 1356 y Fp(\017)21 b Fl(P)12 b Fq(\()p
Fl(doc)p Fp(j)p Fq(+\))131 1478 y Fp(\017)21 b Fl(P)12
b Fq(\()p Fl(doc)p Fp(j\000)p Fq(\))0 1626 y(Naiv)n(e)30
b(Ba)n(y)n(es)e(conditional)k(indep)r(endence)e(assumption)326
1812 y Fl(P)12 b Fq(\()p Fl(doc)p Fp(j)p Fl(v)616 1825
y Fj(j)647 1812 y Fq(\))24 b(=)795 1738 y Fj(l)q(eng)r(th)p
Fg(\()p Fj(doc)p Fg(\))919 1762 y Ff(Y)897 1870 y Fj(i)p
Fg(=1)1111 1812 y Fl(P)12 b Fq(\()p Fl(a)1256 1825 y
Fj(i)1304 1812 y Fq(=)24 b Fl(w)1457 1825 y Fj(k)1491
1812 y Fp(j)p Fl(v)1557 1825 y Fj(j)1587 1812 y Fq(\))0
1985 y(where)29 b Fl(P)12 b Fq(\()p Fl(a)394 1998 y Fj(i)442
1985 y Fq(=)24 b Fl(w)595 1998 y Fj(k)629 1985 y Fp(j)p
Fl(v)695 1998 y Fj(j)725 1985 y Fq(\))29 b(is)h(probabilit)n(y)h(that)f
(w)n(ord)e(in)0 2089 y(p)r(osition)j Fl(i)d Fq(is)i Fl(w)535
2102 y Fj(k)570 2089 y Fq(,)e(giv)n(en)i Fl(v)889 2102
y Fj(j)0 2238 y Fq(one)f(more)e(assumption:)0 2342 y
Fl(P)12 b Fq(\()p Fl(a)145 2355 y Fj(i)193 2342 y Fq(=)24
b Fl(w)346 2355 y Fj(k)380 2342 y Fp(j)p Fl(v)446 2355
y Fj(j)476 2342 y Fq(\))h(=)e Fl(P)12 b Fq(\()p Fl(a)769
2355 y Fj(m)849 2342 y Fq(=)24 b Fl(w)1002 2355 y Fj(k)1037
2342 y Fp(j)p Fl(v)1103 2355 y Fj(j)1132 2342 y Fq(\))p
Fl(;)15 b Fp(8)p Fl(i;)e(m)0 2748 y Fo(152)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 153 27
153 28 bop 0 148 a Fe(Learn)p 271 148 29 2 v 34 w(naive)p
538 148 V 33 w(Ba)-6 b(yes)p 824 148 V 35 w(text)p Fq(\()p
Fl(E)5 b(xampl)r(es;)15 b(V)k Fq(\))78 283 y Fk(1.)40
b(c)l(ol)t(le)l(ct)28 b(al)t(l)j(wor)l(ds)f(and)h(other)f(tokens)f
(that)h(o)l(c)l(cur)f(in)104 386 y Fl(E)5 b(xampl)r(es)40
526 y Fp(\017)21 b Fl(V)e(ocabul)r(ar)r(y)28 b Fp( )h
Fq(all)i(distinct)g(w)n(ords)d(and)g(other)104 630 y(tok)n(ens)h(in)h
Fl(E)5 b(xampl)r(es)78 769 y Fk(2.)40 b(c)l(alculate)30
b(the)g(r)l(e)l(quir)l(e)l(d)f Fl(P)12 b Fq(\()p Fl(v)1147
782 y Fj(j)1177 769 y Fq(\))32 b Fk(and)f Fl(P)12 b Fq(\()p
Fl(w)1571 782 y Fj(k)1606 769 y Fp(j)p Fl(v)1672 782
y Fj(j)1702 769 y Fq(\))104 873 y Fk(pr)l(ob)l(ability)30
b(terms)40 1013 y Fp(\017)21 b Fq(F)-7 b(or)28 b(eac)n(h)h(target)h(v)
-5 b(alue)30 b Fl(v)970 1026 y Fj(j)1029 1013 y Fq(in)f
Fl(V)48 b Fq(do)125 1152 y Fb({)21 b Fl(docs)359 1165
y Fj(j)413 1152 y Fp( )29 b Fq(subset)g(of)g Fl(E)5 b(xampl)r(es)29
b Fq(for)g(whic)n(h)g(the)195 1256 y(target)h(v)-5 b(alue)30
b(is)g Fl(v)800 1269 y Fj(j)125 1390 y Fb({)21 b Fl(P)12
b Fq(\()p Fl(v)337 1403 y Fj(j)368 1390 y Fq(\))24 b
Fp( )606 1345 y Fi(j)p Fj(docs)737 1357 y Fh(j)762 1345
y Fi(j)p 540 1370 304 2 v 540 1420 a(j)p Fj(E)s(xampl)q(es)p
Fi(j)125 1514 y Fb({)d Fl(T)12 b(ext)377 1527 y Fj(j)432
1514 y Fp( )29 b Fq(a)f(single)j(do)r(cumen)n(t)d(created)i(b)n(y)195
1618 y(concatenating)h(all)g(mem)n(b)r(ers)26 b(of)j
Fl(docs)1491 1631 y Fj(j)125 1737 y Fb({)21 b Fl(n)j
Fp( )k Fq(total)j(n)n(um)n(b)r(er)26 b(of)j(w)n(ords)f(in)h
Fl(T)12 b(ext)1531 1750 y Fj(j)1591 1737 y Fq(\(coun)n(ting)195
1840 y(duplicate)31 b(w)n(ords)d(m)n(ultiple)i(times\))125
1959 y Fb({)21 b Fq(for)29 b(eac)n(h)g(w)n(ord)f Fl(w)796
1972 y Fj(k)859 1959 y Fq(in)i Fl(V)19 b(ocabul)r(ar)r(y)209
2078 y Fp(\003)i Fl(n)325 2091 y Fj(k)383 2078 y Fp( )29
b Fq(n)n(um)n(b)r(er)e(of)i(times)g(w)n(ord)f Fl(w)1415
2091 y Fj(k)1478 2078 y Fq(o)r(ccurs)h(in)273 2182 y
Fl(T)12 b(ext)455 2195 y Fj(j)209 2293 y Fp(\003)21 b
Fl(P)12 b Fq(\()p Fl(w)435 2306 y Fj(k)470 2293 y Fp(j)p
Fl(v)536 2306 y Fj(j)566 2293 y Fq(\))24 b Fp( )878 2255
y Fj(n)914 2269 y Fh(k)943 2255 y Fg(+1)p 738 2272 421
2 v 738 2323 a Fj(n)p Fg(+)p Fi(j)p Fj(V)13 b(ocabul)q(ar)r(y)r
Fi(j)0 2748 y Fo(153)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 154 28
154 29 bop 0 148 a Fe(Classify)p 374 148 29 2 v 35 w(naive)p
642 148 V 33 w(Ba)-6 b(yes)p 928 148 V 35 w(text)p Fq(\()p
Fl(D)r(oc)p Fq(\))40 305 y Fp(\017)21 b Fl(positions)i
Fp( )29 b Fq(all)i(w)n(ord)d(p)r(ositions)j(in)e Fl(D)r(oc)h
Fq(that)104 409 y(con)n(tain)f(tok)n(ens)h(found)e(in)i
Fl(V)19 b(ocabul)r(ar)r(y)40 554 y Fp(\017)i Fq(Return)29
b Fl(v)439 567 y Fj(N)7 b(B)544 554 y Fq(,)28 b(where)329
708 y Fl(v)371 721 y Fj(N)7 b(B)500 708 y Fq(=)24 b(argmax)660
772 y Fj(v)689 785 y Fh(j)714 772 y Fi(2)p Fj(V)885 708
y Fl(P)12 b Fq(\()p Fl(v)1027 721 y Fj(j)1058 708 y Fq(\))1231
657 y Ff(Y)1106 766 y Fj(i)p Fi(2)p Fj(positions)1423
708 y Fl(P)g Fq(\()p Fl(a)1568 721 y Fj(i)1592 708 y
Fp(j)p Fl(v)1658 721 y Fj(j)1688 708 y Fq(\))0 2748 y
Fo(154)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 155 29
155 30 bop 25 160 a Fr(Tw)m(en)m(t)m(y)38 b(NewsGroups)1152
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1152 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(Giv)n(en)29 b(1000)g(training)i(do)r(cumen)n(ts)d(from)f(eac)n(h)i
(group)0 642 y(Learn)f(to)i(classify)h(new)e(do)r(cumen)n(ts)f
(according)i(to)0 746 y(whic)n(h)f(newsgroup)g(it)h(came)e(from)353
943 y(comp.graphics)386 b(misc.forsale)136 1047 y(comp.os.ms-windo)n
(ws.m)o(isc)217 b(rec.autos)127 1151 y(comp.sys.ibm.p)r(c.hardw)n(are)
86 b(rec.motorcycles)178 1254 y(comp.sys.mac.hardw)n(are)99
b(rec.sp)r(ort.baseball)315 1358 y(comp.windo)n(ws.x)261
b(rec.sp)r(ort.ho)r(c)n(k)n(ey)413 1566 y(alt.atheism)504
b(sci.space)238 1670 y(so)r(c.religion.c)n(hrist)q(i)q(an)332
b(sci.crypt)302 1773 y(talk.religi)q(on.misc)298 b(sci.elect)q(ronics)
243 1877 y(talk.p)r(oli)q(ti)q(c)q(s.mideast)357 b(sci.med)305
1981 y(talk.p)r(oli)q(t)q(i)q(cs.misc)303 2085 y(talk.p)r(oli)q(ti)q
(cs.guns)0 2288 y(Naiv)n(e)30 b(Ba)n(y)n(es:)38 b(89\045)28
b(classi\014cati)q(on)j(accuracy)0 2748 y Fo(155)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 156 30
156 31 bop 25 160 a Fr(Article)42 b(from)e(rec.sp)s(ort.ho)s(c)m(k)m
(ey)1593 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1593 160 a 0 321 1947 2 v 0 456 a
0 0 0 setrgbcolor
 0 456
a 92 x Fa(Path:)46 b(cantaloupe.srv.cs)q(.cmu.)q(edu!d)q(as-ne)q(ws.ha)
q(rvard)q(.edu!)q(ogics)q(e!uwm)q(.edu)0 651 y(From:)g(xxx@yyy.zzz.edu)
i(\(John)f(Doe\))0 755 y(Subject:)g(Re:)f(This)g(year's)g(biggest)h
(and)e(worst)i(\(opinion\)...)0 859 y(Date:)f(5)g(Apr)f(93)h(09:53:39)h
(GMT)0 1066 y(I)e(can)h(only)g(comment)h(on)e(the)h(Kings,)h(but)e(the)
h(most)0 1170 y(obvious)h(candidate)g(for)e(pleasant)i(surprise)g(is)f
(Alex)0 1274 y(Zhitnik.)h(He)e(came)h(highly)h(touted)f(as)g(a)f
(defensive)0 1378 y(defenseman,)i(but)f(he's)g(clearly)h(much)f(more)g
(than)g(that.)0 1482 y(Great)g(skater)h(and)e(hard)h(shot)g(\(though)h
(wish)f(he)g(were)0 1585 y(more)g(accurate\).)h(In)f(fact,)g(he)g
(pretty)g(much)g(allowed)0 1689 y(the)g(Kings)g(to)g(trade)g(away)g
(that)g(huge)g(defensive)0 1793 y(liability)h(Paul)f(Coffey.)h(Kelly)f
(Hrudey)g(is)g(only)g(the)0 1897 y(biggest)h(disappointment)h(if)d(you)
h(thought)h(he)e(was)h(any)0 2000 y(good)g(to)g(begin)g(with.)g(But,)g
(at)g(best,)g(he's)g(only)g(a)0 2104 y(mediocre)h(goaltender.)g(A)f
(better)g(choice)g(would)h(be)0 2208 y(Tomas)f(Sandstrom,)h(though)g
(not)f(through)g(any)g(fault)g(of)0 2312 y(his)g(own,)g(but)g(because)g
(some)g(thugs)g(in)g(Toronto)h(decided)0 2748 y Fo(156)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 157 31
157 32 bop 25 160 a Fr(Learning)41 b(Curv)m(e)e(for)i(20)f(Newsgroups)
1884 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1884 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
73 478 a
 28417720 19608225 3289088 3289088 17497948 13222133 startTexFig
 73 478 a
%%BeginDocument: ./pictures/bayes-text-results.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
672 211 M
3417 0 V
LTb
LTa
672 211 M
3417 0 V
LTb
672 211 M
63 0 V
3354 0 R
-63 0 V
588 211 M
(0) Rshow
LTa
672 471 M
3417 0 V
LTb
672 471 M
63 0 V
3354 0 R
-63 0 V
588 471 M
(10) Rshow
LTa
672 731 M
3417 0 V
LTb
672 731 M
63 0 V
3354 0 R
-63 0 V
588 731 M
(20) Rshow
LTa
672 992 M
3417 0 V
LTb
672 992 M
63 0 V
3354 0 R
-63 0 V
588 992 M
(30) Rshow
LTa
672 1252 M
3417 0 V
LTb
672 1252 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(40) Rshow
LTa
672 1512 M
3417 0 V
LTb
672 1512 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(50) Rshow
LTa
672 1772 M
3417 0 V
LTb
672 1772 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(60) Rshow
LTa
672 2032 M
3417 0 V
LTb
672 2032 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(70) Rshow
LTa
672 2293 M
3417 0 V
LTb
672 2293 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(80) Rshow
LTa
672 2553 M
3417 0 V
LTb
672 2553 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(90) Rshow
LTa
672 2813 M
3417 0 V
LTb
672 2813 M
63 0 V
3354 0 R
-63 0 V
-3438 0 R
(100) Rshow
LTa
672 211 M
0 2602 V
LTb
672 211 M
0 31 V
0 2571 R
0 -31 V
LTa
797 211 M
0 2602 V
LTb
797 211 M
0 31 V
0 2571 R
0 -31 V
LTa
899 211 M
0 2602 V
LTb
899 211 M
0 31 V
0 2571 R
0 -31 V
LTa
985 211 M
0 2602 V
LTb
985 211 M
0 31 V
0 2571 R
0 -31 V
LTa
1060 211 M
0 2602 V
LTb
1060 211 M
0 31 V
0 2571 R
0 -31 V
LTa
1126 211 M
0 2602 V
LTb
1126 211 M
0 31 V
0 2571 R
0 -31 V
LTa
1184 211 M
0 2602 V
LTb
1184 211 M
0 63 V
0 2539 R
0 -63 V
1184 71 M
(100) Cshow
LTa
1572 211 M
0 2602 V
LTb
1572 211 M
0 31 V
0 2571 R
0 -31 V
LTa
1799 211 M
0 2602 V
LTb
1799 211 M
0 31 V
0 2571 R
0 -31 V
LTa
1960 211 M
0 2602 V
LTb
1960 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2085 211 M
0 2602 V
LTb
2085 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2187 211 M
0 2602 V
LTb
2187 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2273 211 M
0 2602 V
LTb
2273 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2348 211 M
0 2602 V
LTb
2348 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2413 211 M
0 2602 V
LTb
2413 211 M
0 31 V
0 2571 R
0 -31 V
LTa
2472 211 M
0 2602 V
LTb
2472 211 M
0 63 V
0 2539 R
0 -63 V
2472 71 M
(1000) Cshow
LTa
2860 211 M
0 2602 V
LTb
2860 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3087 211 M
0 2602 V
LTb
3087 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3248 211 M
0 2602 V
LTb
3248 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3373 211 M
0 2602 V
LTb
3373 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3475 211 M
0 2602 V
LTb
3475 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3561 211 M
0 2602 V
LTb
3561 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3635 211 M
0 2602 V
LTb
3635 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3701 211 M
0 2602 V
LTb
3701 211 M
0 31 V
0 2571 R
0 -31 V
LTa
3760 211 M
0 2602 V
LTb
3760 211 M
0 63 V
0 2539 R
0 -63 V
3760 71 M
(10000) Cshow
672 211 M
3417 0 V
0 2602 V
-3417 0 V
672 211 L
2380 2953 M
(20News) Cshow
LT0
3373 2032 M
(Bayes) Rshow
3457 2032 M
252 0 V
672 773 M
893 958 L
396 224 V
384 346 V
390 307 V
386 234 V
411 187 V
513 159 V
387 99 V
329 41 V
3541 2032 D
893 958 D
1289 1182 D
1673 1528 D
2063 1835 D
2449 2069 D
2860 2256 D
3373 2415 D
3760 2514 D
4089 2555 D
LT1
3373 1892 M
(TFIDF) Rshow
3457 1892 M
252 0 V
672 847 M
221 238 V
396 214 V
384 354 V
390 241 V
386 196 V
411 99 V
513 111 V
387 68 V
329 -8 V
3541 1892 A
893 1085 A
1289 1299 A
1673 1653 A
2063 1894 A
2449 2090 A
2860 2189 A
3373 2300 A
3760 2368 A
4089 2360 A
LT2
3373 1752 M
(PRTFIDF) Rshow
3457 1752 M
252 0 V
672 816 M
221 243 V
396 214 V
384 429 V
390 273 V
386 206 V
411 148 V
513 148 V
387 81 V
329 34 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 -34 1824 a Fq(Accuracy)30 b(vs.)38 b(T)-7 b(raining)30
b(set)g(size)g(\(1/3)f(withheld)i(for)e(test\))0 2748
y Fo(157)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 158 32
158 33 bop 25 160 a Fr(Ba)m(y)m(esian)40 b(Belief)j(Net)m(w)m(orks)1386
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1386 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(In)n(teresting)30 b(b)r(ecause:)40 683 y Fp(\017)21
b Fq(Naiv)n(e)29 b(Ba)n(y)n(es)g(assumption)f(of)h(conditional)104
787 y(indep)r(endence)h(to)r(o)g(restrictiv)n(e)40 933
y Fp(\017)21 b Fq(But)29 b(it's)h(in)n(tractable)h(without)f(some)e
(suc)n(h)104 1036 y(assumptions...)40 1182 y Fp(\017)21
b Fq(Ba)n(y)n(esian)29 b(Belief)j(net)n(w)n(orks)c(describ)r(e)i
(conditional)104 1285 y(indep)r(endence)g(among)d Fk(subsets)i
Fq(of)g(v)-5 b(ariables)-3 1431 y Fp(!)21 b Fq(allo)n(ws)30
b(com)n(bining)f(prior)g(kno)n(wledge)h(ab)r(out)104
1534 y(\(in\)dep)r(endencies)i(among)27 b(v)-5 b(ariables)31
b(with)f(observ)n(ed)104 1638 y(training)g(data)0 1833
y(\(also)g(called)h(Ba)n(y)n(es)e(Nets\))0 2748 y Fo(158)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 159 33
159 34 bop 25 160 a Fr(Conditional)43 b(Indep)s(endence)1424
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1424 160 a 0 321 1947 2 v 0 463 a
0 0 0 setrgbcolor
 0 463 a 104 570
a Fb(De\014nition:)d Fl(X)35 b Fq(is)29 b Fk(c)l(onditional)t(ly)h
(indep)l(endent)e Fq(of)104 673 y Fl(Y)48 b Fq(giv)n(en)29
b Fl(Z)35 b Fq(if)30 b(the)f(probabilit)n(y)i(distribution)104
777 y(go)n(v)n(erning)e Fl(X)36 b Fq(is)29 b(indep)r(enden)n(t)h(of)f
(the)g(v)-5 b(alue)31 b(of)e Fl(Y)104 881 y Fq(giv)n(en)h(the)f(v)-5
b(alue)30 b(of)f Fl(Z)6 b Fq(;)29 b(that)g(is,)h(if)104
1025 y(\()p Fp(8)p Fl(x)235 1038 y Fj(i)257 1025 y Fl(;)14
b(y)337 1038 y Fj(j)368 1025 y Fl(;)g(z)446 1038 y Fj(k)481
1025 y Fq(\))20 b Fl(P)12 b Fq(\()p Fl(X)31 b Fq(=)24
b Fl(x)876 1038 y Fj(i)899 1025 y Fp(j)p Fl(Y)43 b Fq(=)24
b Fl(y)1149 1038 y Fj(j)1179 1025 y Fl(;)14 b(Z)30 b
Fq(=)24 b Fl(z)1437 1038 y Fj(k)1472 1025 y Fq(\))h(=)f
Fl(P)12 b Fq(\()p Fl(X)31 b Fq(=)24 b Fl(x)1963 1038
y Fj(i)1986 1025 y Fp(j)p Fl(Z)30 b Fq(=)24 b Fl(z)2230
1038 y Fj(k)2265 1025 y Fq(\))104 1168 y(more)j(compactly)-7
b(,)30 b(w)n(e)e(write)568 1312 y Fl(P)12 b Fq(\()p Fl(X)7
b Fp(j)p Fl(Y)e(;)15 b(Z)6 b Fq(\))24 b(=)g Fl(P)12 b
Fq(\()p Fl(X)7 b Fp(j)p Fl(Z)f Fq(\))0 1565 y(Example:)38
b Fl(T)12 b(hunder)31 b Fq(is)e(conditionall)q(y)j(indep)r(enden)n(t)e
(of)0 1669 y Fl(R)q(ain)p Fq(,)e(giv)n(en)i Fl(Lig)s(htning)0
1813 y(P)12 b Fq(\()p Fl(T)g(hunder)r Fp(j)p Fl(R)q(ain;)j(Lig)s
(htning)s Fq(\))22 b(=)i Fl(P)12 b Fq(\()p Fl(T)g(hunder)r
Fp(j)p Fl(Lig)s(htning)s Fq(\))0 2045 y(Naiv)n(e)30 b(Ba)n(y)n(es)e
(uses)h(cond.)38 b(indep.)h(to)29 b(justify)353 2188
y Fl(P)12 b Fq(\()p Fl(X)r(;)k(Y)j Fp(j)p Fl(Z)6 b Fq(\))42
b(=)f Fl(P)12 b Fq(\()p Fl(X)7 b Fp(j)p Fl(Y)e(;)15 b(Z)6
b Fq(\))p Fl(P)12 b Fq(\()p Fl(Y)20 b Fp(j)p Fl(Z)6 b
Fq(\))799 2305 y(=)41 b Fl(P)12 b Fq(\()p Fl(X)7 b Fp(j)p
Fl(Z)f Fq(\))p Fl(P)12 b Fq(\()p Fl(Y)21 b Fp(j)p Fl(Z)6
b Fq(\))0 2748 y Fo(159)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q
(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 160 34
160 35 bop 25 160 a Fr(Ba)m(y)m(esian)40 b(Belief)j(Net)m(w)m(ork)1339
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1339 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a -77 478
a
 33154007 12930060 855162 263127 31312117 12235407 startTexFig
 -77 478 a
%%BeginDocument: ./bookps/bayesnet.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Italic reencodeISO def
/Times-Roman reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -22 -29.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 123.5 -29.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 87.5 -117.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -67.5 -205.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 78 -205.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -81 -117.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
131 205 91 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
171 205 259 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
291 205 259 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
91 117 99 77 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
259 117 251 77 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 339.5 -174 ] concat
%I
147 237 48 24 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -48.5 -12.9999 ] concat
%I
427 101 643 181 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 108.5 213 ] concat
%I
[
(Storm)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 208 125 ] concat
%I
[
(Campfire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 39.5 125 ] concat
%I
[
(Lightning)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 56 37 ] concat
%I
[
(Thunder)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 193.5 37 ] concat
%I
[
(ForestFire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 460 68.5 ] concat
%I
[
(Campfire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 394.5 134 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 386.5 110 ] concat
%I
[
(\254C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 506.5 158 ] concat
%I
[
(\254S,B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 546.5 158 ] concat
%I
[
(\254S,\254B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 434.5 134 ] concat
%I
[
(0.4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 434.5 110 ] concat
%I
[
(0.6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 474.5 134 ] concat
%I
[
(0.1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 474.5 110 ] concat
%I
[
(0.9)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 514.5 134 ] concat
%I
[
(0.8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 514.5 110 ] concat
%I
[
(0.2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 562.5 134 ] concat
%I
[
(0.2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 562.5 110 ] concat
%I
[
(0.8)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -42 -6 ] concat
%I
106 102 257 61 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -42 -6 ] concat
%I
168 189 261 61 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 466.5 158 ] concat
%I
[
(S,\254B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 229 213 ] concat
%I
[
(BusTourGroup)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 432.5 158 ] concat
%I
[
(S,B)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 1401 a Fq(Net)n(w)n(ork)29 b(represen)n(ts)f(a)h(set)g(of)g
(conditional)0 1505 y(indep)r(endence)h(assertions:)40
1663 y Fp(\017)21 b Fq(Eac)n(h)28 b(no)r(de)h(is)g(asserted)h(to)f(b)r
(e)g(conditionall)q(y)104 1766 y(indep)r(enden)n(t)h(of)f(its)h
(nondescendan)n(ts,)e(giv)n(en)i(its)104 1870 y(immediate)f
(predecessors.)40 2016 y Fp(\017)21 b Fq(Directed)30
b(acyclic)i(graph)0 2748 y Fo(160)334 b(lecture)17 b(slides)f(for)f
(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o
(hell,)h(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 161 35
161 36 bop 25 160 a Fr(Ba)m(y)m(esian)40 b(Belief)j(Net)m(w)m(ork)1339
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1339 160 a 0 321 1947 2 v 0 441 a
0 0 0 setrgbcolor
 0 441 a -77 446
a
 33154007 12930060 855162 263127 31312117 12235407 startTexFig
 -77 446 a
%%BeginDocument: ./bookps/bayesnet.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Times-Italic reencodeISO def
/Times-Roman reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -22 -29.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 123.5 -29.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 87.5 -117.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -67.5 -205.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 78 -205.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -81 -117.5 ] concat
%I
147 237 48 24 Elli
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
131 205 91 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
171 205 259 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
291 205 259 165 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
91 117 99 77 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -27 -21 ] concat
%I
259 117 251 77 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 339.5 -174 ] concat
%I
147 237 48 24 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -48.5 -12.9999 ] concat
%I
427 101 643 181 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 108.5 213 ] concat
%I
[
(Storm)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 208 125 ] concat
%I
[
(Campfire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 39.5 125 ] concat
%I
[
(Lightning)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 56 37 ] concat
%I
[
(Thunder)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 193.5 37 ] concat
%I
[
(ForestFire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 460 68.5 ] concat
%I
[
(Campfire)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 394.5 134 ] concat
%I
[
(C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 386.5 110 ] concat
%I
[
(\254C)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 506.5 158 ] concat
%I
[
(\254S,B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 546.5 158 ] concat
%I
[
(\254S,\254B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 434.5 134 ] concat
%I
[
(0.4)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 434.5 110 ] concat
%I
[
(0.6)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 474.5 134 ] concat
%I
[
(0.1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 474.5 110 ] concat
%I
[
(0.9)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 514.5 134 ] concat
%I
[
(0.8)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 514.5 110 ] concat
%I
[
(0.2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 562.5 134 ] concat
%I
[
(0.2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-r-normal-*-14-*-*-*-*-*-*-*
Times-Roman 14 SetF
%I t
[ 1 0 0 1 562.5 110 ] concat
%I
[
(0.8)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -42 -6 ] concat
%I
106 102 257 61 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -42 -6 ] concat
%I
168 189 261 61 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 466.5 158 ] concat
%I
[
(S,\254B)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 229 213 ] concat
%I
[
(BusTourGroup)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 432.5 158 ] concat
%I
[
(S,B)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 1368 a Fq(Represen)n(ts)29 b(join)n(t)h(probabilit)n(y)h
(distribution)h(o)n(v)n(er)c(all)0 1472 y(v)-5 b(ariables)40
1593 y Fp(\017)21 b Fq(e.g.,)29 b Fl(P)12 b Fq(\()p Fl(S)5
b(tor)r(m;)14 b(B)t(usT)e(our)r(Gr)r(oup;)k(:)e(:)h(:)f(;)g(F)e(or)r
(estF)g(ir)r(e)p Fq(\))40 1730 y Fp(\017)21 b Fq(in)29
b(general,)332 1865 y Fl(P)12 b Fq(\()p Fl(y)474 1878
y Fg(1)507 1865 y Fl(;)j(:)f(:)g(:)g(;)h(y)741 1878 y
Fj(n)779 1865 y Fq(\))24 b(=)958 1802 y Fj(n)949 1814
y Ff(Y)927 1923 y Fj(i)p Fg(=1)1038 1865 y Fl(P)12 b
Fq(\()p Fl(y)1180 1878 y Fj(i)1204 1865 y Fp(j)p Fl(P)g(ar)r(ents)p
Fq(\()p Fl(Y)1627 1878 y Fj(i)1651 1865 y Fq(\)\))104
2017 y(where)29 b Fl(P)12 b(ar)r(ents)p Fq(\()p Fl(Y)752
2029 y Fj(i)776 2017 y Fq(\))29 b(denotes)h(immediate)104
2120 y(predecessors)f(of)g Fl(Y)742 2133 y Fj(i)793 2120
y Fq(in)g(graph)40 2257 y Fp(\017)21 b Fq(so,)28 b(join)n(t)i
(distribution)i(is)d(fully)i(de\014ned)e(b)n(y)g(graph,)104
2361 y(plus)g(the)g Fl(P)12 b Fq(\()p Fl(y)576 2374 y
Fj(i)600 2361 y Fp(j)p Fl(P)g(ar)r(ents)p Fq(\()p Fl(Y)1023
2374 y Fj(i)1047 2361 y Fq(\)\))0 2748 y Fo(161)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 162 36
162 37 bop 25 160 a Fr(Inference)41 b(in)f(Ba)m(y)m(esian)g(Net)m(w)m
(orks)1707 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1707 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 69 x Fq(Ho)n(w)28 b(can)h(one)g(infer)h(the)f(\(probabiliti)q(es)
j(of)7 b(\))29 b(v)-5 b(alues)30 b(of)0 647 y(one)f(or)f(more)g(net)n
(w)n(ork)h(v)-5 b(ariables,)31 b(giv)n(en)e(observ)n(ed)0
751 y(v)-5 b(alues)30 b(of)f(others?)40 908 y Fp(\017)21
b Fq(Ba)n(y)n(es)28 b(net)i(con)n(tains)f(all)i(information)e(needed)g
(for)104 1012 y(this)h(inference)40 1157 y Fp(\017)21
b Fq(If)29 b(only)h(one)f(v)-5 b(ariable)31 b(with)f(unkno)n(wn)e(v)-5
b(alue,)30 b(easy)g(to)104 1261 y(infer)g(it)40 1406
y Fp(\017)21 b Fq(In)28 b(general)i(case,)f(problem)f(is)i(NP)e(hard)0
1564 y(In)h(practice,)h(can)f(succeed)g(in)h(man)n(y)d(cases)40
1709 y Fp(\017)21 b Fq(Exact)29 b(inference)i(metho)r(ds)d(w)n(ork)h(w)
n(ell)h(for)f(some)104 1813 y(net)n(w)n(ork)g(structures)40
1959 y Fp(\017)21 b Fq(Mon)n(te)29 b(Carlo)g(metho)r(ds)f(\\sim)n
(ulate")i(the)f(net)n(w)n(ork)104 2062 y(randomly)f(to)h(calculate)j
(appro)n(ximate)d(solutions)0 2748 y Fo(162)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 163 37
163 38 bop 25 160 a Fr(Learning)41 b(of)g(Ba)m(y)m(esian)f(Net)m(w)m
(orks)1683 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1683 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 64 x Fq(Sev)n(eral)30 b(v)-5 b(arian)n(ts)30 b(of)f(this)h
(learning)g(task)40 696 y Fp(\017)21 b Fq(Net)n(w)n(ork)28
b(structure)i(migh)n(t)e(b)r(e)h Fk(known)g Fq(or)g Fk(unknown)40
841 y Fp(\017)21 b Fq(T)-7 b(raining)30 b(examples)f(migh)n(t)f(pro)n
(vide)i(v)-5 b(alues)30 b(of)f Fk(al)t(l)104 945 y Fq(net)n(w)n(ork)g
(v)-5 b(ariables,)31 b(or)d(just)h Fk(some)0 1103 y Fq(If)g(structure)g
(kno)n(wn)g(and)f(observ)n(e)h(all)i(v)-5 b(ariables)40
1248 y Fp(\017)21 b Fq(Then)26 b(it's)h(easy)g(as)f(training)h(a)f
(Naiv)n(e)h(Ba)n(y)n(es)f(classi\014er)0 2748 y Fo(163)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 164 38
164 39 bop 25 160 a Fr(Learning)41 b(Ba)m(y)m(es)f(Nets)1141
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1141 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fq(Supp)r(ose)29 b(structure)g(kno)n(wn,)f(v)-5 b(ariables)32
b(partially)0 642 y(observ)-5 b(able)0 796 y(e.g.,)29
b(observ)n(e)g Fk(F)-7 b(or)l(estFir)l(e,)31 b(Storm,)h(BusT)-7
b(ourGr)l(oup,)0 899 y(Thunder)p Fq(,)29 b(but)g(not)g
Fk(Lightning,)i(Camp\014r)l(e)p Fq(...)40 1057 y Fp(\017)21
b Fq(Similar)30 b(to)f(training)h(neural)g(net)n(w)n(ork)e(with)j
(hidden)104 1161 y(units)40 1306 y Fp(\017)21 b Fq(In)28
b(fact,)i(can)f(learn)g(net)n(w)n(ork)g(conditional)104
1410 y(probabilit)n(y)i(tables)f(using)g(gradien)n(t)f(ascen)n(t!)40
1555 y Fp(\017)21 b Fq(Con)n(v)n(erge)28 b(to)i(net)n(w)n(ork)f
Fl(h)f Fq(that)h(\(lo)r(call)q(y)q(\))j(maximizes)104
1659 y Fl(P)12 b Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\))0
2748 y Fo(164)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 165 39
165 40 bop 25 160 a Fr(Gradien)m(t)41 b(Ascen)m(t)e(for)h(Ba)m(y)m(es)g
(Nets)1723 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1723 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 64 x Fq(Let)29 b Fl(w)216 551 y Fj(ij)s(k)328 538
y Fq(denote)h(one)f(en)n(try)g(in)g(the)g(conditional)0
642 y(probabilit)n(y)i(table)g(for)d(v)-5 b(ariable)31
b Fl(Y)1160 655 y Fj(i)1212 642 y Fq(in)e(the)g(net)n(w)n(ork)0
796 y Fl(w)62 808 y Fj(ij)s(k)169 796 y Fq(=)24 b Fl(P)12
b Fq(\()p Fl(Y)410 808 y Fj(i)457 796 y Fq(=)24 b Fl(y)590
808 y Fj(ij)641 796 y Fp(j)p Fl(P)12 b(ar)r(ents)p Fq(\()p
Fl(Y)1064 808 y Fj(i)1088 796 y Fq(\))25 b(=)f(the)29
b(list)i Fl(u)1578 808 y Fj(ik)1663 796 y Fq(of)e(v)-5
b(alues\))0 949 y(e.g.,)29 b(if)h Fl(Y)311 962 y Fj(i)357
949 y Fq(=)24 b Fl(C)6 b(ampf)j(ir)r(e)p Fq(,)29 b(then)g
Fl(u)1140 962 y Fj(ik)1225 949 y Fq(migh)n(t)f(b)r(e)0
1053 y Fp(h)p Fl(S)5 b(tor)r(m)24 b Fq(=)g Fl(T)7 b(;)14
b(B)t(usT)e(our)r(Gr)r(oup)26 b Fq(=)e Fl(F)12 b Fp(i)0
1207 y Fq(P)n(erform)27 b(gradien)n(t)i(ascen)n(t)g(b)n(y)g(rep)r
(eatedly)16 1352 y(1.)21 b(up)r(date)29 b(all)i Fl(w)575
1365 y Fj(ij)s(k)687 1352 y Fq(using)e(training)i(data)e
Fl(D)425 1553 y(w)487 1566 y Fj(ij)s(k)595 1553 y Fp( )24
b Fl(w)767 1566 y Fj(ij)s(k)869 1553 y Fq(+)19 b Fl(\021)1046
1503 y Ff(X)1015 1613 y Fj(d)p Fi(2)p Fj(D)1157 1495
y Fl(P)1212 1508 y Fj(h)1249 1495 y Fq(\()p Fl(y)1324
1508 y Fj(ij)1375 1495 y Fl(;)14 b(u)1462 1508 y Fj(ik)1518
1495 y Fp(j)p Fl(d)p Fq(\))p 1157 1532 464 2 v 1316 1612
a Fl(w)1378 1625 y Fj(ij)s(k)16 1771 y Fq(2.)21 b(then,)29
b(renormalize)g(the)g Fl(w)998 1784 y Fj(ij)s(k)1111
1771 y Fq(to)g(assure)131 1917 y Fp(\017)195 1874 y Ff(P)239
1929 y Fj(j)283 1917 y Fl(w)345 1929 y Fj(ij)s(k)453
1917 y Fq(=)24 b(1)131 2041 y Fp(\017)d Fq(0)j Fp(\024)g
Fl(w)415 2054 y Fj(ij)s(k)522 2041 y Fp(\024)g Fq(1)0
2748 y Fo(165)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 166 40
166 41 bop 25 160 a Fr(More)40 b(on)g(Learning)h(Ba)m(y)m(es)f(Nets)
1621 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1621 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
64 x Fq(EM)28 b(algorithm)i(can)e(also)i(b)r(e)f(used.)38
b(Rep)r(eatedly)q(:)16 683 y(1.)21 b(Calculate)31 b(probabiliti)q(es)h
(of)d(unobserv)n(ed)f(v)-5 b(ariables,)104 787 y(assuming)28
b Fl(h)16 933 y Fq(2.)21 b(Calculate)31 b(new)e Fl(w)725
945 y Fj(ij)s(k)837 933 y Fq(to)h(maximize)f Fl(E)5 b
Fq([ln)14 b Fl(P)e Fq(\()p Fl(D)r Fp(j)p Fl(h)p Fq(\)])104
1036 y(where)29 b Fl(D)i Fq(no)n(w)d(includes)j(b)r(oth)e(observ)n(ed)g
(and)104 1140 y(\(calculated)h(probabilitie)q(s)g(of)7
b(\))27 b(unobserv)n(ed)g(v)-5 b(ariables)0 1385 y(When)29
b(structure)g(unkno)n(wn...)40 1530 y Fp(\017)21 b Fq(Algorithms)29
b(use)f(greedy)i(searc)n(h)e(to)h(add/substract)104 1634
y(edges)g(and)f(no)r(des)40 1779 y Fp(\017)21 b Fq(Activ)n(e)30
b(researc)n(h)e(topic)0 2748 y Fo(166)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 167 41
167 42 bop 25 155 a Fr(Summary:)50 b(Ba)m(y)m(esian)36
b(Belief)j(Net)m(w)m(orks)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947
2 v 0 567 a
0 0 0 setrgbcolor
 0 567 a 40 685 a Fp(\017)21 b Fq(Com)n(bine)28
b(prior)h(kno)n(wledge)h(with)g(observ)n(ed)f(data)40
830 y Fp(\017)21 b Fq(Impact)28 b(of)h(prior)g(kno)n(wledge)h(\(when)f
(correct!\))40 b(is)29 b(to)104 934 y(lo)n(w)n(er)g(the)g(sample)g
(complexit)n(y)40 1079 y Fp(\017)21 b Fq(Activ)n(e)30
b(researc)n(h)e(area)125 1224 y Fb({)21 b Fq(Extend)29
b(from)f(b)r(o)r(olean)i(to)f(real-v)-5 b(alued)31 b(v)-5
b(ariables)125 1349 y Fb({)21 b Fq(P)n(arameterized)29
b(distributions)i(instead)f(of)f(tables)125 1473 y Fb({)21
b Fq(Extend)29 b(to)g(\014rst-order)f(instead)i(of)g(prop)r(ositional)
195 1577 y(systems)125 1702 y Fb({)21 b Fq(More)29 b(e\013ectiv)n(e)i
(inference)g(metho)r(ds)125 1826 y Fb({)21 b Fq(...)0
2748 y Fo(167)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 168 42
168 43 bop 25 160 a Fr(Exp)s(ectation)41 b(Maximization)h(\(EM\))1766
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1766 160 a 0 322 1947 2 v 0 475 a
0 0 0 setrgbcolor
 0 475 a 64 x
Fq(When)29 b(to)g(use:)40 684 y Fp(\017)21 b Fq(Data)29
b(is)g(only)h(partially)i(observ)-5 b(able)40 829 y Fp(\017)21
b Fq(Unsup)r(ervised)29 b(clustering)i(\(target)f(v)-5
b(alue)104 933 y(unobserv)g(able\))40 1078 y Fp(\017)21
b Fq(Sup)r(ervised)30 b(learning)g(\(some)e(instance)i(attributes)104
1182 y(unobserv)-5 b(able\))0 1377 y(Some)28 b(uses:)40
1523 y Fp(\017)21 b Fq(T)-7 b(rain)29 b(Ba)n(y)n(esian)g(Belief)j(Net)n
(w)n(orks)40 1668 y Fp(\017)21 b Fq(Unsup)r(ervised)29
b(clustering)i(\(A)n(UTOCLASS\))40 1813 y Fp(\017)21
b Fq(Learning)29 b(Hidden)g(Mark)n(o)n(v)f(Mo)r(dels)0
2748 y Fo(168)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 169 43
169 44 bop 25 155 a Fr(Generating)53 b(Data)e(from)g(Mixture)h(of)f
Fl(k)25 279 y Fr(Gaussians)579 279 y
0.8666 0.03137 0.02352 setrgbcolor
 579 279 a 0 414
1947 2 v 0 567 a
0 0 0 setrgbcolor
 0 567 a -2 571 a
 30785863 14161492 3289088 3289088 24602378 13222133 startTexFig
 -2 571 a
%%BeginDocument: ../bookps/two-gaussians.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -60 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Times-Roman findfont 180 scalefont setfont
newpath
LTa
1080 451 M
5121 0 V
LTb
1080 451 M
63 0 V
5058 0 R
-63 0 V
1080 761 M
63 0 V
5058 0 R
-63 0 V
1080 1072 M
63 0 V
5058 0 R
-63 0 V
1080 1382 M
63 0 V
5058 0 R
-63 0 V
1080 1692 M
63 0 V
5058 0 R
-63 0 V
1080 2002 M
63 0 V
5058 0 R
-63 0 V
1080 2313 M
63 0 V
5058 0 R
-63 0 V
1080 2623 M
63 0 V
5058 0 R
-63 0 V
1080 2933 M
63 0 V
5058 0 R
-63 0 V
1080 451 M
0 63 V
0 2419 R
0 -63 V
1812 451 M
0 63 V
0 2419 R
0 -63 V
2543 451 M
0 63 V
0 2419 R
0 -63 V
3275 451 M
0 63 V
0 2419 R
0 -63 V
4006 451 M
0 63 V
0 2419 R
0 -63 V
4738 451 M
0 63 V
0 2419 R
0 -63 V
5469 451 M
0 63 V
0 2419 R
0 -63 V
6201 451 M
0 63 V
0 2419 R
0 -63 V
1080 451 M
5121 0 V
0 2482 V
-5121 0 V
0 -2482 V
180 1692 M
currentpoint gsave translate 90 rotate 0 0 M
(p\(x\)) Cshow
grestore
3640 91 M
(x) Cshow
LT0
1080 560 M
52 20 V
51 24 V
52 28 V
52 31 V
52 35 V
51 40 V
52 45 V
52 49 V
52 55 V
51 60 V
52 66 V
52 71 V
51 77 V
52 82 V
52 87 V
52 91 V
51 96 V
52 100 V
52 102 V
52 105 V
51 106 V
52 106 V
52 105 V
51 103 V
52 100 V
52 96 V
52 90 V
51 83 V
52 76 V
52 66 V
52 57 V
51 46 V
52 34 V
52 23 V
51 11 V
52 -2 V
52 -14 V
52 -26 V
51 -38 V
52 -49 V
52 -60 V
52 -69 V
51 -78 V
52 -85 V
52 -92 V
51 -97 V
52 -101 V
52 -104 V
52 -106 V
51 -106 V
52 -105 V
52 -104 V
52 -102 V
51 -99 V
52 -94 V
52 -91 V
51 -85 V
52 -81 V
52 -75 V
52 -70 V
51 -64 V
52 -58 V
52 -53 V
52 -49 V
51 -43 V
52 -38 V
52 -34 V
51 -30 V
52 -27 V
52 -23 V
52 -20 V
51 -17 V
52 -14 V
52 -13 V
52 -10 V
51 -9 V
52 -8 V
52 -6 V
51 -5 V
52 -4 V
52 -3 V
52 -3 V
51 -2 V
52 -2 V
52 -2 V
52 -1 V
51 -1 V
52 -1 V
52 0 V
51 -1 V
52 0 V
52 0 V
52 0 V
51 -1 V
52 0 V
52 0 V
52 0 V
51 0 V
52 0 V
LT1
1080 452 M
52 0 V
51 0 V
52 1 V
52 0 V
52 1 V
51 1 V
52 1 V
52 2 V
52 2 V
51 2 V
52 3 V
52 3 V
51 5 V
52 5 V
52 6 V
52 7 V
51 9 V
52 11 V
52 13 V
52 14 V
51 18 V
52 20 V
52 23 V
51 27 V
52 30 V
52 34 V
52 39 V
51 44 V
52 48 V
52 54 V
52 59 V
51 64 V
52 70 V
52 76 V
51 81 V
52 85 V
52 91 V
52 95 V
51 99 V
52 102 V
52 104 V
52 106 V
51 106 V
52 106 V
52 103 V
51 101 V
52 97 V
52 91 V
52 85 V
51 77 V
52 69 V
52 58 V
52 49 V
51 37 V
52 25 V
52 13 V
51 1 V
52 -11 V
52 -24 V
52 -35 V
51 -47 V
52 -57 V
52 -68 V
52 -76 V
51 -83 V
52 -91 V
52 -96 V
51 -100 V
52 -103 V
52 -106 V
52 -106 V
51 -106 V
52 -104 V
52 -103 V
52 -99 V
51 -95 V
52 -92 V
52 -86 V
51 -82 V
52 -76 V
52 -71 V
52 -65 V
51 -60 V
52 -55 V
52 -49 V
52 -44 V
51 -39 V
52 -35 V
52 -31 V
51 -27 V
52 -24 V
52 -21 V
52 -17 V
51 -15 V
52 -13 V
52 -11 V
52 -9 V
51 -8 V
52 -7 V
LT2
2894 451 D
3275 451 D
3128 451 D
3641 451 D
4445 451 D
5689 451 D
2616 451 D
2492 451 D
2419 451 D
2031 451 D
1226 451 D
4021 451 D
4372 451 D
4226 451 D
4738 451 D
5543 451 D
3714 451 D
3589 451 D
3516 451 D
3128 451 D
2324 451 D
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 0 1621 a Fq(Eac)n(h)28 b(instance)i Fl(x)f Fq(generated)h(b)n(y)16
1767 y(1.)21 b(Cho)r(osing)30 b(one)f(of)g(the)g Fl(k)i
Fq(Gaussians)e(with)h(uniform)104 1871 y(probabilit)n(y)16
2016 y(2.)21 b(Generating)29 b(an)g(instance)h(at)g(random)c(according)
k(to)104 2120 y(that)f(Gaussian)0 2748 y Fo(169)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p
Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 170 44
170 45 bop 25 160 a Fr(EM)39 b(for)h(Estimating)i Fl(k)g
Fr(Means)1509 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1509 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor

0 474 a 63 x Fq(Giv)n(en:)40 683 y Fp(\017)21 b Fq(Instances)29
b(from)f Fl(X)35 b Fq(generated)30 b(b)n(y)f(mixture)g(of)g
Fl(k)104 786 y Fq(Gaussian)g(distributions)40 932 y Fp(\017)21
b Fq(Unkno)n(wn)28 b(means)f Fp(h)p Fl(\026)837 945 y
Fg(1)870 932 y Fl(;)14 b(:)g(:)g(:)h(;)f(\026)1113 945
y Fj(k)1148 932 y Fp(i)29 b Fq(of)g(the)g Fl(k)j Fq(Gaussians)40
1077 y Fp(\017)21 b Fq(Don't)29 b(kno)n(w)f(whic)n(h)i(instance)g
Fl(x)1202 1090 y Fj(i)1254 1077 y Fq(w)n(as)e(generated)h(b)n(y)104
1181 y(whic)n(h)g(Gaussian)0 1326 y(Determine:)40 1471
y Fp(\017)21 b Fq(Maxim)n(um)27 b(lik)n(eli)q(ho)r(o)r(d)32
b(estimates)e(of)f Fp(h)p Fl(\026)1467 1484 y Fg(1)1499
1471 y Fl(;)14 b(:)h(:)f(:)g(;)g(\026)1742 1484 y Fj(k)1777
1471 y Fp(i)0 1707 y Fq(Think)30 b(of)f(full)i(description)f(of)f(eac)n
(h)g(instance)h(as)0 1810 y Fl(y)42 1823 y Fj(i)89 1810
y Fq(=)24 b Fp(h)p Fl(x)262 1823 y Fj(i)285 1810 y Fl(;)14
b(z)363 1823 y Fj(i)p Fg(1)416 1810 y Fl(;)g(z)494 1823
y Fj(i)p Fg(2)547 1810 y Fp(i)p Fq(,)29 b(where)40 1956
y Fp(\017)21 b Fl(z)144 1969 y Fj(ij)223 1956 y Fq(is)30
b(1)f(if)g Fl(x)509 1969 y Fj(i)561 1956 y Fq(generated)g(b)n(y)g
Fl(j)5 b Fq(th)29 b(Gaussian)40 2101 y Fp(\017)21 b Fl(x)153
2114 y Fj(i)204 2101 y Fq(observ)-5 b(able)40 2246 y
Fp(\017)21 b Fl(z)144 2259 y Fj(ij)223 2246 y Fq(unobserv)-5
b(able)0 2748 y Fo(170)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q
(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
%%Page: 171 45
171 46 bop 25 160 a Fr(EM)39 b(for)h(Estimating)i Fl(k)g
Fr(Means)1509 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1509 160 a 0 321 1947 2 v 0 457 a
0 0 0 setrgbcolor

0 457 a 69 x Fq(EM)28 b(Algorithm:)39 b(Pic)n(k)29 b(random)e(initial)
33 b Fl(h)23 b Fq(=)h Fp(h)p Fl(\026)1620 539 y Fg(1)1653
526 y Fl(;)14 b(\026)1743 539 y Fg(2)1775 526 y Fp(i)p
Fq(,)0 630 y(then)29 b(iterate)-182 763 y(E)g(step:)21
b(Calculate)31 b(the)f(exp)r(ected)g(v)-5 b(alue)31 b
Fl(E)5 b Fq([)p Fl(z)1349 775 y Fj(ij)1399 763 y Fq(])29
b(of)g(eac)n(h)104 866 y(hidden)g(v)-5 b(ariable)31 b
Fl(z)749 879 y Fj(ij)800 866 y Fq(,)d(assuming)g(the)i(curren)n(t)104
970 y(h)n(yp)r(othesis)g Fl(h)24 b Fq(=)f Fp(h)p Fl(\026)777
983 y Fg(1)810 970 y Fl(;)14 b(\026)900 983 y Fg(2)932
970 y Fp(i)29 b Fq(holds.)442 1154 y Fl(E)5 b Fq([)p
Fl(z)575 1167 y Fj(ij)625 1154 y Fq(])42 b(=)894 1095
y Fl(p)p Fq(\()p Fl(x)25 b Fq(=)f Fl(x)1184 1108 y Fj(i)1207
1095 y Fp(j)p Fl(\026)g Fq(=)g Fl(\026)1450 1108 y Fj(j)1480
1095 y Fq(\))p 804 1133 800 2 v 804 1170 a Ff(P)848 1188
y Fg(2)848 1234 y Fj(n)p Fg(=1)977 1213 y Fl(p)p Fq(\()p
Fl(x)h Fq(=)f Fl(x)1267 1226 y Fj(i)1289 1213 y Fp(j)p
Fl(\026)g Fq(=)g Fl(\026)1532 1226 y Fj(n)1570 1213 y
Fq(\))691 1408 y(=)894 1350 y Fl(e)934 1306 y Fi(\000)1013
1283 y Fd(1)p 985 1292 81 2 v 985 1341 a(2)p Fh(\033)1039
1326 y Fd(2)1071 1306 y Fg(\()p Fj(x)1128 1319 y Fh(i)1147
1306 y Fi(\000)p Fj(\026)1229 1319 y Fh(j)1254 1306 y
Fg(\))1277 1285 y Fd(2)p 804 1387 592 2 v 804 1449 a
Ff(P)848 1466 y Fg(2)848 1513 y Fj(n)p Fg(=1)977 1491
y Fl(e)1017 1448 y Fi(\000)1096 1424 y Fd(1)p 1068 1434
81 2 v 1068 1482 a(2)p Fh(\033)1122 1468 y Fd(2)1154
1448 y Fg(\()p Fj(x)1211 1460 y Fh(i)1230 1448 y Fi(\000)p
Fj(\026)1312 1457 y Fh(n)1344 1448 y Fg(\))1367 1431
y Fd(2)-202 1630 y Fq(M)29 b(step:)21 b(Calculate)31
b(a)e(new)g(maxim)n(um)d(lik)n(eli)q(ho)r(o)s(d)31 b(h)n(yp)r(othesis)
104 1734 y Fl(h)154 1703 y Fi(0)196 1734 y Fq(=)24 b
Fp(h)p Fl(\026)372 1703 y Fi(0)372 1755 y Fg(1)404 1734
y Fl(;)14 b(\026)494 1703 y Fi(0)494 1755 y Fg(2)526
1734 y Fp(i)p Fq(,)29 b(assuming)f(the)i(v)-5 b(alue)30
b(tak)n(en)f(on)g(b)n(y)104 1838 y(eac)n(h)f(hidden)i(v)-5
b(ariable)31 b Fl(z)943 1851 y Fj(ij)1022 1838 y Fq(is)f(its)g(exp)r
(ected)h(v)-5 b(alue)104 1942 y Fl(E)5 b Fq([)p Fl(z)237
1954 y Fj(ij)287 1942 y Fq(])29 b(calculated)i(ab)r(o)n(v)n(e.)39
b(Replace)30 b Fl(h)24 b Fq(=)g Fp(h)p Fl(\026)1595 1954
y Fg(1)1627 1942 y Fl(;)14 b(\026)1717 1954 y Fg(2)1749
1942 y Fp(i)29 b Fq(b)n(y)104 2045 y Fl(h)154 2014 y
Fi(0)196 2045 y Fq(=)24 b Fp(h)p Fl(\026)372 2014 y Fi(0)372
2067 y Fg(1)404 2045 y Fl(;)14 b(\026)494 2014 y Fi(0)494
2067 y Fg(2)526 2045 y Fp(i)p Fq(.)666 2229 y Fl(\026)718
2242 y Fj(j)771 2229 y Fp( )886 2128 y Ff(P)930 2139
y Fj(m)930 2192 y(i)p Fg(=1)1044 2171 y Fl(E)5 b Fq([)p
Fl(z)1177 2183 y Fj(ij)1227 2171 y Fq(])57 b Fl(x)1357
2183 y Fj(i)p 886 2208 494 2 v 951 2246 a Ff(P)995 2263
y Fj(m)995 2309 y(i)p Fg(=1)1108 2288 y Fl(E)5 b Fq([)p
Fl(z)1241 2301 y Fj(ij)1292 2288 y Fq(])0 2748 y Fo(171)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 172 46
172 47 bop 25 160 a Fr(EM)39 b(Algorithm)829 160 y
0.8666 0.03137 0.02352 setrgbcolor
 829
160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fq(Con)n(v)n(erges)29
b(to)g(lo)r(cal)i(maxim)n(um)26 b(lik)n(eli)q(ho)r(o)s(d)31
b Fl(h)0 642 y Fq(and)d(pro)n(vides)i(estimates)g(of)f(hidden)g(v)-5
b(ariables)31 b Fl(z)1664 655 y Fj(ij)0 796 y Fq(In)e(fact,)g(lo)r(cal)
j(maxim)n(um)25 b(in)30 b Fl(E)5 b Fq([ln)14 b Fl(P)e
Fq(\()p Fl(Y)20 b Fp(j)p Fl(h)p Fq(\)])40 953 y Fp(\017)h
Fl(Y)48 b Fq(is)29 b(complete)h(\(observ)-5 b(able)30
b(plus)g(unobserv)-5 b(able)104 1057 y(v)g(ariables\))31
b(data)40 1202 y Fp(\017)21 b Fq(Exp)r(ected)30 b(v)-5
b(alue)30 b(is)g(tak)n(en)f(o)n(v)n(er)g(p)r(ossible)h(v)-5
b(alues)31 b(of)104 1306 y(unobserv)n(ed)d(v)-5 b(ariables)31
b(in)f Fl(Y)0 2748 y Fo(172)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 173 47
173 48 bop 25 170 a Fr(General)41 b(EM)f(Problem)1184
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1184 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 63 x
Fq(Giv)n(en:)40 683 y Fp(\017)21 b Fq(Observ)n(ed)28
b(data)h Fl(X)i Fq(=)24 b Fp(f)p Fl(x)963 695 y Fg(1)996
683 y Fl(;)14 b(:)g(:)g(:)h(;)f(x)1236 695 y Fj(m)1291
683 y Fp(g)40 828 y(\017)21 b Fq(Unobserv)n(ed)28 b(data)h
Fl(Z)h Fq(=)24 b Fp(f)p Fl(z)1030 841 y Fg(1)1062 828
y Fl(;)14 b(:)g(:)h(:)f(;)g(z)1293 841 y Fj(m)1348 828
y Fp(g)40 973 y(\017)21 b Fq(P)n(arameterized)28 b(probabilit)n(y)k
(distribution)f Fl(P)12 b Fq(\()p Fl(Y)20 b Fp(j)p Fl(h)p
Fq(\),)104 1077 y(where)125 1222 y Fb({)h Fl(Y)43 b Fq(=)24
b Fp(f)p Fl(y)464 1235 y Fg(1)496 1222 y Fl(;)14 b(:)h(:)f(:)g(;)h(y)
730 1235 y Fj(m)784 1222 y Fp(g)29 b Fq(is)h(the)f(full)i(data)e
Fl(y)1480 1235 y Fj(i)1526 1222 y Fq(=)24 b Fl(x)1666
1235 y Fj(i)1708 1222 y Fp([)c Fl(z)1825 1235 y Fj(i)125
1347 y Fb({)h Fl(h)28 b Fq(are)h(the)g(parameters)0 1492
y(Determine:)40 1637 y Fp(\017)21 b Fl(h)28 b Fq(that)i(\(lo)r(call)q
(y\))i(maximizes)d Fl(E)5 b Fq([ln)15 b Fl(P)d Fq(\()p
Fl(Y)20 b Fp(j)p Fl(h)p Fq(\)])0 1843 y(Man)n(y)29 b(uses:)40
1988 y Fp(\017)21 b Fq(T)-7 b(rain)29 b(Ba)n(y)n(esian)g(b)r(elief)j
(net)n(w)n(orks)40 2133 y Fp(\017)21 b Fq(Unsup)r(ervised)29
b(clustering)i(\(e.g.,)e Fl(k)j Fq(means\))40 2278 y
Fp(\017)21 b Fq(Hidden)29 b(Mark)n(o)n(v)f(Mo)r(dels)0
2748 y Fo(173)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fn(Machine)h(L)n(e)n(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 174 48
174 49 bop 25 170 a Fr(General)41 b(EM)f(Metho)s(d)1150
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1150 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 69 x
Fq(De\014ne)29 b(lik)n(eli)q(ho)r(o)r(d)j(function)e
Fl(Q)p Fq(\()p Fl(h)1147 512 y Fi(0)1166 543 y Fp(j)p
Fl(h)p Fq(\))e(whic)n(h)i(calculates)0 647 y Fl(Y)43
b Fq(=)24 b Fl(X)i Fp([)20 b Fl(Z)34 b Fq(using)c(observ)n(ed)e
Fl(X)36 b Fq(and)28 b(curren)n(t)0 751 y(parameters)g
Fl(h)g Fq(to)h(estimate)h Fl(Z)424 921 y(Q)p Fq(\()p
Fl(h)575 885 y Fi(0)594 921 y Fp(j)p Fl(h)p Fq(\))24
b Fp( )g Fl(E)5 b Fq([ln)14 b Fl(P)e Fq(\()p Fl(Y)20
b Fp(j)p Fl(h)1257 885 y Fi(0)1275 921 y Fq(\))p Fp(j)p
Fl(h;)15 b(X)7 b Fq(])0 1124 y(EM)28 b(Algorithm:)104
1282 y Fk(Estimation)k(\(E\))f(step:)38 b Fq(Calculate)31
b Fl(Q)p Fq(\()p Fl(h)1449 1251 y Fi(0)1467 1282 y Fp(j)p
Fl(h)p Fq(\))e(using)f(the)104 1386 y(curren)n(t)f(h)n(yp)r(othesis)i
Fl(h)f Fq(and)f(the)h(observ)n(ed)g(data)g Fl(X)34 b
Fq(to)104 1490 y(estimate)c(the)f(probabilit)n(y)i(distribution)h(o)n
(v)n(er)c Fl(Y)19 b Fq(.)476 1643 y Fl(Q)p Fq(\()p Fl(h)627
1608 y Fi(0)646 1643 y Fp(j)p Fl(h)p Fq(\))24 b Fp( )g
Fl(E)5 b Fq([ln)14 b Fl(P)e Fq(\()p Fl(Y)20 b Fp(j)p
Fl(h)1309 1608 y Fi(0)1327 1643 y Fq(\))p Fp(j)p Fl(h;)14
b(X)7 b Fq(])104 1818 y Fk(Maximization)32 b(\(M\))e(step:)38
b Fq(Replace)30 b(h)n(yp)r(othesis)f Fl(h)f Fq(b)n(y)104
1921 y(the)h(h)n(yp)r(othesis)h Fl(h)726 1890 y Fi(0)773
1921 y Fq(that)g(maximizes)f(this)h Fl(Q)104 2025 y Fq(function.)648
2129 y Fl(h)24 b Fp( )g Fq(argmax)946 2197 y Fj(h)980
2180 y Fc(0)1126 2129 y Fl(Q)p Fq(\()p Fl(h)1277 2093
y Fi(0)1296 2129 y Fp(j)p Fl(h)p Fq(\))0 2748 y Fo(174)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fn(Machine)h(L)n(e)n
(arning)p Fo(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
