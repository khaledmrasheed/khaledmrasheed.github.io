%!PS-Adobe-1.0
%%DocumentFonts: Courier
%%Title: ML-C2.ps (mpage)
%%Creator: mpage
%%CreationDate: Mon Jan 28 21:24:00 2002
%%Pages: (atend)
%%BoundingBox: 20 20 596 776
%%EndComments

/mp_stm usertime def
/mp_pgc statusdict begin pagecount end def
statusdict begin /jobname (ML-C2.ps) def end
%%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%%Title: mlbook.dvi
%%%Pages: 23
%%%PageOrder: Ascend
%%%BoundingBox: 0 0 612 792
%%%EndComments
/showsheet { showpage } bind def
/showpage { } def
%DVIPSCommandLine: dvips -o mlbook.ps mlbook
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.11.01:2006
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/setpagedevice{pop}N statusdict begin /letter{}N /lettertray{}N /legal{}
N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N /b5tray{}N
/showpage{}N /erasepage{}N /copypage{}N end /letter{}N /lettertray{}N
/legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N
/b5tray{}N /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N
/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4
copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip
newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /setpagedevice{pop}N statusdict begin /letter{}
N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N
/b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N end
/letter{}N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{
}N /b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N
newpath}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount
sub{end}repeat grestore SpecialSave restore end}N /@defspecial{SDict
begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np
{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (mlbook.dvi)
@start /Fa 1 49 df<EA01E0EA03F0A4EA07E0A313C0120FA21380A3EA1F00A3121E12
3E123CA312381278A21270A212F05AA20C1E7EA010>48 D E /Fb
6 110 df<127812FCA212FEA2127A1202A41204A31208A212101220124007127B8511>
59 D<013FB512F016FC903901F8003F4AEB0F80EE07C0EE03E0EE01F0495AEE00F8A349
5A17FCA3495AA449C812F81601A3013EEC03F0A217E016074915C0A2EE0F80EE1F005B16
3E5E5E4848495AED07C0ED1F800003027EC7FCB612F815C02E297EA831>68
D<903B3FFFE07FFFC0A2903B01F80003F0004A5CA44948495AA44948495AA4494849C7FC
A449B512FEA291C7123EA2013E5CA4495CA449495AA44848495AA300031407B50081B5FC
A232297EA832>72 D<EB0FE0EB3818EBE0043801C00E3803801E3807003E5A001E131C00
3E1300123C127CA25AA55AA21402007813041408003813306C1340380E03803803FC0017
1A7E991A>99 D<131C133EA2133C13381300A9EA0780EA08E01210EA20F0A21240A2EA41
E012811201EA03C0A2EA0780A3EA0F00A21304121EA2EA1C08123CEA1C101320EA0C60EA
07800F287EA715>105 D<000F017F133F3B11818380C1C03B21C201C101E09039E400E6
00D841E813E401F001F813F0495BA23B83C001E001E01203A33B078003C003C0A3EE0780
390F0007801782EE0F02A2001E90390F000E04161EEE0E08171048011EEB06300018010C
EB03C02F1A7E9934>109 D E /Fc 1 50 df<1310137013F0120712FF12F81200B3AD48
7E387FFFE0A213287BA71E>49 D E /Fd 29 122 df<EA03C0EA07E0EA0FF0A2EA1FF8A2
13F0120FEA07B0EA0030A21360A213C0A2EA0180A2EA0300A212065A5A5A5A5A5A0D1A7A
881A>44 D<387FFFFCA3B512F86C13F0160579941F>I<131C137E13FFA25AA213FEEA00
FC13781300B3120E123FEA7F80A212FFA21300127E123C102577A41A>58
D<17E01601A24C7EA21607A2160F161FA2163FA21677A216E7150116C7ED038783ED0703
A2150E151E151C1538A21570A215E0140115C014031580DA07007FA2020E1301A25C143C
023FB5FC5CA29138E00001A2495A13035C49C7FC83130E16005B133C1338137813F81201
D807FCEC03FF267FFF80017F13F8B56C90B512FC4A6D13F8363D7BBC40>65
D<49B812805B7F903A0007F800010203EC003F4A48141F180FA2F007004A5AA44A5AA218
0EA24A5AEE01C0A295C7FC4A48485AA3160702FE91C8FC5E163F91B6FC495CA29138FC00
7E163E4948131CA449485BA31630494890C9FCA4495AA4495AA449CBFCA2497E007FEBFF
80B6FC7E393B7BBA38>70 D<49B5D8F807B512E0495D6D8190260007FCC7381FF0006E48
6E5A4A484A5AA44A484A5AA44A484AC7FCA44A4814FEA44AC7485AA402FE4A5AA291B7FC
A2495E02FCC71207A349484A5AA449484A5AA449484A5AA449484AC8FCA4494814FEA449
C7485AA2491403007FD9FE01B512F8B55B6C80433B7BBA40>72 D<49B612F04915FF6D16
C0903B0007F8003FE00203EC07F84A481303717E717EA24A488084A2604A5AA44A48495A
A2604D5A4AC7120760EF0FC04D5A02FE027FC7FCEE01FCEE0FF091B61280494AC8FC9139
FC001F80EE07C0707E494880160183A2494880A44948495AA449481307A44948130F9438
F00380A2190049C700075B1806490203130E007F01FE6E5AB502015B6C9238007FF0CAEA
1FC0393C7BBA3F>82 D<92383FC002913901FFF8074AEBFC0E91390FC03F1E91381F000F
023CEB03BE4AEB01FC5C49481300495A010715F85C010F1578A249C81270A317F017E06E
14601700A28014F014FE90380FFFC015F86D13FF6D14C06D806D6C7F021F7F02037FEC00
3FED07FE15011500167FA282A20006153E120EA4001E5DA2167816F8003E5D003F4A5A15
036D5C007F4A5AD87DC0011FC7FCD879F0133E39707E01F839F03FFFF0D8E00F13C026C0
01FEC8FC303D7ABB30>I<48B812F85AA2903AFC003F8007D807F0150101C049C7FC4916
7848C7FC000E1770001E14FE121CA25A4A5AA24817E0A24A5A5AA2C716004A5AA44A5AA4
4A5AA44A5AA44AC9FCA414FEA4495AA4495AA4495AA2EB1FF8003FB512FC48805D353B71
BA3E>I<B500F849B5FCA24A15FED803FEC8EA3FE049ED1F8018000001161E171C173C17
385FA25F16015F6D4A5A12004CC7FC5E160E5EA25E167816706D5CA26D495A15035E4BC8
FCA2150E151E151C5D1480013F5B15F05DEC81C0A2EC8380148792C9FC148E14CE14DC13
1F14F85CA25CA25CA25C91CAFC7F130E383C6EBA40>86 D<B5D8F003B539C007FFFC6E48
5D4A6C4A6C13F8D807FEC7D81FF0C713C0D803F803C0EC3F001A3CA21A3862A262163F4F
5A167F71495A04FF140704EF92C7FCDB01CF140EA2DB038F5C1507040F5C6D130E000160
151C610338140161037014036103E04AC8FC140103C0140E140303805CEC070060140E71
5A4A15F004075B4AECF1C0A24AECF38014F04A02F7C9FCEBFFC06C16FE5C5F91C7FC5F5B
5F495DA2495DA2495D5B4E3C6EBA56>I<147CEB03FF90380F838690381F01CF90383C00
FF5B01F87F485A4848137E120749133E120F001F5C5B123FA290C75A5AA300FE495AA448
495A1670A3913807C0E0140F127C141F91383FC1C0003C1377003E01E31380391E01C3C3
3A0F0781C7003903FE00FED800F8137C242777A52C>97 D<EC3F80903801FFF0903807E0
7890380F801C90381E000E137C49133E0001147E484813FE5B000714FC4848137C153048
481300123FA290C8FC5AA312FEA55AA31504007C140E151C007E143C003E1478001E14E0
001FEB03C06CEB0F803907C07E003801FFF838007F801F2777A528>99
D<167CED1FFEED3FFC151F1500A216F8A4ED01F0A4ED03E0A4ED07C0A491387C0F80EB03
FF90380F838F90381F01CF90393C00FF005B01F87F485A4848137E120749133E120F001F
5C5B123FA290C75A5AA300FE495AA448495A1670A3913807C0E0140F127C141F91383FC1
C0003C1377003E01E31380391E01C3C33A0F0781C7003903FE00FED800F8137C273D77BB
2C>I<EC3F80903801FFE0903807E07090381F803890383E001C5B5B485A1203485A485A
1538001F14784913F0003FEB03E0EC3F80397FFFFE0014E090C8FCA2127E12FEA5127EA2
1504150E151C003E143C15786C14E06CEB03C03907800F803903C07E003801FFF838007F
801F2777A528>I<EC07E0EC1FF891387C1C309138F80E78903901E007F8903803C00313
07EB0F80D91F0013F0491301137EA201FEEB03E05B1201A24848EB07C0A44848EB0F80A4
ED1F005BA25D153E0003147E15FEA26C6C485A0000EB037CEB780EEB3C3C90381FF8F8EB
07E090C7FCA24A5AA44A5AA2001C5C007E13074A5A00FE91C7FC141E485B007813F8387C
03F0381FFFC0D807FEC8FC25387CA528>103 D<EB03E0EBFFF0485B7E1307A25CA4495A
A449C8FCA4133EA490387C07F0EC1FFCEC7C1EECE00F9039F9C00780EBFB80EBFF004914
C0485AA25B5B0003EC0F80A25BA24848EB1F00A3153E485AA25DA248C7FCEDF80EA3003E
903801F01CA3EDE0385A1630167016E048903800E1C0ED7F800070EC3E00273D7ABB2C>
I<14E0EB01F0EB03F8EB07F0A2EB03E0EB01C090C7FCAC13F8487EEA030EEA060F120C00
1C1380121812381400485AA3EAE03EA2C65AA35BA3485AA3485AA23807C070A3380F80E0
A3EB01C0A2EB038014005BEA070EEA03FCEA01F0153A79B81A>I<EB03E0EBFFF0485B7E
1307A25CA4495AA449C8FCA4133EA449EB07C0ED1FE0ED7870EDE0F89038F80181EC0303
1406020C13F03801F01891383001C04AC7FC5CEA03E1EBE38001E6C8FC13FC485AEBFF80
EBDFE0EBC1F0380F80F8143C143E80EA1F0016E0A3003E90383E01C0A3ED03805A141EED
0700EC0E06486D5AEC03F800706D5A253D7ABB28>107 D<EB0F803803FFC04813807EEA
001FA21400A4133EA45BA45BA4485AA4485AA4485AA4485AA448C7FCA4123EA45A130EA3
485AA45BA2EA7870A2EA38E0EA1FC06C5A123D78BB16>I<D803E001FEEB03F83C07F003
FF800FFE3C0E380F83C03E0F3D1C3C1C01E0700780903C1E3800F0E003C0003849EBF1C0
4AEBF380D93FC0D9FF0013E00070495BA291C75A013E5CD8E07E0101EC07C0A2D8007C5C
A2494948EB0F80A3F01F004848495AA2183EA24848495AF07C07A3484849C7EAF80EA3F0
F01C4848133E19181938197048C748EC70E0F03FC0000E0238EC1F00402779A546>I<D8
03E013FE3A07F003FF803A0E380F83C03A1C3C1C01E06D486C7E00385B5CD93FC07F0070
5BA291C7FC133ED8E07E495AA2EA007CA249495AA34B5A485AA24B5AA2485A92381F01C0
A3484890383E0380A392383C0700485A16065E161C48C7EA1C38ED0FF0000EEC07C02A27
79A530>I<EC3F80903801FFE0903807E0F890380F803C90383E001E49131F5B0001EC0F
80485A4914C01207485AA2485A123FA290C7121F5AA300FEEC3F80A316005D48147E15FE
5D5D007C13014A5A007E5C003E495A4A5A6C49C7FC6C137C3807C1F83801FFE06C6CC8FC
222777A52C>I<90390F8007E090391FC01FF8903938E0783C903970F0E01E913879C01F
9039E07B800FDA7F00138014FE48484814C0A25CA2380381F0A2EA0001A24948131FA449
48EB3F80A3170049485B167EA25E131F4B5A5E4B5A013F5C6E485A013E49C7FCECE01E90
387C707CEC3FF0EC0FC091C9FC5BA4485AA4485AA31207B57EA32A377FA52C>I<3903E0
01F83907F00FFE3A0E381E0780381C3C3890391E700FC00038EBE01FEB1FC0D93F801380
12709138000E0092C7FC133EEAE07E137C1200A25BA4485AA4485AA4485AA4485AA448C9
FCA2120E222779A524>114 D<14FF010313C090380F81E090381C007049133813780170
137801F013F8EBE001120115F0EC00E06D1300A213FEEBFFE06C13FC6D7E6D7E6D138001
0313C0EB003FEC0FE014071403121C123E127E00FE14C0A248148048130700E014000070
130E5C6C5B381F01F03807FFC0D801FEC7FC1D277AA523>I<EB0380EB07C0A3EB0F80A4
EB1F00A4133EA45B007FB5FCB6FC14FE3800F800A4485AA4485AA4485AA4485AA448C7FC
141CA21438123E1430147014E0A2EB01C0381E0380EB0700EA0E0EEA07FCEA01F0183778
B51D>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E03870
1F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133E1607A3ED7C0EA315
FC0201131C12019138033C182600F00613389039783C1C7090393FF80FE090390FE007C0
282779A52E>I<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03
E038701F00A3D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133EA45DA315FC
4A5A120114033800F0069038783DF0EB3FF9EB0FE1EB00014A5AA25D001C1307003E5C00
7F130F92C7FC007E131E143E0078133C00705B5C383803C0381C0F80D80FFEC8FCEA03F8
253879A52A>121 D E /Fe 26 124 df<913801FFC0023F13F891B57E0103EB807E9039
0FFC000FD91FF0EB3F804948497E494813FF13FF5C5AA3705A70C7FC93C8FCA692381FFF
E0B8FCA40001903880007FB3AC007FD9FE1FB51280A4313C7EBB37>12
D<EA0F80EA1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F80C7FCACEA0F80EA
1FC0EA3FE0EA7FF0EAFFF8A5EA7FF0EA3FE0EA1FC0EA0F800D2679A51B>58
D<B812C017FCEFFF8018E028007FF8000313F89338003FFEEF0FFF717F05017F717F727E
727EA2727EA2727EA28584A21A80A41AC0AC1A80A41A0060A261181F61183F614E5A4E5A
4D5B4D5B050F90C7FCEF3FFE933803FFF8B95A18804DC8FC17C0423B7CBA4C>68
D<DB1FFF14304AB500E013F0020FECFC01027FECFE03903B01FFFE007F874901E0EB0FCF
010F90C7EA03FFD91FFC804948EC007F4948153FEBFFC048171F4849150F4890C9FC4817
075B001F1703A2485A1801A2127F5B95C8FCA212FFAA040FB612E0127FA27F93C7EBF000
123FA36C7EA2120F7F7E6C7F6C7F6C7F6D7E6D6C5CEB1FFE6D6C6C5B010301E0130F6D01
FEEB7FCF6D6CB61203020FECFE00020102F81330DA001F018090C7FC433D7BBB4E>71
D<903A03FF800180011FEBF003017FEBFC0748B6120F4848C6139FD807F0EB0FFF484813
0348487F4848EB007FA248C8123F161FA248150FA36D1407A27F7F01F891C7FCEA7FFEEB
FFF014FF6C14F815FF6C15C06C15F06C816C816C816C6C806D15801307D9007F14C01407
DA003F13E01503030013F0167F163F0070151F12F0A2160FA27E17E0A27EEE1FC07E6C16
8001C0143F01F0EC7F0001FCEB01FE3AFCFFC007FC486CB512F0D8F01F5CD8E003148027
C0003FFCC7FC2C3D7BBB37>83 D<003FB912C0A4D9F800EBF001D87FC09238003FE04916
1F90C7150F007E1707007C1703A300781701A448EF00F0A5C81600B3AF011FB77EA43C3A
7CB945>I<90381FFF8048B512F04814FC3907F003FF486CC67F486C6D7E6F7E82151F6C
4880A26C5AEA01C0C8FCA391B5FC130F90387FFC1F3801FFC03807FE00485AEA1FF0123F
485AA2485AA4153F6C7E156F3A3FF001CFFC3B1FFC0787FFF00007B512070001EBFC033A
003FF0007F2C267DA530>97 D<13FFB5FCA412077EB04AB47E020F13F0023F13FC9138FE
03FFDAF000138002C0EB3FC04AEB1FE091C713F0EE0FF817FCA2EE07FEA317FFA917FEA3
17FC160F17F8A2EE1FF06EEB3FE06EEB7FC0D9FDF0EBFF809026F8FC0713009039F03FFF
FCD9E00F13F0D9C00390C7FC303C7DBB37>I<ECFFF0010F13FF013F14809039FFC01FC0
489038003FE0D803FCEB7FF01207485A485AED3FE0123FED1FC04848EB070092C7FCA212
FFA8127FA27F123FA2001F15787F000F15F06C7E6C6CEB01E03A01FF8007C06C9038E01F
80013FB51200010F13FC010013C025267DA52C>I<EE3FC0ED3FFFA4150181B0ECFFC001
0F13F8013F13FE9038FFE03F48EB000F4848130348487F48487F485AA2123F5B127FA312
FFA9127FA36C7EA2121F6C6C5B00075C6C6C5B6CB44913E06CD9C07E13FF90383FFFFC01
0F13F001011380303C7DBB37>I<49B47E010F13F8013F13FE9038FF80FF3A01FE003F80
D807FCEB1FC04848EB0FE016F048481307003F15F8A2485AED03FCA312FF90B6FCA301E0
C8FCA4127FA3123F6D143C121FA26C6C14786C6C14F86C6CEB01F06C6CEB07E06C9038C0
3FC0013FB51200010713FC010013E026267DA52D>I<EE1F80D907FEEB7FC0903A7FFFE1
FFE048B538FBE7F03A03FE07FF073907F801FE390FF000FF001FED87E0484890387FC3C0
EEC000007F81A7003F5DA26C6C495A000F92C7FC6C6C485A3903FE07FC48B55AD80E7F13
E0D907FEC8FC001ECAFCA4121F13C090B512FCEDFF806C15F06C81826C8182000F168039
1FC0000748C8FC48ED3FC000FE151FA5007FED3F80A26C6CEC7F006C6C14FED80FF0EB03
FCD807FEEB1FF80001B612E0D8003F91C7FC010313F02C397DA631>103
D<13FFB5FCA412077EB0ED7FC0913801FFF802077F91380F03FE91381C01FF023014804A
7E02E014C05C5CA391C7FCB3A4B5D8FC3F13FFA4303C7CBB37>I<EA01F0EA07FC487EA2
487EA56C5AA26C5AEA01F0C8FCAA13FF127FA412077EB3AAB512F8A4153D7DBC1B>I<13
FFB5FCA412077EB3B3AEB512FCA4163C7DBB1B>108 D<01FED93FE0EB07FC00FF902601
FFFC90383FFF8002076D90B57E913C0F81FF01F03FE0DA1C00903983801FF0000749DAC7
007F00030160D97FCC130F02E002FC804A5C6D485CA391C75BB3A4B5D8FC1FB50083B512
F0A44C267CA553>I<01FEEB7FC000FF903801FFF802077F91380F03FE91381C01FF0007
013014800003497E02E014C05C6D5AA391C7FCB3A4B5D8FC3F13FFA430267CA537>I<EC
FFC0010F13FC013F13FFD9FFC013C03A01FE001FE0D807FCEB0FF849130748486D7E001F
81003F81497F007F1680A400FF16C0A9007F1680A36C6C491300A2001F5D6C6C495AA26C
6C495A6C6C495A3A00FFC0FFC0013FB5C7FC010F13FC010113E02A267DA531>I<9039FF
01FF80B5000F13F0023F13FC9138FE03FFDAF0001380000301C0EB7FC04AEB3FE091C713
F0EE1FF817FC160F17FEA2160717FFA917FEA2160F17FCA2EE1FF8A2EE3FF06E14E06EEB
7FC09139F001FF80DAFC07130091383FFFFC020F13F0020390C7FC91C9FCADB512FCA430
377DA537>I<9038FE01FC00FFEB07FF4A138091381E1FC09138383FE000079038707FF0
0003136014C0A201FFEB3FE01480ED1FC0ED070091C8FCB3A3B512FEA424267EA529>
114 D<90383FF8383901FFFEF8000713FF380FC00F381F0003003E13005A157812FCA27E
6C6C130013F0EBFF806C13FC14FF6C14C06C14E06C14F06C14F8000114FCD8003F13FE13
019038000FFF14010070EB007F12F0153F7E153E7E7E6C147C6D13F89038F007F000FDB5
12E000F0148039E01FFC0020267DA527>I<130FA55BA45BA25BA25B5A5A5A001FEBFFF0
B6FCA3000390C7FCB3153CA86C147814806C14F090387FC1E090383FFFC0010F13809038
01FE001E377EB626>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A45DA25D7E15066CD9
800E13E090267FC03C13FF90383FFFF8010F13E00101138030267CA537>I<B500F8EBFF
FEA4000390C7EA0FC06E14806C16006E5B6C151E6E133E017F143C80013F5CA26E13F801
1F5CECFC01010F5CECFE0301075CECFF076D5C158F6D91C7FC15CF6D13DEA215FE6E5AA2
6E5AA26E5AA26E5AA26E5AA22F267EA534>I<B500F8EBFFFEA4000390C7EA0FC06E1480
6C16006E5B6C151E6E133E017F143C80013F5CA26E13F8011F5CECFC01010F5CECFE0301
075CECFF076D5C158F6D91C7FC15CF6D13DEA215FE6E5AA26E5AA26E5AA26E5AA26E5AA2
5DA2140F92C8FC000C5B003F131E387F803E38FFC03C147C14785C13C16C485AEB0FC06C
B4C9FC6C5AEA03F02F377EA534>121 D<B9FCA33003809831>123
D E /Ff 35 122 df<121C123E127FEAFF80A3EA7F00123E121C0909798818>58
D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A21206A25A5AA25A
12200A1A798818>I<17181738173C177C17FCA21601A216031607A2160D831618163816
301660A216C0150116804B487EA203067F150E150C5DA25D157015604B80A24A48133F14
0392C7FC1406A2020FB6FC5CA20230C7EA3FC0A24A141F14E05C495AA249C8FC1306A249
82170F5B1338137813F8D807FCED3FF0267FFFC0010FB512C0B517E06C4916C03B3D7DBC
41>65 D<0103B712C018F818FE903B0007F80001FF02039138007F804A48EC1FC019E018
0F19F04A481407A44A5AA2180F19E04A5AF01FC0183F19804AC8EA7F0018FE4D5AEF07F8
02FEEC1FE0EF7F8091B600FEC7FC5FD901FCC7EA7F80EF1FC0EF07F0717E495A717E84A2
49481400A4495A1701A349484A5AA24D5A604948140F4D5A4D5A4D5A49C74848C7FCEE07
FE49EC1FF8B812E0178004F8C8FC3C3B7CBA41>I<DC7FC01320922607FFF81370033F01
FE13E09238FFC01F913A03FC000781DA0FF0EB01C3DA1FC0903800E7C0027FC8127F02FE
153FEB01F84948ED1F80495A4948150F495A013F170049C9FC13FE8448481606485AA200
07170E4848160C1804484893C7FCA3485AA3485AA590CCFC5AA2184018C07E4D5AA34DC7
FC7E6D15065F121F6D5D000F5E6C6C5D6D4A5A00034B5A6C6C4AC8FCD800FE141ED97F80
13F890391FF007F00107B512C0010149C9FC9038003FF03C3D7CBB3E>I<0103B77E18F8
18FE903B0007F80003FF02039138007F804A48EC1FC0F00FE0F007F0F003F84A48140119
FC180019FE4A48157EA2197FA24A5AA44AC9FCA402FE16FFA4494816FE1801A3494816FC
180319F8A24948150719F0F00FE0A24948ED1FC0A2F03F80F07F004948157E18FE4D5A4D
5A49484A5A4D5AEF1F80057FC7FC49C7EA01FEEE07F849EC3FE0B812804CC8FC16E0403B
7CBA47>I<0103B812F8A390260007F8C7121F18014B14001978A219704A481530A44A5A
A21960A24A4813101730A219004AC75AA217E0A202FE495A160F91B6FCA2495D9138FC00
0F16071603494891C8FCA31980494801061301A2F0030093C7FC49485D1806180E180C49
48151C1818183818304948157018F04D5A170349C8EA0FC0173F49913803FF80B9FC95C7
FCA23D3B7CBA40>I<DC7FE01310922607FFFC1338033F6D13709239FFC01F80913B03FE
0003C0F0DA0FF0EB00E1DA1FC0EC73E04A48143702FEC8121F495AD903F0ED0FC0495A49
481507131F4948168049C9FC13FEA24848EE030012035B00075F484816061802484893C7
FCA3485AA3485AA590CCFC48031FB512804C14C019809339001FF0006C705AA24D5AA36C
7E4D5AA26C7EA26C6C4BC7FC12076C6C5D7F6C6CEC03BE6CB4EC073ED93FC0EB3E1E9039
1FF801F80107B5EAE00C0101EC80049026001FF8C9FC3D3D7CBB44>71
D<0103B5D8FC01B512FEA390260007FCC73803FE004B5D4B5DA44A484A5AA44A484A5AA4
4A484A5AA44AC8485AA402FE4BC7FCA291B8FCA2495E02FCC8FCA349484A5AA449484A5A
A449484A5AA449484A5AA449484A5AA449C8485AA249157FB6017FB57EA3473B7CBA48>
I<0103B6FCA390260007FCC8FC6E5A4A5AA44A5AA44A5AA44A5AA44AC9FCA414FEA4495A
A4495AA4494815C0A3EF0180495AA2EF0300A249485C1706170E171E4948141C173C177C
5F49C71203EE0FF04914FFB8FC5FA2323B7CBA3B>76 D<902603FFF891380FFFFE81A290
260003FE9138007FC0F13E00DA06FF151C6F1518A26F7E020C5E82151FA24A6C6C5CA26F
7EA202306D5C1503A26F7E02604B5A821500A24A017F49C7FCA2EE3F80A24948ECC00616
1FA2EE0FE049C75C17F01607A201066E6C5AA2EE01FCA2496F5A1600A2177F495E18E017
3FA2496F5AA2170F13706001F01507EA07FCB500E0140395C8FC83473B7CBA45>78
D<0103B612F8EFFF8018E0903B0007F8001FF80203EC03FC4A48EB00FE187FF03F80A24A
4815C0A44A5AA44A48EC7F80A2F0FF00604AC7485A604D5AEF0FE002FEEC1F80057FC7FC
EE07F891B612E04992C8FC9139FC000FC0EE03F0707E49486D7EA2177EA24948147FA449
4814FEA449481301A4494813034D1330A2196049C7120119C0496E7EB691387E03809438
3F07004AEC1FFCCAEA03F83C3C7CBA41>82 D<DB1FE013809239FFFC01C002039038FF03
8091390FE01F8391391F0003C7023EEB00EF0278EC7F004A80495A4948800107151E5C13
0FA249C8120CA3171C17186E140894C7FC80808014FF6D13E06D13FEEDFFC06D14F06D80
6D6C7F021F7F02017FEC003F03037FED007F163F161F83A2160F00045E120CA4001C4BC7
FCA2161E163E003C153C003E5D5E003F1401486C495AD87DC0495AD878F0011FC8FCD870
7F137E486CB45AD8C00F13F001001380323D7BBB35>I<267FFFFC91380FFFF0B56C4A13
F84A6E13F0000190C80001130049ED00F8606000005F1701604DC7FC5F17066D5D7F5F5F
A25F17E06E5C4C5A133F4CC8FC1606A25E6E5BA2011F5C167016605EA24B5A6E48C9FCA2
010F13065DA25D1538ECF0305D13075DECF180A202F3CAFC14FEA26D5AA25C5CA25C5CA2
6D5A3D3C7BBA32>86 D<267FFFF890267FFFFC90381FFFE0B56C90B54A13F04A6D4915E0
000390C7000390C73803FE0001FCDA01FCEC00F86363000162A2505A0403150398C7FC04
071506160D621619715C043015381A3004605D6D14E004C05D0000EC01804F5ADB030014
0397C8FC03061506150E030C5D5D614B7F715B4B5D15E06D495D4A5A017F4C5A4AC7FC4E
C9FC02065D18064A5D5C605C18B04AEC3FF0604A5DA24A5D6DC8FC95CAFC133E173E013C
153CA2013815381330543C7BBA51>I<91B500FC90380FFFFC704913FE4C15FC020301C0
01031380020090C73801FC00F000F0F001C06F6C5C4EC7FC6F6C130660031F141C705B60
6F6C5B4D5A0307495A04F890C8FC17066F6C5A5F6F6C5A5F03005B705AA2167FA2163F83
167F8316DF9238018FF0ED030FED0607030C7F15184B6C7E1560EDE001DA01C07FEC0380
4AC77E140E4A6E7E14184A143F4A815C49486E7E49C8FC49150F011F82137F2603FF80EC
3FF8007F01F00103B512F0B55C6C81473B7EBA47>I<147E49B47E903907C1C38090391F
0067C0013E136F49133F5B4848131F00031580485AA2485A001FEC3F005B123FA290C712
7E5AA300FE5CA44A5A481506A3913803F00CA2127C02071318140F6C131B001E01311330
6C01E11360260783C013E03A03FF007FC0D800FCEB1F0027277DA52D>97
D<EC1FE0ECFFF8903803F01C90380FC00649C67E013E131F495B495B48485B485A120748
48137E153C001F91C7FC485AA290C9FC5AA312FEA65AA21680007C1401007EEC0300003E
14065D6C14386C14F039078003C02603E01FC7FC3800FFFCEB3FE021277DA525>99
D<163F92380FFF804B130081ED007FA2167EA45EA44B5AA44B5AA491387E07E0903801FF
87903807C1C790381F0067013EEB6FC049133F5B4848131F00035D485AA2485A001F4AC7
FC5B123FA290C7127E5AA300FE5CA44A5A481506A34A485AA2127C02075B140F6C131B00
1E01315B6C01E15B260783C013E03A03FF007FC0D800FC011FC7FC293D7DBB2D>I<EC1F
E0ECFFF8903807F03C90380F800E90383F0007137C5B485A1203485A120F49130E121F49
133C003F14F0EC0FE048B5128002F8C7FC90C9FCA2127E12FEA4127EA316801501003EEC
030015066C5C15386C6C13F00007EB03C02603E01FC7FC3800FFFCEB3FE021277DA528>
I<EC03F0EC1FFC91383E0E1C9138F8033E903901F001FEEB03E0903807C000495A011F14
FC49C7FCA2137E01FEEB01F85B1201A249EB03F01203A34848EB07E0A4ED0FC05BA30003
EC1F80A2153F6C6C137FEDFF000000EB01BF903878033FEB3C1E90381FFC7EEB07E090C7
FCA25DA44A5A121E003F5C48130348495A5D4A5A4849C7FC0078137E383C01F8381FFFE0
000390C8FC27387FA529>103 D<EB03F0EBFFF8485B7E1307A25CA4495AA4495AA449C9
FCA490387E03FCEC0FFF91383C0F8091387007C09039FCC003E0EBFD80EBFF004980485A
A25B5E48481307A44848495AA34B5A485AA24BC7FCA2485A037E13C0A348C738FC0180A2
EE030015F8007E1506A25EED7818481570007CEC3FE00038EC0F802A3D7CBB32>I<1470
14F8EB01FC1303A214F8EB01F0EB00E01400AC137CEA01FEEA038738060780000C13C012
18A2EA300FA21260EB1F80A212C0EB3F001200A2137EA25BA3485AA3485A140CA2EA07E0
1418EA0FC01430A214601380000713C0EB81803803C300EA01FEEA007C163B7EB91E>I<
ED0780ED0FC0151F16E0ED3FC0151F1680ED0F0092C7FCACEC07C0EC1FF0EC7878ECE07C
903801803C903803003EA20106137E5BA25BA2495BA290C7FCA24A5AA44A5AA44A5AA44A
5AA44A5AA44AC7FCA4147EA45C121E003F5BEA7F0100FF5B495A495A48485AD8781FC8FC
EA307EEA1FF8EA0FC0234C81B923>I<EB0FC03803FFE014C0A2EA001FA21480A4EB3F00
A4137EA45BA4485AA4485AA4485AA4485AA4485AA448C7FCA4127E1303A3EAFC06A35BA3
EA7C18A2EA3C30EA1FE0EA07C0133D7CBB1A>108 D<D801F0D91FC0EB3FC0D803FCD9FF
F0EBFFF03D061E01E07C03C0F83D0C1F07003E07007C26180F0E020C7F02986D5A003001
B05CD91FE002E0133F5F00605B4A5C193E4848C748C7127EA21200A2017E027E5CA34E5A
495CA24E5AA24848495A953807E00CA34848494890380FC018A21A301980484849481560
A21AC0953807818048484948EC870000070207EC03FE6C486D48EB00F846277EA54C>I<
D801F0EB3FC0D803FCEBFFF03A061E03C0F83A0C1F07007C26180F0C7F1498003013B0D9
1FE0133F5C12605C163E4848C7127EA21200A2017E5CA34B5A5BA24B5AA2485A923807E0
0CA3484890380FC018A21730168048481560A217C092380781804848EC87000007EC03FE
6C48EB00F82E277EA534>I<EC1FE0ECFFFC903803F03E90380FC00F90391F000780013E
EB03C04914E04914F0484813011203484814F8485AA2121F5B003F140390C7FC5AA300FE
EC07F0A3ED0FE0A216C048141F1680007CEC3F00007E143E157E003E5C5D6CEB03E06C49
5A6C6C485A2603E07EC7FC3800FFF8EB3FC025277DA52A>I<90390F8003F090391FE00F
FC903930F03C1F903A60F87007809038C078C091397D8003C02701807F0013E014FE17F0
48485AA3380601F8A21200A249481307A44948EB0FE0A317C04948131F1780A2EE3F0049
5A167E167C5E496C485A5E91386003C0ED0F8090267E383FC7FCEC1FFCEC07E091C9FC5B
A4485AA4485AA31207B512C0A32C3783A52B>I<D801F0137E3903FC03FF3A061E078180
3A0C1F0C03C03A180F180FE0ECB01F003013E0131F02C013C0006001801380ED0F0092C7
FC4848C8FCA21200A2137EA45BA4485AA4485AA4485AA4485A12076C5A23277EA527>
114 D<EC7F80903801FFE0903807C07090380E001849130C133C0138137C017813FCEB70
0113F0A29038F800F815606D1300EBFF8014FC14FF6D13806D13C06D13E0010713F0EB00
7FEC07F814011400121E123F5A4814F0A24814E04813014814C00060EB03800070EB0700
6C131E000F137C3807FFF0C613801E277CA528>I<EB01C0497E1307A2495AA4495AA449
C7FCA4137E007FB51280B6FC1500D800FCC7FCA4485AA4485AA4485AA4485AA4485A1406
A25CEA3F005CA25CA25C6C5B495AD80F07C7FCEA07FEEA01F819377DB51F>I<137C48B4
143826038780137C260607C0137E000C5D80121812304B5A38600FC0A3484848485AA212
00EB3F004B5A137EA349495AA44848495A1760A392383F00C0A3EE0180157F000014FF91
39019F030090397C031F0690393E0E0F0E90391FFC07FC903903F001F02B277EA531>I<
D903F013FC90390FFC01FF903A3C1E0303809026700F0613C0903AC0078C0FE0D80180EB
D81FD8030013F0A2000602E013C0178048ED0F0093C7FC48495AA2C7FCA24A5AA44AC8FC
A4147E1603A3001E491306123FD87F805C1381D8FF015CD9033C5B007E013E5B267C061E
5B3A381C0F0780271FF807FFC7FC3907E001F82B277EA531>120
D<137C48B4141C26038780133E260607C0133F000C157E801218123016FC48485AA33AC0
1F8001F8A21200EB3F00ED03F0137EA349EB07E0A44848EB0FC0A4ED1F80A4ED3F000000
5C5D90387C01BF90383E077EEB0FFEEB03F890C7FC5DA25D380F8001D81FC05B003F1303
5D49485A4A5A010090C7FC0030131E5C6C13F8380E03E03807FF80D801FEC8FC28387EA5
2A>I E /Fg 21 122 df<B612C0A61A067F9822>45 D<BA1280A3C601F0C7120F6D4802
0013C0013F163F181F180F18071803A2180119E0A21800A51970A217E0A21900A41601A3
16031607163F91B6FCA39138E0003F160716031601A31600A3190EA394C7121CA5193CA2
1938A21978A219F8A2F001F01803A2180F181F017F167F496CEC07FFBA12E0A33F477DC6
46>69 D<BAFCA3C601F0C7121F6D4802011380013FED007F183F181F180F1807A2180319
C0A21801A5F000E0A3EE01C01900A51603A31607160F167F91B6FCA39138E0007F160F16
071603A31601A693C9FCB1497EEBFFFCB7FCA33B477DC643>I<B77EA3C66C48CAFCEB3F
F86D5AB3B3A4F00380A4F00700A560A360181E183EA2187E18FE17011703170F013F153F
496C49B45AB9FCA339477DC641>76 D<49B414C0010FEBF001013F13FC90397E00FF03D8
01F8EB0F87D803E0EB03C74848EB01EF4848EB00FF90C8127F48153F003E151F160F5A16
07A212FC1603A46C1501A27EA26C6C91C7FC7F7FEA3FF813FF6C13F06C13FF15F06C14FE
6C6E7E6C15E06C6C806D80010F80010080020F7F02011480EC001F030313C01500EE3FE0
161FA2EE0FF0A20060150712E0A21603A37EA217E0A27EEE07C07E6C1680160F6CED1F00
01C0141ED8FDE05CD8F8F85C017E495A3AF01FE00FE0D8E007B55A010191C7FC39C0001F
F82C497AC739>83 D<003FBAFCA3903BF8000FFE000701C06D48130090C7163F007EF01F
80007C180FA200781807A300701803A500F019C0481801A5C893C7FCB3B3A64B7E92383F
FF800103B712F8A342467CC54B>I<EB03FE90383FFFC09038FC03F03901E000FCD80380
137E48C77E486C6D7E01E080001F140F6D80A26F7E6C5AA2EA0380C8FCA4EC01FF147F90
3803FF8790381FF007EB7F803801FE00EA03F8485A485A485A123F5B007F161CA248C7FC
A3150FA36C6C131B15336C6C903831F838001F14613B0FF001C0FC703B03FC0780FFE03B
00FFFE003FC0D90FF8EB1F802E2F7CAD34>97 D<EE1FC0ED1FFFA3ED007F163F161FB3A3
EC1FE0903801FFFC903807F01E90391F80079F90393F0001DF017CEB00FF4848147F0003
153F5B4848141F120F121F5B123FA2127F5BA212FFAA127FA36C7EA2121FA26C7E163F6C
7E0003157F6C6C14FF6C6C903801DFE0017E9038039FF0903B1F800F1FFFC090380FE03E
903801FFF89026003FC0EBC00032497DC739>100 D<EC7F80903803FFF090380FC0FC90
383F003F017CEB1F8049EB0FC00001EC07E0485A4848EB03F0000F15F8A24848EB01FCA2
123FA2484814FE1500A212FFA290B6FCA20180C8FCA6127FA37F123F160E121F7F000F15
1C12076D1438000315706C7E6C6C14E0013EEB03C090391F800700903807E03E903801FF
F89038003FC0272F7DAD2E>I<13FE12FFA3120312011200B3A3ED7F80913803FFF09138
0781F891380C007C4A137E4A7F4A804A131F6D5A8391C7FCA35BB3AA2603FF80EB7FF0B5
D8FE1FB512C0A332487CC739>104 D<EA01F0487E487E487EA56C5A6C5A6C5AC8FCAE13
FE127FA3120312011200B3B1EA03FFB512FCA316467DC51C>I<147C14FE497E491380A5
6D13006D5A147C91C7FCAEEC7F80EB7FFFA31300147F143FB3B3AC123E007F1400EAFF80
147EA2147C387F00FC007E5B383801F0381F03C03807FF80D801FEC7FC195B84C520>I<
13FE12FFA3120312011200B3B3B3A83803FF80B512FEA317487DC71C>108
D<D801FCD97FC0EB07FC00FF902601FFF890381FFF8091260780FC9038780FC091260E00
3E9038E003E00003011890263F01807F000149903A1F830001F800004902C6804A14CCD9
FD80D90FD8130005F88001FFC75BA3495DB3AA2603FF80D93FF8903803FF80B5D8FE0FB5
00E0B512FEA34F2D7CAC56>I<D801FCEB7F8000FF903803FFF091380781F891380C007C
000349137E0001497F000049804A131FEBFD808301FFC7FCA35BB3AA2603FF80EB7FF0B5
D8FE1FB512C0A3322D7CAC39>I<EC3FE0903801FFFC903807E03F90391F800FC090397E
0003F0496D7E48486D7E4848147E0007157F4980000F16804848EC1FC0A2003F16E0A249
140F007F16F0A300FF16F8AA007F16F0A36C6CEC1FE0A3001F16C06C6CEC3F80A26C6CEC
7F000003157E6C6C5C6C6C495A017E495A90391F800FC090390FE03F80902603FFFEC7FC
9038003FE02D2F7DAD34>I<01FE13FF00FF010713E091381F01FC913838007E0003496D
7E000101C06D7E6C6C486D7E707E91C77F496E7E160183A2707EA21880A2177F18C0AA18
8017FFA21800A24C5AA24C5A5F6D4A5A804C5A6EEB1F80496C49C7FC027813FE91381E03
F891380FFFE0DA01FEC8FC91CAFCAF3803FF80B512FEA332417DAC39>I<3901FC01FC00
FFEB07FF91380E0F809138181FC000039038303FE000011360000013C0A29039FD801FC0
ED0F80ED070001FFC8FCA45BB3A77F00037FB67EA3232D7EAC28>114
D<90381FF80690B5120E3903F0079E39078001FE000EC7127E5A003C143E48141EA212F8
150EA27EA27E7ED87FC090C7FC13FC383FFFE06C13FE6C6D7E6C14E06C80C614FC011F7F
13019038000FFF02011380EC007F0060EC1FC012E0150F7E1507A37E16807EED0F007E6C
141E6D5BD8F9E05B39F0F803E039E03FFFC026C007FCC7FC222F7DAD29>I<130EA7131E
A4133EA3137EA213FE120112031207001FB512FCB6FCA2C648C7FCB3A4150EAB017E131C
137F7F151890381F803890380FC070903807E0E0903801FFC09038007F001F417EBF28>
I<B500F890387FFFC0A30003018090381FFE006C48C7EA07F80000ED03E05F7F6D5D6E13
07013F92C7FCA26D6C130EA26E131E010F141CA26D6C5BA26E137801031470A26D6C5BA2
ECFE0101005CA291387F0380A21587023F90C8FC15CFEC1FCEA215FE6E5AA26E5AA26E5A
A36E5AA25DA214035DA24AC9FCA25C140E003C131E007E131CB4FC5C14781470485B387C
01C038380380D81E0FCAFCEA0FFEEA03F832417EAB37>121 D E
/Fh 10 115 df<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C00100A2
5C140238078006A25C141C380F0078B512F8191F7D9E1D>76 D<D801FEEC7FC0D8001EEC
FC005E0117EB0178A20127EB02F01504A215080147EB09E015111521A20187495AEB8380
1583A23A01038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C1380
001C143E3AFF8103FFC02A1F7D9E29>I<EBF180380389C038070780EA0E03121C123C38
3807001278A3EAF00EA31420EB1C40A2EA703C135C38308C80380F070013147C9317>97
D<137EEA01C138030080EA0E07121E001C1300EA3C0248C7FCA35AA5EA70011302EA3004
EA1838EA07C011147C9315>99 D<137CEA01C2EA0701120E121C123CEA3802EA780CEA7B
F0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C9315>101
D<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA3381E01C0A4EB0380A2EA0E07
130B38061700EA01E7EA0007A2130EA21230EA781C485AEA6070EA3FC0151D7F9315>
103 D<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180380F01C0120EA2381C
0380A438380700A3EB0E1000701320A2131CEB0C4000E013803860070014207D9F17>I<
13C0EA01E0A213C0C7FCA7120E12131223EA4380EA4700A21287120EA35AA3EA38401380
A21270EA31001232121C0B1F7C9E0E>I<381C0F80382630C0384740601380EB0070A200
8E13E0120EA3381C01C0A3EB038400381388A2EB0708EB031000701330383001C016147C
931A>110 D<EA1C1EEA266138278380EA47871307EB0300008EC7FC120EA35AA45AA45A
123011147C9313>114 D E /Fi 33 121 df<127012F012F8A212781208A31210A31220
A21240050E7C840D>44 D<127012F8A3127005057C840D>46 D<EA03F0EA0E1C487EEA18
06EA380738700380A400F013C0AD00701380A3EA780700381300EA1806EA1C0E6C5AEA03
F0121F7E9D17>48 D<13801203120F12F31203B3A6EA07C0EAFFFE0F1E7C9D17>I<EA03
F0EA0C1CEA100E487E00401380128000F013C0EAF803A3EA200712001480A2EB0F00130E
5B5B5B13605B485A48C7FC000613405A5A00101380EA3FFF5AB5FC121E7E9D17>I<EA03
F0EA0C1CEA100EEA200F007813801307A2EA380F12001400A2131E131C1370EA07F0EA00
3C130E130FEB0780A214C0122012F8A300F013801240EB0F00EA200EEA183CEA07F0121F
7E9D17>I<1306A2130EA2131E132EA2134E138EA2EA010E1202A212041208A212101220
A2124012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA1803EA1FFE5B5B13E00010C7
FCA6EA11F0EA161CEA180EEA10071480EA0003A214C0A3127012F0A200E013801240EB07
00EA20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA0701380E0380EA0C071218
3838030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB0380A200F013C0A51270A2
14801238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<1240387FFFE014C0A2384000
8038800100A21302485AA25B5BA25BA21360A213E05B1201A41203A76C5A131F7E9D17>
I<EA03F0EA0C0CEA1006EA3003382001801260A3127038780300123EEA3F06EA1FC8EA0F
F0EA03F8487EEA0C7EEA103F38300F80EA6007EB01C012C01300A31480EA600100201300
EA1002EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E487E13071270EB038012F0A2
14C0A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07001230EA7806130EEA700C
EA2018EA1070EA0FC0121F7E9D17>I<90380FE0109038381C309038E002703803C00139
078000F048C71270121E15305A1510127C127800F81400A7EC3FFEEC01F000781300127C
123CA27EA27E6C7E3903C001703900E002309038380C1090380FF0001F217E9F24>71
D<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F7E9E22>I<B46CEB07FE
000715C0A2D805C0130BA2D804E01313A301701323A26D1343A36D1383A290380E0103A3
EB0702A3EB0384A2EB01C8A3EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>77
D<007FB512E038780F010060EB006000401420A200C0143000801410A400001400B3497E
3803FFFC1C1F7E9E21>84 D<EA1FE0EA3030EA7818131CEA300E1200A313FEEA078EEA1E
0E1238127800F01310A3131E127838386720380F83C014147E9317>97
D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A21478A6147014F014E0
001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA0706EA1C0F1238130600
78C7FC127012F0A61270127800381380A2381C0100EA0706EA01F811147F9314>I<EB01
C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A61270A21238EA180312
0CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC
00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314>I<137CEA01C6EA03
0F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<121C12FC121CAA137C13
86EA1D03001E1380A2121CAE38FF8FF014207E9F19>104 D<1238127CA31238C7FCA612
1C12FC121CB1EAFF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B
5B136013E0EA1DF0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>
107 D<121C12FC121CB3ABEAFF8009207F9F0C>I<EA01F8EA070E381C0380383801C0A2
387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317
>111 D<EA1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>114
D<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E1306
12C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA
0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120C
EA061B3803E3F014147E9319>I<39FF9FE1FC393C078070391C030060EC8020000E1440
A214C0D80704138014E0A239038861001471A23801D032143A143E3800E01CA2EB6018EB
40081E147F9321>119 D<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813
D8EA00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC
16147F9318>I E /Fj 20 107 df<EB03C0A2805CA50030140C007C143E00FE147F007F
14FEEBC3C3391FE187F83907F18FE03900FDBF00EB3FFCEB0FF0EB03C0EB0FF0EB3FFCEB
FDBF3907F18FE0391FE187F8397FC3C3FEEB03C000FE147F007C143E0030140C00001400
A5805CA220257BA72B>3 D<EB0FF0EB7FFE48B512804814C04814E04814F04814F84814
FCA24814FEA3B7FCA86C14FEA36C14FCA26C14F86C14F06C14E06C14C06C148039007FFE
00EB0FF020207BA52B>15 D<007FB812FEBAFCA26C17FECCFCAD007FB812FEBAFCA26C17
FECCFCAD007FB812FEBAFCA26C17FE38267BA843>17 D<127012FCB4FCEA7FC0EA1FF0EA
07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007F
C0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0EF1FF01707171F
EF7FE0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07
FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC
12FC1270CCFCAD007FB812E0B912F0A26C17E0344479B643>21 D<14301478A25CA31301
5CA2495AA2495A130F91CDFC131E5B137C5B485AEA07E0EA1FC0007FBB1280BC12C0A26C
1A80D81FC0CDFCEA07E0EA01F06C7E137C133C7F7F8013076D7EA26D7EA2801300A31478
A214304A2E7AAC56>32 D<18034E7EA2727EA3851801A2727EA21978197C193C85858673
7E737EF101F8F100FE007FBB1280BC12E0A26C1A80CDEAFE00F101F8F103E04F5A4F5A97
C7FC191E61197C197861A24E5AA2180361A34E5AA272C8FC4B2E7BAC56>I<020FB51280
027F14C049B6FC01071580D91FF8C8FCEB3FC049C9FC13FCEA01F0485A485A485A90CAFC
5A121E123E123C127C1278A312F85AA2B8128017C0A2178000F0CAFCA27E1278A3127C12
3C123E121E121F7E7F6C7E6C7E6C7EEA00FC137FEB3FC0EB1FF80107B61280010115C06D
7E020F14802A3479AF39>50 D<EE0180EE03C016071780160F17005E161E163E163C167C
167816F85E15015E15035E15075E150F93C7FC5D151E153E153C157C157815F85D14015D
14035D14075D140F92C8FC5C143E143C147C147814F85C13015C13035C13075C130F91C9
FC5B131E133E133C137C137813F85B12015B12035B12075B120F90CAFC5A121E123E123C
127C127812F85A12602A4E74BC00>54 D<0060160600F0160FA26C161F0078161E007C16
3E003C163CA2003E167C001E1678A2001F16F86C16F06D1401000716E0A26D1403000316
C06D140700011680A290B7FC6C1600A30178C7121E017C143E013C143CA2013E147C011E
1478011F14F86D5CA2EC800101075CECC00301035CA2ECE00701015CA2ECF00F010091C7
FC6E5AEC781EA2EC7C3EEC3C3CEC3E7CEC1E78A2EC1FF86E5AA36E5AA26E5AA26E5A303D
80BB31>56 D<007FB612F0B712F8A27EC91278B3A6003FB612F85AA27EC91278B3A6007F
B612F8B7FCA26C15F0253C7BBB30>I<007FB712F8B812FCA27ECA123CB217182E177B9E
39>I<15301578A215F85DEB07F8EB1FFEEB7C0F9038F003E03801E0014848487ED80780
7F000F80EB00074814BE001E149EA2003EEB0F9F151FA2007E011F1380007CEB1E0FA314
3E143C00FC15C0147C1478A214F814F0A3130114E0A2130314C0A313071480A2130F1400
A2D87C1F1480131EA2007E141F133ED83E3C1400A2137CD81E78131E001F143EA2D80FF8
133C49137C0007147800035C6C48485A6D485A3903FC0F80D9DFFEC7FCEBC7F801C0C8FC
12075BA26CC9FC22487CC12B>I<14034A7EA24A7EA24A7EA24A7E143CEC7CF8EC7878A2
ECF87CECF03C0101133EECE01E0103131F4A7EA2010780EC8007010F80EC00034980011E
1301013E80013C1300A2017C800178147801F8147C49143C0001153E49141EA20003151F
498000071680491407000F16C090C812034816E0001E1501A2003E16F0003C1500007C16
F80078167800F8167C48163CA2006016182E347BB239>94 D<0060161800F0163CA26C16
7C00781678007C16F8003C16F0003E1501001E16E0A2001F15036C16C06D140700071680
6D140F000316006D5C0001151EA26D143E0000153C6D147C01781478017C14F8013C5CA2
013E1301011E5C011F13036D5CEC800701075CECC00F010391C7FCA26E5A0101131EECF0
3E0100133CECF87CEC7878A2EC7CF8EC3CF0143F6E5AA26E5AA26E5AA26EC8FC2E347BB2
39>I<126012F0B3A9B8128017C0A2178000F0CAFCB3A912602A3C7BBB35>I<15FC140FEC
3F80EC7E0014F8495A495A1307A2495AB3A9495AA249C7FC137E5BEA03F8EA7FE048C8FC
EA7FE0EA03F8C67E137E7F6D7EA26D7EB3A96D7EA213036D7E6D7E147EEC3F80EC0FFC14
001E577AC02B>102 D<127CEAFFC0EA07F0EA01F8EA007C7F7F80A26D7EB3A96D7EA26D
7E6D7E6D7E147FEC1FF8EC03FCEC1FF8EC7F0014FC495A495A495AA2495AB3A9495AA291
C7FC133E5B485AEA07F0EAFFC0007CC8FC1E577AC02B>I<14C0EB01E0A2130314C0A213
071480130F1400A25B131EA2133E133CA2137C137813F85BA212015BA212035B12075BA2
120F90C7FCA25A121EA2123E123C127C1278A212F85AA27E1278A2127C123C123E121EA2
121F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA2133E131EA2131F7FA2
1480130714C01303A214E01301A2EB00C0135678C021>I<126012F0A27E1278A2127C12
3C123E121EA2121F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA2133E13
1EA2131F7FA21480130714C01303A214E01301A2130314C0A213071480130F1400A25B13
1EA2133E133CA2137C137813F85BA212015BA212035B12075BA2120F90C7FCA25A121EA2
123E123C127C1278A212F85AA2126013567BC021>I<126012F0B3B3B3B3AD1260045776
C018>I E /Fk 71 123 df<DA07FC137F913A3FFF81FFC0913AFC03C7C0E0903B03F000
6F81F0903B07C001FF03F8903A0F8003FE0790391F0007FC5B017EED03F0923903F801E0
017C010190C7FC13FCADB812FCA32800FC0001F8C7FCB3AC486C497E3B7FFFF07FFFF8A3
353D7FBC32>11 D<EC07FCEC3FFF9138FC0380903903F000C0D907C0136090390F8001F0
4948487E491307137EA2137C01FC6D5AED00C093C7FCAAED01F8B7FCA33900FC00071501
B3AB486C497E3B7FFFF07FFFF0A32C3D7FBC30>I<DA07FCEB07FC913A3FFF803FFF913B
FE03C0FC0380903C03F00063F000C0D907C0D937C0136049489039FF8001F04948484948
7E49491407017E5CA2017C5C01FC01016E5A0300EC00C096C7FCAAF001F8BAFCA3D800FC
C738FC00071801B3AB486C496C497E297FFFF87FFFF8B512F0A3443D7FBC48>14
D<121C127FA2EAFF80A7EA7F00AB123EAB121CAB1208C7FCA8121C123E127FEAFF80A3EA
7F00123E121C093D79BC18>33 D<001C131C007E137E007F137F39FF80FF80A26D13C000
7F137FA2001C131C00001300A53901800180A33903000300A200061306A2485B485BA248
5B002013201A1A7DBB2B>I<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3
EA0300A21206A25A5AA25A12200A1A79BB18>39 D<146014E0EB01C0EB0380EB0700130E
5BA25B137813705B12015B1203A2485AA248C7FCA35A121EA2123EA2123CA2127CA51278
12F8B21278127CA5123CA2123EA2121EA2121F7EA36C7EA26C7EA212017F120013701378
13387FA27F7FEB0380EB01C0EB00E01460135678C021>I<124012E012707E7E7E7EA26C
7E7F12016C7E7F13701378A27FA27FA3131F7FA21480A21307A214C0A5130314E0B214C0
1307A51480A2130FA21400A25B131EA35BA25BA2137013F05B485A12035B48C7FCA2120E
5A5A5A5A124013567BC021>I<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8FCB3
A7151838387BB143>43 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA
0300A21206A25A5AA25A12200A1A798818>I<B512FCA516057F941D>I<121C123E127FEA
FF80A3EA7F00123E121C0909798818>I<EB03FC90381FFF8090387E07E09038F801F048
486C7E4848137C48487F48487FA248C7EA0F80A24815C0A3007EEC07E0A500FE15F0B300
7E15E0A4007F140F6C15C0A36C15806D131F000F1500A26C6C133E6C6C5B6C6C5B6C6C48
5A90387E07E090381FFF80D903FCC7FC24397DB72B>48 D<EB01C013031307131F13FFB5
FCA2131F1200B3B3A8EB7FF0007FB512F8A31D3879B72B>I<EB0FF8EB7FFF48B512C039
03E03FE039070007F8000E6D7E00186D7E481300157F481580127C00FE143F6C15C07FA4
6CC7FC123EC8FC1680157F1600A215FEA24A5A5D4A5A4A5A5D4A5A4AC7FC143E143C5C5C
495A495A495A49C8FC011E14C013381330491301491480485A48C7FC00061403000FB6FC
5A5A481500B7FCA322387CB72B>I<EB07FC90383FFF8090B512E03901F807F03903C001
F848C77E000E80D80FC07F486C7F6D1480A46C5A6C5A0001C71300C85AA25D4A5A5D4A5A
5DEC0FC0023FC7FCEB1FFCECFF8090380007E0EC01F86E7E157E157FED3F8016C0A2ED1F
E0A216F0A3123F487E487EA216E0A2153F4914C06CC7FC0070EC7F806C15006C14FE390F
8001FC3907F007F80001B512E06C6C1380D907FCC7FC24397DB72B>I<151C153CA2157C
15FCA214011403A21407140F141D141914311471146114C11301EB038114011307130E13
0C131813381330136013E0EA01C01380EA03005A12065A121C5A123012705AB712FCA3C7
3801FC00AB4A7E49B512FCA326397EB82B>I<00061406D80780131E9038F801FC90B55A
5D5D5D92C7FC5C38067FF090C9FCABEB03FCEB1FFF90387C0FC09038E003E039078001F0
90C77E0006800004147EC8FC157FED3F80A316C0A4123E127F5A7FA290C71380A248147F
00601500A26C14FE00385C6C495A6C495A6C6C485A3903E01FC06CB5C7FC6C6C5AEB0FF0
22397CB72B>I<EC1FC0ECFFF0010313FC90380FE03E90381F800690383E000349131F49
EB3F804848137F1203485AA24848EB3F00001F141E4990C7FCA2123FA2127F90C9FCA2EB
01FE903807FFC039FF0E03E090381800F849137C497F153F49EB1F80A24914C0ED0FE0A2
90C7FC16F0A37EA56C7E16E0A2121FED1FC06C7E16800007EC3F006C6C133E6C6C5B6C6C
5B90387E03F06DB45A010F1380D903FEC7FC24397DB72B>I<12301238123E003FB612F0
A316E04815C01680A20070C7EA030000601406A25D00E05C485CA25DC85A4A5AA24AC7FC
1406A25C141C141814381478147014F0A2495AA21303A31307A25C130FA3131FA5133FA9
6D5A6DC8FC243B7BB92B>I<121C123E127FEAFF80A3EA7F00123E121CC7FCB3121C123E
127FEAFF80A3EA7F00123E121C092579A418>58 D<007FB812FEBAFCA3CCFCAEBAFCA36C
17FE38167BA043>61 D<EB3FE03801FFFE3907C03F80390E000FC00018EB07E048EB03F0
4814F8140100FC14FC7E7EA3127E123CC7EA03F8A215F0EC07E0EC0FC0EC1F80EC3E0014
3C5C5C5C13015C495AA291C7FC5BA21306AA130490C8FCA8130E131F497E497EA36D5A6D
C7FC130E1E3D7BBC29>63 D<150C151EA3153FA34B7EA34B7EA39138019FE0A202037F15
0FA202077FEC0607A2020C7F1503A202187F1501A24A6C7EA34A6D7EA202E0804A133FA2
0101814A131FA249C77F91B6FCA249810106C71207A2496E7EA3496E7EA2013881013080
A20170820160157FA201F082EA03F8D80FFC4A487EB500C0013FEBFFC0A33A3D7DBC41>
65 D<DBFFC01360020713F8023F01FE13E09139FFC01F01903A03FE000783D907F8EB01
E3D90FE0EB0077D91F80143F017FC8121F01FE150F491507120148481503120749150112
0F48481500A2123F5B1860127FA25B180012FFAB127FA26D1660A2123FA27F121F18C06C
7E12076DED018012036C6CED03006C6C5D1706017F5DD91F805CD90FE05CD907F814E0D9
03FEEB03C0903A00FFC01F8091263FFFFEC7FC020713F8020013C0333D7BBB3E>67
D<B712F816FF17C0C69039C0003FF06D48EB07FCEE01FEEE007F717E717E717E717EA271
7E84170184170084A3F07F80A419C0AC1980A4F0FF00A34D5AA2604D5AA24D5A4D5A4D5A
173F4DC7FCEE01FEEE07FC496CEB3FF0B85A94C8FC16F83A3B7EBA42>I<B91280A3C690
38C000016D48EB003FEF0FC017071703A21701A21700A418E018601630A31800A31670A2
16F0150391B5FCA3EC800315001670A21630A2180CA3181893C7FCA31838A21830A21870
A218F018E017011703170F173F496CEB01FFB912C0A3363B7EBA3B>I<B812FEA3C69038
C000076D481300173F8383A283A283A418801701A21660A294C7FCA416E0A21501150791
B5FCA3EC800715011500A21660A693C8FCAEEBFFE0B612F0A3313B7EBA38>I<DB7FC013
30913807FFF8023F01FE1370913AFFC01F80F0903A01FE0003C1D907F8EB00E1D90FE014
334948141F49C8120F017E150713FE48481503484815011207491500120F48481670A348
5A1830127FA25B95C7FC12FFAB007F037FB512C0A27F9339003FF800003FEE0FF0A26C7E
A36C7E12077F12036C7E6C7E137F6D6C141F6D7E6D6C1433D907F81473D901FEEB01E190
3A00FFE00FC0023FB5EA0070020701FC13309126007FE090C7FC3A3D7BBB44>I<B6D8C0
3FB512F0A3C601C0C7383FF0006D486E5AB3A591B7FCA30280C7121FB3A7496C4A7EB6D8
C03FB512F0A33C3B7EBA41>I<B612C0A3C6EBC0006D5AB3B3AF497EB612C0A31A3B7EBA
1F>I<B612F0A3C601E0C8FCEB7F80B3AE1706A5170E170CA4171CA3173C177CA2EE01FC
EE03F8160F496C137FB8FCA32F3B7EBA36>76 D<B56C4BB5FC6E5DA2C61900D96FE0ED06
FEA3D967F0150CA2D963F81518A3D961FC1530A2D960FE1560A3027F15C0A36E6CEB0180
A26E6CEB0300A36E6C1306A36E6C5BA26E6C5BA36E6C5BA26E6C5BA3037F5BA392383F81
80A2DB1FC3C7FCA3ED0FE6A3ED07FCA26F5AA213F0486C6D5AD807FE4C7EB527F000E001
B6FCA3483B7DBA4F>I<B56C91B512F08080D8007F923807FE006EEC01F8D96FF86E5A01
671660EB63FC801361EB60FF816E7E143F816E7E140F6E7E8114036E7E816E7F157F826F
7E151F6F7E8215076F7E826F7E81EE7F8017C0163FEE1FE017F0160FEE07F817FCEE03FE
1601EE00FF18E0177F173FA2171F170FA2170701F01503486C1501EA07FEB500F0140018
60A23C3B7EBA41>I<4AB47E021F13F891387F00FED901F8EB1F80D907F0EB0FE0D90FC0
EB03F049486D7E49C87E017E157E4981000117804848ED1FC04848ED0FE0A2000F17F049
1507001F17F8491503003F17FCA3007F17FE491501A300FF17FFAB007F17FE6D1503A400
3F17FC6D1507001F17F8A26C6CED0FF0A2000717E06D151F000317C06C6CED3F806C6CED
7F00017F15FE6D5D6D6C495AD90FE0EB07F06D6C495AD901FCEB3F80D9007F01FEC7FC91
381FFFF802011380383D7BBB43>I<B712F016FF17C0C69039C0003FF06D48EB07F8707E
707E707EEF7F80A218C0173F18E0A718C0A2177F188018005F4C5A4C5AEE0FF0EE3FE091
B6128004FCC7FC0280C9FCB3A6497EB612C0A3333B7EBA3B>I<B77E16F816FEC69039C0
01FF80903A7F80003FE0EE0FF0707E707E707EA2838284A795C7FC5E5F5F4C5A4C5A4C5A
EE3F80DB01FEC8FC91B512F816E091388003F8ED007E82707E83707E83160783A683A619
30A2707EA204011460496C6D7EB600C06D13C094383F838094380FFF00CAEA01FC3C3C7E
BA3F>82 D<D90FF81360EB3FFF90B5EAC0E03901F807E13907E000F1D80F80133B90C712
1F48140F003E14071503481401A212FC1500A316607EA27E6C15007F13E0EA3FF8EBFF80
6C13F86CEBFF806C14E06C14F86C806C80013F7F01071480D9007F13C0020713E0EC007F
ED1FF0150F150716F81503124012C01501A37EA216F07E15036C15E0A26CEC07C0B4EC0F
80D8FB801400D8F1F0133ED8F0FE13FC39E03FFFF8D8C00F13E001011380253D7BBB30>
I<003FB812F8A3D9E001EB800790C7EB0001007CEE007C0078173CA20070171CA2006017
0CA500E0170E481706A4C81500B3B1020313C0010FB612F0A3373B7DBA3E>I<B500FE91
381FFFF0A3000301C0020313006C90C912FC6C17786E1570017F1660A26E15E0013F5E80
011F4B5AA26E1403010F93C7FCA26D6C1406A28001035DA26E141C01011518806D5DA26F
1370027F1460A26E6C5BA281021F495AA2EDF003020F91C8FC15F802071306A2EDFC0E02
03130C15FE02015BA215FF6E5BA216F06F5AA26F5AA36F5AA26FC9FCA315063C3C7EBA41
>86 D<B5D8FC01B500FC90383FFFE0A300079026800007018001071300000190C76C48C7
EA01FC49725A6D020116706C1A60836E7F017F618480013F4E5AA2933801BFC06D6C4DC7
FCA29338031FE06D6C1706A29338060FF06D6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA24C
6C7E6D6C5FA204707F91277F8060005CA204E014806F48EB7F81023F5F03C115C1DBE180
EB3FC3021F94C8FC03E315E303F3C7EA1FE7020F16E619F603FEEC0FFE02075EA24B1407
02035EA24B140302015EA24B140102005EA24B140003605D533C7EBA58>I<B6913807FF
FCA3000101E0020113C06C499138007E00017F16786D6C153018706D6C15606D6C5D1701
6D6C5D17036D6C92C7FC6D6C1406170E6D6D130C171C6E6C13186E6C5B17706E6C136017
E06E6C5B6F485A02071303DA03FE90C8FC5E913801FF06168C6E139CED7FD816F86F5A5E
151FB3A24B7E023FB512F0A33E3B7FBA41>89 D<EAFFF8A4EAF000B3B3B3B3A7EAFFF8A4
0D5777C018>91 D<485B485B00061306A2485B485BA2485BA2485BA3485BA500CE13CE39
FF80FF80A26D13C0007F137FA2393F803F80001F131F390E000E001A1A73BB2B>I<EAFF
F8A4EA0078B3B3B3B3A7EAFFF8A40D577FC018>I<EB1FF0EBFFFC3803E03F3907000F80
486D7E9038C003E0486C6C7E81A214006C487F6C5AC8FCA4140FEB03FFEB1FF8EBFF00EA
01FCEA07F0EA0FC0485A123F90C7FC5A007E150612FEA31401A2007EEB037C127F3A3F80
063E0C3A1FC00C3F1C3A0FF0381FF83A03FFF00FF03A007FC007C027287DA62B>97
D<EA01F812FFA312071201B1EC0FF0EC3FFEECF01F9039F9C007C09039FB0003E001FE6D
7E496D7E167C49147E163E163FA21780161FA217C0A91780A2163F1700A2167E167C6D14
FC5E01F6495A01E3495A9039E1800F809026C0F03FC7FC9038807FFCC7EA0FE02A3D7EBB
30>I<EB03FE90381FFFC090383E01F09038F800384848133C484813FC3907C001FE120F
1380121F48C712FC1578481400A2127EA212FEA9127EA2127F6C1403A26C7E15066C7E00
07140C6C6C13186C6C13306C6C13E090387E03C090381FFF00EB03FC20287DA626>I<ED
07E0EC03FFA3EC001F1507B1EB01FC90380FFF8790383F03C790387C0067D801F0133748
48131F4848130F120F491307121F48C7FCA25A127EA212FEA9127EA2127F7EA27E6D130F
120F6C6C131F6C7E6C6CEB77F86C6C9038E7FFC090383E038790381FFF07D903FCEBE000
2A3D7DBB30>I<EB03FCEB1FFF90387E07C09038F801E03901E000F0000314784848137C
48487F121F90C7123F4880A25A007E1580A212FEA2B7FCA248C9FCA5127EA3127F6CEC01
80A26C7E000FEC03007F000714066C6C5B6C6C5BD80078137090383F01E090380FFF80D9
01FEC7FC21287EA626>I<147F903801FFC0903807C0E090380F81F090381F03F8EB3E07
137CA29038FC03F09038F801E0000190C7FCAEB512FCA3D801F8C7FCB3AC487E387FFFF8
A31D3D7FBC1A>I<903907F001F890393FFE0FFC90397C1F1E3E9038F007F03A01E003E0
1C2603C00113080007ECF000000F80EB8000001F80A7000F5CEBC00100075C00035C6C6C
485A6D485A26037C1FC7FC38073FFE380607F090C9FC120EA3120FA2EA07C090B512C06C
14FC6C14FF6C1580000315C03A0F80003FE048C7EA07F0003EEC01F8003C1400127C0078
157C12F8A5007C15F8A26CEC01F06CEC03E06C6CEB07C0D803E0EB1F00D801FC13FE3900
3FFFF00107138027397EA52B>I<EA01F812FFA312071201B1EC07F8EC1FFEEC781F9138
E00F809039F98007C0D9FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A32B3C
7EBB30>I<EA0380487E487E487EA36C5A6C5A6C5AC8FCABEA03F012FFA3120F1203B3AB
487EB512C0A3123A7EB917>I<14E0EB01F0EB03F8EB07FCA3EB03F8EB01F0EB00E01400
ABEB01FC137FA3130313011300B3B3A3123C007E13F8B4FC130114F0A2387E03E0003C13
C0381C0F80380FFE00EA03F8164C84B91A>I<EA03F012FFA3120F1203B2913801FFFCA3
9138007FC0ED7E00157C157015604A5A4A5A0206C7FC5C5C5C147814FCEBF1FEEBF73EEB
FE3F9038F81F80EBF00F816E7E1403816E7E140081157E81A2ED1F8016C0486CEB3FF0B5
00C0B5FCA3283C7DBB2D>I<EA03F012FFA3120F1203B3B3AF487EB512C0A3123C7EBB17>
I<2701F803F8EB03F800FFD91FFFEB1FFF913B3C0F803C0F80913BE007C0E007C03D07F9
C003E1C003E02601FB00D9F3007F0301140101FE02FE80A2495CA2495CB3A5486C496C49
7EB500F0B500F0B512F0A344267EA549>I<3901F807F800FFEB1FFEEC781F9138E00F80
3A07F98007C02601FB007F150301FE805BA35BB3A5486C497EB500F1B512E0A32B267EA5
30>I<EB01FE90380FFFC090383F03F09038F8007C48487F48487F4848EB0F804848EB07
C0A248C7EA03E04815F0A3007EEC01F8A300FE15FCA9007E15F8A2007F14036C15F0A26C
15E06D1307000F15C06C6CEB0F806C6CEB1F006C6C133E6C6C5B90383F03F090380FFFC0
D901FEC7FC26287EA62B>I<3901F80FF000FFEB3FFEECF01F9039F9C007C03A03FB0003
E0D801FE6D7E49806F7E49147EA2167F821780A2161F17C0A91780163FA217005E167E5E
7F4B5A6D495A01FB495A9039F9800F809026F8F03FC7FCEC7FFCEC0FE091C9FCAC487EB5
12F0A32A377EA530>I<D901FC13C090380FFF0190383F03819038FC00C3D801F0136348
48133712074848131F485AA2003F140F90C7FC5AA2127E12FEA9127E127FA27EA26C7E15
1F6C7E0007143F6C6C136F6C6C13EF3900F801CF90387E070FEB1FFEEB03F890C7FCACED
1FE00203B5FCA328377DA52D>I<3903F00F8000FFEB3FE0EC70F0ECC1F83807F1833801
F303A29038F601F0EC004001FC1300A45BB3A3487EB512F8A31D267EA522>I<90387F81
803803FFE3380F807F381E001F00381307A2481303A200F01301A37EA200FE90C7FCEA7F
8013FC383FFFC06C13F06C13FC00037F6C7FD8001F13801300EC1FC00040130F00C0EB07
E014036C1301A47E15C06C13036C1480EC070000F7130E38E3C03C38C0FFF8EB3FC01B28
7DA622>I<1330A61370A413F0A21201A212031207001FB5FCB6FCA2D803F0C7FCB2EC01
80A912019038F80300A21200EB7C066D5AEB1FF8EB03F019367EB421>I<D801F8EB03F0
00FFEB01FFA30007EB000F00011403B3A51507A30000140FA26D131B017C14FC6D903873
FFE090381F81E390380FFF83903A01FE03F0002B277EA530>I<B538801FFFA33A07F800
07F86C48EB03E0ED01C06C7E16806D130300001500A2017E1306A2137F6D5BA2EC801C01
1F1318A26D6C5AA2ECE07001071360A26D6C5AA214F901015BA26DB4C7FCA3147EA2143C
A3141828267EA42D>I<B53B87FFF80FFF80A33D0FF8003FC003FC006C486DC75A00035F
701360A26C6C5E8215376C6C4B5AED77E06D01631303017E93C7FCEDE3F0017F01C15B6D
1506020113F8DA8180130E011F150C028313FC9139C3007C1C010F151802C7137E02E6EB
3E380107EC3F3002EC131FD903FC5C17E04A130F01015DA24A130701005DA24A13030260
91C8FC39267EA43E>I<B539C03FFF80A300039039001FF000C648EB0FC093C7FC017E13
0E6D130C6D6C5AECC038010F5B6D6C5A6D6C5AECF980EB01FB6DB4C8FC147E147F80814A
7EEC6FE014C7903801C3F090380381F8EC01FCEB0600010E137E497F49800130131F0170
6D7ED801F880000F4A7ED8FFFE90387FFFC0A32A257FA42D>I<B538801FFFA33A07F800
07F86C48EB03E0ED01C06C6C1480A26D130300001500A2017E1306A2017F130E6D130CA2
6D6C5AA2ECC038010F1330A26D6C5AA2ECF0E001035B14F8903801F980A214FF6D90C7FC
A2147EA2143CA31418A25CA35CA25C1210EA7C0100FE5BA249C8FC5BEAFC0EEA701C6C5A
EA1FF0EA07C028377EA42D>I<003FB512FEA290388000FC393E0001F8003C1303003814
F00030EB07E00070130FEC1FC000601480EC3F005C147E5CEA0001495A5C495A130F5C49
5A013F1303EB7F00137E5B1201491307485A12074848130649130E485A003F141E90C712
7E007EEB01FEB6FCA220257EA426>I E /Fl 50 122 df<92260FFF80EB7FE04AB539F0
07FFFC020FDAFC3F7F023F91B712809126FFFC0014C0010301C0030113C049D9000113FC
49484B4813E049485B4A15F0495A4E6C13C0495A706E1380F27F00DC007F141C97C7FCAA
BBFCA526007FF0C7D87FF0C8FCB3B2003FB5D8E03FB512F8A54B487EC745>11
D<923807FF804AB512F0020F14FC023F809139FFFC00FF4901C0EB3F80010790C7487E49
48EB01FF4948814A5B495AA2495AA4705B705B053EC7FC94C8FCA693383FFFF0B9FCA526
007FF0C7FC177FB3B1003FB5D8E03FB512E0A53B487EC742>I<EA07C0EA1FF0EA3FFC12
7F7F12FF7FA21480A37EA27E7EEA07E7EA0007A2EB0F00A4131EA25BA25B13F85B120148
5A485A485A48C7FC121E120C1124788F21>44 D<B612FEAA1F0A7F9B28>I<EA07E0EA0F
F0EA3FFCA2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0C7FCAEEA07E0EA0FF0EA3FFC
A2EA7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E0102E78AD21>58
D<903803FFF0013FEBFF8090B612E0000315F83A0FFE007FFED81FE0EB0FFFD83F806D13
807F486C6D13C07F00FF16E07FA46C5A17C06C485B6C4815800007C75AC84813004B5A4B
5AEDFFF016C04A5B4A48C7FC5D4A5A5D4A5A5D4A5AA292C8FC5C143EAA143CA291C9FCA8
147E14FF497F497F497F497FA66D5B6D5B6D5B6D90C8FC147E2B487AC738>63
D<EE03E04C7EA24C7EA34C7EA24C7EA24C7EA393B57EA24B80A34B8016EF03078016CF16
C7030F801683031F801601033F80153E82037E80037C7F03FC815D830201824B7F020382
5D830207824B7F020F824B7F021F8292C7FC834AB77EA24A82A302FCC86C7F4A81010184
5C840103844A810107844A81010F845C84011F8491C97ED97FC083B66C0103B71280A551
487CC75A>65 D<B912E018FEF0FFC019F085D8001F902680000113FE716C7E727F727F84
727F86A28486A862606260624E5B4E90C7FC4E5A4D485A050713F092B712C04EC8FCF0FF
C019F80380C713FE95381FFF80727F060313F08684727F86A2737EA31B80A285A361A31B
00A296B5FC62604E5B4E5B4E5B063F5B95B55ABB5A4FC7FC19F819C006FCC8FC49477CC6
54>I<DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF81023FD9
F80013C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F4949153F4990C9
121F4948160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA25A91CBFC
1A00A2B5FCAD7EA36E173E7EA37E806C197CA26C7F1AF86C7F19016C6D17F06C6DEE03E0
6D6C16076D6CEE0FC06D6DED1F806D6DED3F006D01F015FE010101FC4A5A6DD9FF80EB0F
F8023F01F8EB7FF0020F90B612C0020393C7FCDA007F14FC030F14E09226003FFEC8FC47
4979C756>I<B912C018FEF0FFC019F019FCD8001F902680000713FFDD007F7F060F13E0
727F06017F727F737E737E857313801BC0851BE0851BF0A21BF885A21BFCA51BFE85AC61
1BFCA41BF8A34F13F0A34F13E0A24F13C01B80614F130062F1FFFC4E5B4E5B060F5B067F
5B0507B5C7FCBA5A19F819C04EC8FC18C04F477CC65B>I<BA12FEA485D8001F9038C000
01EF001F180784180085A2851A80191FA3190FA2173EA2F107C0A4057E90C7FCA317FE16
01160F92B5FCA5EDC00F16011600177EA3053E147CA31AF8A394C8FC19011AF0A31903A2
19071AE0190F191F193F197F19FF060313C0180F95B5FCBBFCA21A80A346467CC54E>I<
DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF81023FD9F80013
C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F4949153F4990C9121F49
48160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA25A91CBFC97C7FC
A2B5FCAC057FB612FE7EA280A26C93C7EBFE00A37E807EA26C7FA26C7F807E6C7F6D7E6D
7E6D7F6D01E05C6D6D5C010101FC5C6DD9FF80131F023F01FCEBFFC7020F90B612830203
EDFE00DA007F02F8133E030F02E0130E9226003FFEC9FC4F4979C75D>71
D<B7D8F801B712F0A5D8001F01C0C8003FEB8000B3A992B9FCA503C0C8123FB3ABB7D8F8
01B712F0A554477CC65D>I<B712F8A5D8001FEBC000B3B3B3A7B712F8A525477CC62D>I<
49B712E0A590C70007EBE000B3B3AAEA07E0487E487E487E487EB5FCA44B5BA2495D007F
5C4992C7FC6C48495AD81FE0495A3A0FFE03FFF86CB612E0000115806C6C49C8FC010713
E033487EC63D>I<B8FCA5D8001F01C0C9FCB3B3A219F8A4F001F0A51803A31807A2F00F
E0181FA2183F187F18FF1703170F177FBA12C0A53D477CC647>76
D<B600E00503B6FC6F5FA26F5FA2D8001FF3F8006F171EA2DABFFE5FA2DA9FFF5FA2028F
6D5EA202876D4B5AA302836D4B5AA202816D4B5AA202806D4B5AA26F6C151EA36F6C5DA2
6F6C5DA26F6D5CA26F6D495AA26F6D495AA36F6D495AA26F6D49C7FCA2706C131EA2706C
5BA2706C5BA3706D5AA270EBC1E0A270EBE3C0A270EBF780A37001FFC8FCA2715AA2715A
A2715AA2D97FE06E5AB600F00407B7FCA2715AA2715A68477CC671>I<B600C092B612F0
81818181D8001F9439007FE0006FEE1F8081828202BF7F149F82028F7F02877F02837F02
817F1480836F7F6F7F6F7F6F7F81836F7F6F7F6F80707F8284707F707F707F707F707FA2
7014807113C07113E07113F07113F8A27113FC7113FE7113FF71149F7213DFA27213FF84
848484A28484858585A285858585D97FE082B612F01A7F1A3F1A1F74C7FC54477CC65D>
I<923803FFF0037FEBFF800203B612F0020F15FC023F9038807FFF9127FFF8000713C001
0301E0010113F049496D7F4990C8EA3FFC49486F7E49486F7E017F8449486F7F48496F7F
48854A8148854A814885A24849707EA24885A34890CA6C1380A5B519C0AE6C1A80A26E5E
A26C1A00A36C6D4C5AA36C6D4B5BA26C616C6D4B5B6E5D6C616C6D4B5B6D6C4B5B6E5D6D
6D4A90C7FC010F6DECFFFC6D01F001035B6D01FC010F5B01009026FF807F13C06E90B65A
020F03FCC8FC020315F0DA007F1480030301F0C9FC4A4979C759>I<B97E18F818FF19C0
19F0D8001F902680000F13FC05017F716C7E7213807213C0841AE0A27213F0A31AF8A81A
F0A34E13E0A21AC04E1380604E1300943801FFFC050F5B92B75A19C04EC7FC18F003C0CA
FCB3A9B712F8A545477CC651>I<B812FCEFFFF018FE727E19E0D8001F902680001F13F8
05017F716CB4FC727F84727F86A2727FA286A862A24E5BA2624E5B4E90C8FCF0FFFE0503
13F8051F5B92B712C04EC9FC18F818FE923A80007FFF80051F7F05077F717F717F85717F
A2187F85A786A51CE0F301F01AC0A2841B037201E013E0721407B700F06D01F013C07290
38FC1F807290B51200726C5B071F5BCD13F054487CC659>82 D<DA7FF013070107B55B01
1FECC01F017FECF03F90B6EAFC7F00039039C00FFEFF4848C7B5FC49143F484880484814
074980003F815B007F8183A200FF82A37F837F7F7F01FF92C7FC6C13C014FEECFFE06C14
FF16F06C15FC16FF6C16C06C82836C82C6826D81131F6D811301D9001F15801401DA000F
14C01500161F7013E0828200788100F881A2177FA37E18C0A27E18806C16FF7F6D16006D
4A5A01F8140301FE4A5A6D6C495A02FCEB7FF0D8FE3FB65AD8FC0F1580D8F80392C7FC48
C66C13F848010313C0334979C742>I<003FBBFCA5DA00039038F8003FD87FF805071380
01E01701498349187F90C7173FA2007E191FA21A0F127CA400FC1AC0481907A5C894C7FC
B3B3A40103B812F8A54A467CC553>I<B700F849B612C0A5D8001F01C0C96CC7FC1A3EB3
B3AA6D187E1A7C811AFC6D6019016D7F6D4D5A6F4B5A7F6E6CED1FC06E6C4B5A6E6C6C02
FFC8FC6E01E0EB07FE020301FEEB7FFC6E90B612F06E6C5D030F1580030102FCC9FCDB00
0F13C052487CC65B>I<B700E0021FB512E0A5C66C0180C9383FE0006D6DEE0F801A1F6D
96C7FC6F5E6D183E811A7E6D6D167C1AFC6D6D5E19016D606F15036D608119076E6D5D19
0F6E6D5D191F6E94C8FC705C6E163E82197E6E6D147C19FC6E6D5C18016E5E7013036E5E
8218076F01805B180F6F01C05B181F6F92C9FC715AA26FEBF03E187E6FEBF87C18FC6F5C
17FD6F5C17FFA26F5CA2705BA2705BA27090CAFCA3705AA2705AA2705AA2705A53487DC6
5A>I<B7D8C03FB600F0011FB512F0A5C66C90C8001F01E0C8380FF80072EF03E06F7015
076D65846F70150F6D70606F1A1F6D7293C7FC846F705D6D1C3E814E6D157E6D1C7C6F71
14FC6D4C5FA26F4A6E13016D059F5E6F19036E031F6E5C190F707013076E033F5F70EB3E
07067E6E130F6EDB7C035E70181F6E03FC6E91C8FC4E7EDCF0016F5B6E4B6C153E16F86E
02036F5B4E7F04FCEF80FC6E02075F4E7FDCFE0F16C16E4B6D5C04FF17C36F011FEEE3E0
95C77E059F16F76F01BE6E5C17FE1CFF6F496E5CA26F96C9FC4D80A26F496E5BA26F604D
157FA26F604D153FA26F496F5AA2047F5F94C9120FA2043E705A74487DC67B>I<903807
FFFC017FEBFFC048B612F84815FE3A07FE001FFF6D010313C0486D6C7F6F7F167F83A26C
90C76C7EA26C5AEA00F890C8FCA40207B5FC91B6FC1307013FEBE03F9038FFFE00000313
F04813C04890C7FC485A485A485AA2485AA5167F6C6C14FFED01EF6C6C130301FF903807
CFFF000F9026C03F8F13F86C90B5000713FC0001ECFC036C6CEBF0010103903980007FF8
362E7DAD3A>97 D<EB7FC0B5FCA512037EB3ED0FFC92387FFFC002C3B512F002CF14FC91
39DFF00FFF9126FF80037F4A486C7F02F86D7F4A6E7E4A6E7E84171F84A2170F84A31980
AA1900A34D5AA260A24D5A806E4A5A6E4A5A6E495B02BF01075B91271FE01FFEC7FC496C
B55AD9FC0314F049C6148049D91FF8C8FC39487CC742>I<91381FFFC091B512F8010714
FE011FECFF8090267FFC0013C09038FFE00148494813E0481380481300485AA248486D13
C0123F6F1380EE3E00484891C7FCA312FFAA127FA27F123FA217F86C7E120F6DEC01F06C
6D13036C6DEB07E06C6DEB0FC06C6DEB1F80D97FFEEBFF00011FB55A010714F8010014E0
DA1FFEC7FC2D2E7CAD35>I<EF7FC093B5FCA5160382B3EC0FFC91B51281010714E1011F
14F990263FFC03B5FC9039FFF0007F4801C0131F48497F4890C77E484880A2485AA2123F
A2485AA312FFAA127FA3123F7FA2121F7F000F5D6C6C5C6C6D5B6C6D5B6C6D90B57E9027
7FF807FBEBFF80011FB512F3010714C3010114039038001FF839487CC742>I<EC1FFE49
B512E0010714F8011F14FE90397FFC07FF9026FFE0011380489039C0007FC04849EB3FE0
4890C713F04848141F001FED0FF85B003F16FC1607127F5B17FEA212FFA290B7FCA317FC
01F8C9FCA4127FA27F123FA2171C6C6C153E120F6D157E6C16FC6C6DEB01F86C6DEB03F0
26007FF0EB1FE0D93FFEEBFFC06DB612800107ECFE00010014F8020F13802F2E7DAD36>
I<EDFFC0020F13F8027F7F49B6FC4913814948481380EB0FF849484813C0133F14E0137F
4A6C138013FF6F13006F5A163893C7FCAAB612FEA5C601E0C8FCB3B2007FEBFFF0A52A48
7DC724>I<EF1F80DA7FF8EB7FE00103B53801FFF0011F14E7499138FFE7F89026FFE01F
130F4890388007FE4890380003FF48486DEB87F0A248486DEBC1C0EFC000A2001F82A600
0F5EA36C6C495BA26C6C4990C7FC6C6D485A6C9038E01FFC91B512F0485DD803C391C8FC
9038C07FF8000790CAFCA47F7F7F90B612F016FF6C16E017F86C16FE836C17807F0003B8
12C0120FD81FF8C7001F13E0D83FE0140148489138007FF0173F4848151FA56C6CED3FE0
A26C6CED7FC06D15FFD81FFC020313806CB4020F1300000301F0EBFFFCC690B612F0013F
15C001074AC7FCD9003F13C035447DAE3B>I<EB7FC0B5FCA512037EB3923801FFC0030F
13F8033F13FE92B6FC9126C1FC077F9126C3E0037F9138C7C001DACF008002DE7F14DC02
FC815C5CA35CB3A8B6D8C07FEBFFE0A53B487CC742>I<13FC487E487E4813804813C048
13E0A66C13C06C13806C13006C5A6C5A90C7FCABEB7FC0B5FCA512037EB3B0B6FCA51849
7CC820>I<EB7FC0B5FCA512037EB393387FFFF8A5933807FE0017F04C5AEE3FC04C5A04
FEC7FC4B5AED07F84B5AED1FC04B5A03FFC8FCECC1FEECC3FF02CF7F02DF7F91B5FC8282
02FC7F4A6C7EECE03F4A6C7E826F7F6F7F816F7F836F7F707E163F707E707E188018C0B6
D8807F13FFA538487CC73F>107 D<EB7FC0B5FCA512037EB3B3B3A6B61280A519487CC7
20>I<90287FC001FFC0ECFFE0B5010F01F8010713FC033F01FE011F13FF92B6017F8091
26C1FC07902680FE037F9126C3E0039026C1F0017F00039026C7C0019038C3E0006CD9CF
00DAE7808002DE6D01EFC7127F02DC15EE02FC03FE814A5D4A5DA34A5DB3A8B6D8C07F90
26FFE03FB512F0A55C2E7CAD63>I<903A7FC001FFC0B5010F13F8033F13FE92B6FC9126
C1FC077F9126C3E0037F00039038C7C0016CD9CF008002DE7F14DC02FC815C5CA35CB3A8
B6D8C07FEBFFE0A53B2E7CAD42>I<EC0FFF91B512F0010714FE011F6E7E90263FFC037F
903AFFE0007FF0480180EB1FF84890C76C7E48486E7E000F824980001F1780003F17C049
80A2007F17E0A300FF17F0AA007F17E0A46C6C4A13C0A2001F17806D5C000F17006C6C4A
5A6C6D495A6C6D495A6C6D495A903A7FFC03FFE0011FB6128001074AC7FC010014F0020F
90C8FC342E7DAD3B>I<90397FC00FFCB590387FFFC002C3B512F002CF14FC9139DFF01F
FF9126FF80077F000349486C7F6C01F801007F4A814A6E7E717EA284171FA284A2831980
AA19005FA260A24D5AA24D5A806E4A5A6E495B6E495B6E010F5B9226E03FFEC7FC02EFB5
5A02E314F002E01480DB1FF8C8FC92CAFCAFB612C0A539427CAD42>I<DA0FFCEB03C091
B513070107ECC00F011FECF01F90393FFE03F8903AFFF800FC3F4801E0EB3E7F4849131F
484914FF4890C77E82485A82485A82127FA25B12FFAA127F7FA2123FA26D5C121F5E6C6C
5C6C6D5B6C5D6C01E05B6C6D90B5FC90397FFC07FB011FB512F3010714C3010114039038
001FF891C7FCAF4BB61280A539427CAD3F>I<9039FF803F80B5EBFFF0028313FC02877F
91388FC3FF15070003D99E0F13806C13BC14B814F814F06F1300A24A6C5AED00F893C7FC
A25CB3A6B612E0A5292E7CAD31>I<D90FFF13E0017F13E348B6FC1207380FF801391FC0
003F4848130F90C712075A15035AA27F7F01F090C7FC13FEEBFFF86CEBFFC015F06C14FC
6C14FF6C15806C15C06C15E0C615F0133F010314F8EB001F020013FC151F0078140F00F8
140715037EA26C15F8A27E6DEB07F06D130F01F0EB1FE001FCEBFFC090B61280D8FC7FEB
FE00D8F81F13F8D8E0031380262E7CAD2F>I<EB01F0A61303A31307A3130FA2131F133F
A2137FEA01FF5A000F90B512E0B7FCA4C601F0C7FCB3A516F8A9017FEB01F014F8013FEB
03E014FC90391FFE0FC06DB512800103140001005BEC1FF025427EC12E>I<D97FE0EC3F
F0B5EC7FFFA5000315016C81B3A85EA35E6C5DEE0F7F017F141F6E013E7FD93FFC01FCEB
FFE06DB512F8010714E0010114809039003FFE003B2E7CAD42>I<B649B5FCA5000301E0
9038001FC06C6DEC0F80171F6C17006E5C017F153E6E147E013F157C6E14FC011F5D6E13
016D5DED80036D5D15C016076D5DEDE00F6D5DEDF01F6D92C7FC6F5A027F133EEDFC7E02
3F137CEDFEFC021F5B15FFA26E5BA26E5BA26E5BA26E5BA26E90C8FCA2157E153C382E7D
AD3F>I<B60007B539E003FFFEA500039027C0001FFCC7EA3FC06E010FED1F806C1A0083
6E01075D6C4B6C143E6E177E017F187C4C7F6E17FC013F4A6D5B6E013E1401011F04E05B
167E6ED97C7F13036D02FC01F05B922680F83F13076D04F85B15819226C1F01F130F6D01
C302FC5B9226E3E00F131F6D04FE90C7FC15E79226F7C0075B6D01FFECFF3E4C6C137E6E
5EA24C7E6E5E4B7F021F5EA24B147F020F5E4B143F02075EA26E486E5A6E486EC8FC4F2E
7DAD56>I<007FB5D8800FB5FCA528007FF8000190C7FC6E14FC6D6C495A6D6C495A6D5D
6D6D485A6F485A6DEBE03F6D6D48C8FC6DEBF8FE91387FF9FC6EB45A5E6E5B6E5B80806E
7F82824A7F825C91380FEFFFDA1FCF7FDA3F877FDA7F037FECFE0149486C7F4A6D7E4948
8049486D7E010F6E7E49487F49486D7F01FF6E7FB500F8013FEBFFC0A53A2E7EAD3F>I<
007FB56C90B51280A5000101F0C7380FE0006C6D6E5A170F017F5E6E141F013F93C7FC6E
5C011F153E6E147E6D157C6F13FC6D5DEDC0016D5D15E016036D5DEDF0076D5DEDF80F02
7F5CEDFC1F023F91C8FC6F5A021F133EEDFF7E6E137C16FCA26E5BA26E5BA26E5BA26E5B
A26F5AA26FC9FCA3153E157E157C15FCD81F805B383FC001D87FE05B38FFF0035D14074A
5A4A5A143F6C4848CAFCEB43FE383FFFF86C5B000713C0D801FECBFC39427EAD3F>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
% %%Page: 23 1
%%Page: 1 1
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
23 1 bop 25 160 a Fl(T)-10 b(raining)41 b(Examples)f(for)h
Fg(Enjo)m(ySp)s(ort)1775 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1775 160 a 0 321 1947
2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 0 538 2202 2 v -1 642 2 104 v 73
611 a Fk(Sky)107 b(T)-7 b(emp)69 b(Humid)81 b(Wind)71
b(W)-7 b(ater)57 b(F)-7 b(orecst)57 b(Enjo)n(ySpt)p 2201
642 V 0 644 2202 2 v -1 747 2 104 v 25 716 a(Sunn)n(y)49
b(W)-7 b(arm)49 b(Normal)g(Strong)g(W)-7 b(arm)90 b(Same)198
b(Y)-7 b(es)p 2201 747 V -1 851 V 25 820 a(Sunn)n(y)49
b(W)-7 b(arm)99 b(High)i(Strong)49 b(W)-7 b(arm)90 b(Same)198
b(Y)-7 b(es)p 2201 851 V -1 955 V 31 924 a(Rain)n(y)85
b(Cold)127 b(High)101 b(Strong)49 b(W)-7 b(arm)49 b(Change)170
b(No)p 2201 955 V -1 1059 V 25 1028 a(Sunn)n(y)49 b(W)-7
b(arm)99 b(High)i(Strong)77 b(Co)r(ol)i(Change)159 b(Y)-7
b(es)p 2201 1059 V 0 1060 2202 2 v 423 1224 a(What)30
b(is)f(the)g(general)h(concept?)0 2748 y Fi(23)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 24 2
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
24 2 bop 25 160 a Fl(Represen)m(ting)42 b(Hyp)s(otheses)1384
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1384 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fk(Man)n(y)29 b(p)r(ossible)h(represen)n(tations)0 692
y(Here,)e Ff(h)h Fk(is)g(conjunction)i(of)e(constrain)n(ts)h(on)e
(attributes)0 845 y(Eac)n(h)g(constrain)n(t)i(can)f(b)r(e)40
991 y Fj(\017)21 b Fk(a)29 b(sp)r(ec\014c)g(v)-5 b(alue)30
b(\(e.g.,)g Ff(W)12 b(ater)27 b Fk(=)d Ff(W)12 b(ar)r(m)p
Fk(\))40 1136 y Fj(\017)21 b Fk(don't)29 b(care)g(\(e.g.,)g(\\)p
Ff(W)12 b(ater)27 b Fk(=?"\))40 1281 y Fj(\017)21 b Fk(no)28
b(v)-5 b(alue)31 b(allo)n(w)n(ed)f(\(e.g.,\\W)-7 b(ater=)p
Fj(;)p Fk("\))0 1427 y(F)g(or)28 b(example,)100 1520
y(Sky)126 b(AirT)-7 b(emp)49 b(Humid)78 b(Wind)j(W)-7
b(ater)51 b(F)-7 b(orecst)25 1624 y Fj(h)p Ff(S)5 b(unny)200
b Fk(?)304 b(?)157 b Ff(S)5 b(tr)r(ong)147 b Fk(?)153
b Ff(S)5 b(ame)p Fj(i)0 2748 y Fi(24)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 25 3
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
25 3 bop 25 155 a Fl(Protot)m(ypical)44 b(Concept)f(Learning)h(T)-10
b(ask)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 567 a
0 0 0 setrgbcolor
 0 567
a 40 685 a Fj(\017)21 b Fe(Giv)m(en:)125 830 y({)g Fk(Instances)30
b Ff(X)7 b Fk(:)38 b(P)n(ossible)30 b(da)n(ys,)e(eac)n(h)h(describ)r
(ed)h(b)n(y)195 934 y(the)f(attributes)i Fd(Sky,)g(A)n(irT)-7
b(emp,)32 b(Humidity,)195 1037 y(Wind,)g(Water,)f(F)-7
b(or)l(e)l(c)l(ast)125 1162 y Fe({)21 b Fk(T)-7 b(arget)29
b(function)i Ff(c)p Fk(:)38 b Ff(E)5 b(nj)g(oy)s(S)g(por)r(t)24
b Fk(:)f Ff(X)31 b Fj(!)24 b(f)p Fk(0)p Ff(;)15 b Fk(1)p
Fj(g)125 1287 y Fe({)21 b Fk(Hyp)r(otheses)30 b Ff(H)7
b Fk(:)38 b(Conjunctions)30 b(of)f(literals.)41 b(E.g.)657
1440 y Fj(h)p Fk(?)p Ff(;)14 b(C)6 b(ol)r(d;)13 b(H)7
b(ig)s(h;)13 b Fk(?)p Ff(;)h Fk(?)p Ff(;)g Fk(?)p Fj(i)p
Ff(:)125 1604 y Fe({)21 b Fk(T)-7 b(raining)30 b(examples)f
Ff(D)r Fk(:)39 b(P)n(ositiv)n(e)31 b(and)d(negativ)n(e)195
1708 y(examples)h(of)g(the)h(target)f(function)600 1861
y Fj(h)p Ff(x)682 1874 y Fc(1)715 1861 y Ff(;)14 b(c)p
Fk(\()p Ff(x)872 1874 y Fc(1)905 1861 y Fk(\))p Fj(i)p
Ff(;)h(:)f(:)h(:)f Fj(h)p Ff(x)1207 1874 y Fb(m)1262
1861 y Ff(;)g(c)p Fk(\()p Ff(x)1419 1874 y Fb(m)1475
1861 y Fk(\))p Fj(i)40 2025 y(\017)21 b Fe(Determine:)40
b Fk(A)28 b(h)n(yp)r(othesis)i Ff(h)f Fk(in)g Ff(H)35
b Fk(suc)n(h)29 b(that)104 2129 y Ff(h)p Fk(\()p Ff(x)p
Fk(\))24 b(=)g Ff(c)p Fk(\()p Ff(x)p Fk(\))30 b(for)f(all)i
Ff(x)e Fk(in)g Ff(D)r Fk(.)0 2748 y Fi(25)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 26 4
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
26 4 bop 21 861 a Fe(The)33 b(inductiv)m(e)i(learning)g(h)m(yp)s
(othesis:)41 b Fk(An)n(y)104 965 y(h)n(yp)r(othesis)30
b(found)f(to)g(appro)n(ximate)f(the)i(target)104 1068
y(function)g(w)n(ell)h(o)n(v)n(er)d(a)h(su\016cien)n(tly)i(large)e(set)
h(of)104 1172 y(training)g(examples)f(will)j(also)e(appro)n(ximate)e
(the)104 1276 y(target)i(function)g(w)n(ell)g(o)n(v)n(er)f(other)g
(unobserv)n(ed)104 1380 y(examples.)0 2748 y Fi(26)357
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n
(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 27 5
grestore sheetsave restore
showsheet
%%Page: 2 2
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
27 5 bop 25 155 a Fl(Instance,)101 b(Hyp)s(otheses,)i(and)89
b(More-)25 279 y(General-Than)784 279 y
0.8666 0.03137 0.02352 setrgbcolor
 784 279 a 0 414
1947 2 v 0 567 a
0 0 0 setrgbcolor
 0 567 a 29 571 a
 33154007 20223940 1578762 31838371 29601792 49204756 startTexFig
 29 571 a
%%BeginDocument: ./bookps/vs-gen-spec.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 4.80467 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -1 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 248 -1 ] concat
%I
71 698 250 898 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 339 666.767 ] concat
%I
[
(h  = <Sunny, ?, ?, Strong, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 339 648 ] concat
%I
[
(h  = <Sunny, ?, ?, ?, ?, ?>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 339 628 ] concat
%I
[
(h  = <Sunny, ?, ?, ?, Cool, ?>)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -94.4893 157.997 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -36.4908 96.003 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -93.459 100.018 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.505 134.003 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 224.508 102.004 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 174.507 102.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -92.4672 34.0288 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 2.50075 95.0092 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -31.4808 157.992 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -12.4967 33.0292 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 166.44 40.0295 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -53.4757 52.0281 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 172.444 163.99 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 193.439 72.0266 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 274.412 103.018 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 29.5055 161.999 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 251.427 72.0355 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.12166 0 0 1.09006 -5.22615 306.066 ] concat
%I
129 460 19 36 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.912706 0 0 0.841794 57.1093 411.164 ] concat
%I
127 457 45 18 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 0 0 0.999631 72.973 271.9 ] concat
%I
98 523 62 80 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 222.423 40.0325 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 278.405 38.0361 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 143.458 76.025 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 15.9941 339.874 ] concat
%I
350 463 368 434 Line
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 15.9941 339.874 ] concat
%I
398 465 367 436 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 399.966 772.065 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 392.913 779.069 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 375.956 802.05 ] concat
%I
[
()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 368.431 811.056 ] concat
%I
[
(h)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 427.45 803.051 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 420.908 811.053 ] concat
%I
[
(h)
] Text
End

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 15.9941 339.874 ] concat
%I
399 465 425 434 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 126 930.003 ] concat
%I
[
(Instances X)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 368 929.003 ] concat
%I
[
(Hypotheses H)
] Text
End

Begin %I Line
%I b 65535
1 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 -2.99892 310.885 ] concat
%I
513 570 513 407 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 870.002 ] concat
%I
[
(Specific)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 518 746.002 ] concat
%I
[
(General)
] Text
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.08822 0 0 0.651933 -14.949 502.243 ] concat
%I 3
349 465
255 452
211 452
3 BSpl
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -14.493 64.0207 ] concat
%I
189 703 3 3 Elli
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 0 0 0.999631 15.9941 339.874 ] concat
%I 3
368 436
346 420
212 419
3 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 144.714 795.704 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 138.016 804.062 ] concat
%I
[
(x)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 19.4974 64.0236 ] concat
%I
189 703 3 3 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 201.477 763.073 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 194.522 772.077 ] concat
%I
[
(x)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 42.75 659.25 ] concat
%I
[
()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 34.5103 666.767 ] concat
%I
[
(x  = <Sunny, Warm, High, Strong, Cool, Same>)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 42.3746 638.939 ] concat
%I
[
()
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 35.0103 648 ] concat
%I
[
(x  = <Sunny, Warm, High, Light, Warm, Same>)
] Text
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -52.4731 116.007 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 230.491 163.998 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 200.505 132.013 ] concat
%I
189 703 3 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 285.477 160.005 ] concat
%I
189 703 3 3 Elli
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
228 284 251 313 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 184.932 459.83 ] concat
%I
221 287 199 312 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
173 287 194 311 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
279 284 256 312 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
258 379 285 402 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
252 381 235 405 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
206 379 231 406 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
178 351 200 373 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
229 349 251 374 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
201 377 178 404 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
166 288 148 316 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
150 321 174 344 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 186.931 458.831 ] concat
%I
227 349 206 372 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 30.9886 458.831 ] concat
%I
431 352 413 375 Line
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.999631 0 0 0.999631 31.9882 458.831 ] concat
%I
412 319 432 344 Line
End

Begin %I BSpl
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.999631 0 0 0.999631 31.9882 459.83 ] concat
%I 4
380 346
321 370
206 373
129 363
4 BSpl
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 374 802.5 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 40 661 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 40.5 638.939 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 346 661 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 346 638.939 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 346 620 ] concat
%I
[
(3)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fi(27)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 28 6
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
28 6 bop 25 160 a Fg(Find-S)42 b Fl(Algorithm)941 160
y
0.8666 0.03137 0.02352 setrgbcolor
 941 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 16 592 a Fk(1.)21
b(Initiali)q(ze)32 b Ff(h)c Fk(to)i(the)f(most)f(sp)r(eci\014c)i(h)n
(yp)r(othesis)h(in)e Ff(H)16 737 y Fk(2.)21 b(F)-7 b(or)28
b(eac)n(h)h(p)r(ositiv)n(e)j(training)e(instance)g Ff(x)131
883 y Fj(\017)21 b Fk(F)-7 b(or)29 b(eac)n(h)f(attribute)j(constrain)n
(t)f Ff(a)1357 896 y Fb(i)1409 883 y Fk(in)f Ff(h)273
1007 y Fk(If)g(the)g(constrain)n(t)h Ff(a)957 1020 y
Fb(i)1009 1007 y Fk(in)f Ff(h)g Fk(is)g(satis\014ed)h(b)n(y)f
Ff(x)273 1121 y Fk(Then)g(do)f(nothing)273 1236 y(Else)h(replace)h
Ff(a)793 1248 y Fb(i)845 1236 y Fk(in)f Ff(h)g Fk(b)n(y)f(the)i(next)f
(more)273 1339 y(general)h(constrain)n(t)f(that)h(is)g(satis\014ed)f(b)
n(y)g Ff(x)16 1485 y Fk(3.)21 b(Output)29 b(h)n(yp)r(othesis)h
Ff(h)0 2748 y Fi(28)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 29 7
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
29 7 bop 25 160 a Fl(Hyp)s(othesis)41 b(Space)f(Searc)m(h)f(b)m(y)g
Fg(Find-S)1868 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1868 160 a 0 321 1947 2 v 0 474
a
0 0 0 setrgbcolor
 0 474 a 29 478 a
 37890293 21976361 5065195 16182312 26049576 28549283 startTexFig
 29 478 a
%%BeginDocument: ./bookps/finds-gen-spec.ps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 243 315 16 634 437 18 1 1 3 40
%AI5_OpenViewLayers: 7
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _LotusGreekMathPi LotusGreekMathPi
[0/.notdef
33/H20850
/H11124
/H20852
/H20853
/H20854
/H20856
/H11015
/H20858
/H20863
/H20848
/H20691
/H11021
/H11630
/H11022
/H11408
/H11033
/H11001
/H11002
/H11003
/H11004
/H11005
/H11006
/H11007
/H11034
/H11032
/H11125
/H11011
/H11088
/H20844
/H11091
/H11341
/H20851
/H9001
/H9002
/H9023
/H9004
/H9005
/H9021
/H9003
/H9007
/H9009
/H9014
/H9010
/H9011
/H9012
/H9013
/H9015
/H9016
/H9008
/H9017
/H9018
/H9019
/H9052
/H9024
/H9281
/H9022
/H9020
/H9006
/H11013
/H6036
/H11509
/H20855
/H20841
/H11009
/H9251
/H9252
/H9274
/H9254
/H9280
/H9278
/H9253
/H9257
/H9259
/H9264
/H9260
/H9261
/H9262
/H9263
/H9265
/H9266
/H9277
/H9267
/H9268
/H9270
/H9258
/H9275
/H9272
/H9273
/H9271
/H9256
/bullet
/H9284
/H11008
/H20849
167/H9269
169/HV32894
171/H9255
173/H20690
176/HV11005
178/HV11021
/HV11022
181/HV11088
/H32895
184/H32896
/H11612
192/HS11091
195/H9276
/H32897
198/HV32898
201/HV11011
210/HV11013
/HS11013
214/HV11091
222/HS11005
242/HS11011
247/HS11088
/HS11021
/HS11022
251/H9282
/_LotusGreekMathPi/LotusGreekMathPi 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434444454647474849494A
4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404040505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 R
0 G
300 Ar
0 J 0 j 0.8 w 10 M []0 d
%AI3_Note:
0 D
0 XR
117.0048 314.0083 m
117.0048 414.0205 l
206.5157 414.0205 l
206.5157 314.0083 l
117.0048 314.0083 l
s
241.52 314.0083 m
241.52 414.0205 l
331.0309 414.0205 l
331.0309 314.0083 l
241.52 314.0083 l
s
0 O
0 g
130.694 395.9433 m
130.694 396.7714 130.0219 397.4435 129.1938 397.4435 c
128.3657 397.4435 127.6936 396.7714 127.6936 395.9433 c
127.6936 395.1152 128.3657 394.4431 129.1938 394.4431 c
130.0219 394.4431 130.694 395.1152 130.694 395.9433 c
B
147.346 376.5909 m
147.346 377.419 146.6739 378.0911 145.8458 378.0911 c
145.0177 378.0911 144.3457 377.419 144.3457 376.5909 c
144.3457 375.7628 145.0177 375.0907 145.8458 375.0907 c
146.6739 375.0907 147.346 375.7628 147.346 376.5909 c
B
303.8151 384.0918 m
303.8151 384.9199 303.143 385.592 302.3149 385.592 c
301.4868 385.592 300.8147 384.9199 300.8147 384.0918 c
300.8147 383.2637 301.4868 382.5917 302.3149 382.5917 c
303.143 382.5917 303.8151 383.2637 303.8151 384.0918 c
B
0 w
290.3135 368.0399 m
290.3135 368.868 289.6414 369.5401 288.8133 369.5401 c
287.9852 369.5401 287.3131 368.868 287.3131 368.0399 c
287.3131 367.2118 287.9852 366.5397 288.8133 366.5397 c
289.6414 366.5397 290.3135 367.2118 290.3135 368.0399 c
B
265.2604 368.4899 m
265.2604 369.318 264.5883 369.9901 263.7602 369.9901 c
262.9321 369.9901 262.26 369.318 262.26 368.4899 c
262.26 367.6618 262.9321 366.9898 263.7602 366.9898 c
264.5883 366.9898 265.2604 367.6618 265.2604 368.4899 c
B
0.8 w
131.7441 333.9857 m
131.7441 334.8138 131.072 335.4859 130.2439 335.4859 c
129.4158 335.4859 128.7438 334.8138 128.7438 333.9857 c
128.7438 333.1576 129.4158 332.4855 130.2439 332.4855 c
131.072 332.4855 131.7441 333.1576 131.7441 333.9857 c
B
162.1978 395.9433 m
162.1978 396.7714 161.5258 397.4435 160.6976 397.4435 c
159.8695 397.4435 159.1975 396.7714 159.1975 395.9433 c
159.1975 395.1152 159.8695 394.4431 160.6976 394.4431 c
161.5258 394.4431 162.1978 395.1152 162.1978 395.9433 c
B
161.2977 342.5368 m
161.2977 343.3649 160.6256 344.037 159.7975 344.037 c
158.9694 344.037 158.2974 343.3649 158.2974 342.5368 c
158.2974 341.7087 158.9694 341.0366 159.7975 341.0366 c
160.6256 341.0366 161.2977 341.7087 161.2977 342.5368 c
B
262.26 338.0362 m
262.26 338.8643 261.5879 339.5364 260.7599 339.5364 c
259.9318 339.5364 259.2597 338.8643 259.2597 338.0362 c
259.2597 337.2081 259.9318 336.536 260.7599 336.536 c
261.5879 336.536 262.26 337.2081 262.26 338.0362 c
B
189.8012 335.4859 m
189.8012 336.314 189.1291 336.9861 188.301 336.9861 c
187.4729 336.9861 186.8008 336.314 186.8008 335.4859 c
186.8008 334.6578 187.4729 333.9857 188.301 333.9857 c
189.1291 333.9857 189.8012 334.6578 189.8012 335.4859 c
B
0 w
274.7116 353.0381 m
274.7116 353.8662 274.0395 354.5382 273.2114 354.5382 c
272.3833 354.5382 271.7112 353.8662 271.7112 353.0381 c
271.7112 352.21 272.3833 351.5379 273.2114 351.5379 c
274.0395 351.5379 274.7116 352.21 274.7116 353.0381 c
B
315.2165 368.4899 m
315.2165 369.318 314.5444 369.9901 313.7163 369.9901 c
312.8882 369.9901 312.2161 369.318 312.2161 368.4899 c
312.2161 367.6618 312.8882 366.9898 313.7163 366.9898 c
314.5444 366.9898 315.2165 367.6618 315.2165 368.4899 c
B
0.8 w
192.8016 398.0435 m
192.8016 398.8717 192.1295 399.5437 191.3014 399.5437 c
190.4733 399.5437 189.8012 398.8717 189.8012 398.0435 c
189.8012 397.2154 190.4733 396.5434 191.3014 396.5434 c
192.1295 396.5434 192.8016 397.2154 192.8016 398.0435 c
B
0 w
303.8151 353.0381 m
303.8151 353.8662 303.143 354.5382 302.3149 354.5382 c
301.4868 354.5382 300.8147 353.8662 300.8147 353.0381 c
300.8147 352.21 301.4868 351.5379 302.3149 351.5379 c
303.143 351.5379 303.8151 352.21 303.8151 353.0381 c
B
0.8 w
289.2633 336.9861 m
289.2633 337.8142 288.5913 338.4863 287.7631 338.4863 c
286.935 338.4863 286.263 337.8142 286.263 336.9861 c
286.263 336.158 286.935 335.4859 287.7631 335.4859 c
288.5913 335.4859 289.2633 336.158 289.2633 336.9861 c
B
317.1667 336.086 m
317.1667 336.9141 316.4947 337.5862 315.6665 337.5862 c
314.8385 337.5862 314.1664 336.9141 314.1664 336.086 c
314.1664 335.2579 314.8385 334.5858 315.6665 334.5858 c
316.4947 334.5858 317.1667 335.2579 317.1667 336.086 c
B
249.8085 354.9883 m
249.8085 355.8164 249.1364 356.4885 248.3083 356.4885 c
247.4802 356.4885 246.8081 355.8164 246.8081 354.9883 c
246.8081 354.1602 247.4802 353.4881 248.3083 353.4881 c
249.1364 353.4881 249.8085 354.1602 249.8085 354.9883 c
B
0.5 w
264.9553 366.8663 m
273.9531 352.3699 l
S
0 O
0 g
1 w 4 M
264.9553 366.8663 m
266.2153 362.9399 l
267.9148 363.9948 l
264.9553 366.8663 l
f
0 R
0 G
0 w 10 M
264.9553 366.8663 m
266.2153 362.9399 l
267.9148 363.9948 l
264.9553 366.8663 l
s
0.5 w
288.9494 367.8661 m
273.4532 353.3697 l
S
0 O
0 g
1 w 4 M
288.9494 367.8661 m
285.3447 365.8635 l
286.7112 364.4027 l
288.9494 367.8661 l
f
0 R
0 G
0 w 10 M
288.9494 367.8661 m
285.3447 365.8635 l
286.7112 364.4027 l
288.9494 367.8661 l
s
0.5 w
289.4493 367.8661 m
302.4461 352.3699 l
S
0 O
0 g
1 w 4 M
289.4493 367.8661 m
291.2538 364.1582 l
292.7863 365.4436 l
289.4493 367.8661 l
f
0 R
0 G
0 w 10 M
289.4493 367.8661 m
291.2538 364.1582 l
292.7863 365.4436 l
289.4493 367.8661 l
s
0 To
1 0 0 1 145.0082 426.3255 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Times-Italic 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
11.1219 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(Instances X) Tx 
(\r) TX 
TO
0 To
1 0 0 1 266.023 425.8254 0 Tp
TP
0 Tr
(Hypotheses H) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w 10 M
336.9375 405.8569 m
336.9375 324.377 l
S
0 O
0 g
1 w 4 M
336.9375 406.8877 m
335.6172 401.6063 l
338.2579 401.6063 l
336.9375 406.8877 l
f
336.9375 323.3461 m
338.2579 328.6275 l
335.6172 328.6275 l
336.9375 323.3461 l
f
0 To
1 0 0 1 341.0321 396.3273 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(Specific) Tx 
(\r) TX 
TO
0 To
1 0 0 1 341.0321 334.3198 0 Tp
TP
0 Tr
(General) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w 10 M
138.795 350.4878 m
138.795 351.3159 138.1229 351.9879 137.2948 351.9879 c
136.4667 351.9879 135.7946 351.3159 135.7946 350.4878 c
135.7946 349.6596 136.4667 348.9876 137.2948 348.9876 c
138.1229 348.9876 138.795 349.6596 138.795 350.4878 c
B
177.1997 389.4925 m
177.1997 390.3206 176.5276 390.9927 175.6995 390.9927 c
174.8714 390.9927 174.1993 390.3206 174.1993 389.4925 c
174.1993 388.6644 174.8714 387.9923 175.6995 387.9923 c
176.5276 387.9923 177.1997 388.6644 177.1997 389.4925 c
B
293.3138 398.9437 m
293.3138 399.7718 292.6417 400.4438 291.8136 400.4438 c
290.9855 400.4438 290.3135 399.7718 290.3135 398.9437 c
290.3135 398.1156 290.9855 397.4435 291.8136 397.4435 c
292.6417 397.4435 293.3138 398.1156 293.3138 398.9437 c
B
278.312 383.0417 m
278.312 383.8698 277.6399 384.5419 276.8118 384.5419 c
275.9837 384.5419 275.3116 383.8698 275.3116 383.0417 c
275.3116 382.2136 275.9837 381.5415 276.8118 381.5415 c
277.6399 381.5415 278.312 382.2136 278.312 383.0417 c
B
0.5 w
289.4493 336.8742 m
300.9465 351.3706 l
S
0 O
0 g
1 w 4 M
300.9465 351.3706 m
297.677 348.8577 l
299.2442 347.6148 l
300.9465 351.3706 l
f
0 R
0 G
0 w 10 M
300.9465 351.3706 m
297.677 348.8577 l
299.2442 347.6148 l
300.9465 351.3706 l
s
0.5 w
284.9505 338.8734 m
273.9532 351.3703 l
S
0 O
0 g
1 w 4 M
273.9532 351.3703 m
275.8453 347.7064 l
277.3469 349.0278 l
273.9532 351.3703 l
f
0 R
0 G
0 w 10 M
273.9532 351.3703 m
275.8453 347.7064 l
277.3469 349.0278 l
273.9532 351.3703 l
s
0.5 w
261.9561 338.3738 m
272.4535 350.3708 l
S
0 O
0 g
1 w 4 M
272.4535 350.3708 m
269.0665 348.0187 l
270.5718 346.7016 l
272.4535 350.3708 l
f
0 R
0 G
0 w 10 M
272.4535 350.3708 m
269.0665 348.0187 l
270.5718 346.7016 l
272.4535 350.3708 l
s
0.5 w
314.943 336.8742 m
303.4458 350.8707 l
S
0 O
0 g
1 w 4 M
303.4458 350.8707 m
305.2123 347.1446 l
306.7579 348.4143 l
303.4458 350.8707 l
f
0 R
0 G
0 w 10 M
303.4458 350.8707 m
305.2123 347.1446 l
306.7579 348.4143 l
303.4458 350.8707 l
s
0.5 w
301.4463 385.3622 m
292.9484 397.3592 l
S
0 O
0 g
1 w 4 M
292.9484 397.3593 m
294.4447 393.5167 l
296.0769 394.6728 l
292.9484 397.3593 l
f
0 R
0 G
0 w 10 M
292.9484 397.3593 m
294.4447 393.5167 l
296.0769 394.6728 l
292.9484 397.3593 l
s
0.5 w
278.452 384.3625 m
290.9489 397.8591 l
S
0 O
0 g
1 w 4 M
290.9489 397.8591 m
287.4971 395.6032 l
288.9648 394.2442 l
290.9489 397.8591 l
f
0 R
0 G
0 w 10 M
290.9489 397.8591 m
287.4971 395.6032 l
288.9648 394.2442 l
290.9489 397.8591 l
s
0.5 w
264.4554 370.3659 m
275.4527 381.3632 l
S
0 O
0 g
1 w 4 M
275.4527 381.3632 m
271.9168 379.2416 l
273.3312 377.8272 l
275.4527 381.3632 l
f
0 R
0 G
0 w 10 M
275.4527 381.3632 m
271.9168 379.2416 l
273.3312 377.8272 l
275.4527 381.3632 l
s
0.5 w
289.9492 369.3661 m
300.9465 381.8631 l
S
0 O
0 g
1 w 4 M
300.9465 381.8631 m
297.5528 379.5205 l
299.0544 378.1991 l
300.9465 381.8631 l
f
0 R
0 G
0 w 10 M
300.9465 381.8631 m
297.5528 379.5205 l
299.0544 378.1991 l
300.9465 381.8631 l
s
0.5 w
250.4589 355.3696 m
262.4559 366.8668 l
S
0 O
0 g
1 w 4 M
262.4559 366.8668 m
258.8757 364.8209 l
260.2596 363.3768 l
262.4559 366.8668 l
f
0 R
0 G
0 w 10 M
262.4559 366.8668 m
258.8757 364.8209 l
260.2596 363.3768 l
262.4559 366.8668 l
s
0.5 w
288.9494 369.3661 m
278.452 380.8633 l
S
0 O
0 g
1 w 4 M
278.452 380.8633 m
280.4108 377.2347 l
281.888 378.5834 l
278.452 380.8633 l
f
0 R
0 G
0 w 10 M
278.452 380.8633 m
280.4108 377.2347 l
281.888 378.5834 l
278.452 380.8633 l
s
0.5 w
312.9435 370.8658 m
303.9457 382.3629 l
S
0 O
0 g
1 w 4 M
303.9457 382.363 m
305.6236 378.5962 l
307.1988 379.8289 l
303.9457 382.363 l
f
0 R
0 G
0 w 10 M
303.9457 382.363 m
305.6236 378.5962 l
307.1988 379.8289 l
303.9457 382.363 l
s
0.5 w
303.9457 354.3699 m
313.9432 366.8668 l
S
0 O
0 g
1 w 4 M
313.9432 366.8668 m
310.6632 364.3677 l
312.2251 363.1181 l
313.9432 366.8668 l
f
0 R
0 G
0 w 10 M
313.9432 366.8668 m
310.6632 364.3677 l
312.2251 363.1181 l
313.9432 366.8668 l
s
0 O
0 g
0.8 w
328.7182 351.5379 m
328.7182 352.366 328.0461 353.0381 327.218 353.0381 c
326.3898 353.0381 325.7178 352.366 325.7178 351.5379 c
325.7178 350.7098 326.3898 350.0377 327.218 350.0377 c
328.0461 350.0377 328.7182 350.7098 328.7182 351.5379 c
B
0.5 w
316.9425 337.3738 m
325.9403 349.8707 l
S
0 O
0 g
1 w 4 M
325.9403 349.8707 m
322.7911 347.2085 l
324.4144 346.0398 l
325.9403 349.8707 l
f
0 R
0 G
0 w 10 M
325.9403 349.8707 m
322.7911 347.2085 l
324.4144 346.0398 l
325.9403 349.8707 l
s
0.5 w
326.94 352.3701 m
315.4429 367.3664 l
S
0 O
0 g
1 w 4 M
315.4429 367.3664 m
317.0832 363.5831 l
318.6706 364.8001 l
315.4429 367.3664 l
f
0 R
0 G
0 w 10 M
315.4429 367.3664 m
317.0832 363.5831 l
318.6706 364.8001 l
315.4429 367.3664 l
s
0 To
1 0 0 1 157.8663 357.6742 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 153.7668 360.8145 0 Tp
TP
0 Tr
/_Times-Italic 8 Tf
11.796 0 Xb
XB
(x) Tx 
(\r) TX 
TO
0 To
1 0 0 1 182.2518 354.8528 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 178.5238 359.0663 0 Tp
TP
0 Tr
/_Times-Italic 8 Tf
11.796 0 Xb
XB
(x) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w 10 M
167.2705 361.6641 m
167.2705 364.4234 163.6874 366.6629 159.2725 366.6629 c
154.8576 366.6629 151.2744 364.4234 151.2744 361.6641 c
151.2744 358.9048 154.8576 356.6653 159.2725 356.6653 c
163.6874 356.6653 167.2705 358.9048 167.2705 361.6641 c
S
193.4185 362.4142 m
193.4185 370.4162 183.565 376.9106 171.424 376.9106 c
159.2829 376.9106 149.4294 370.4162 149.4294 362.4142 c
149.4294 354.4122 159.2829 347.9178 171.424 347.9178 c
183.565 347.9178 193.4185 354.4122 193.4185 362.4142 c
S
0 O
0 g
129.7939 369.5401 m
129.7939 370.3682 129.1218 371.0402 128.2937 371.0402 c
127.4656 371.0402 126.7935 370.3682 126.7935 369.5401 c
126.7935 368.712 127.4656 368.0399 128.2937 368.0399 c
129.1218 368.0399 129.7939 368.712 129.7939 369.5401 c
B
0 To
1 0 0 1 138.635 392.2644 0 Tp
TP
0 Tr
1 w 4 M
/_Times-Italic 6.8758 Tf
(x) Tx 
(\r) TX 
TO
0 To
1 0 0 1 143.391 389.301 0 Tp
TP
0 Tr
/_Times-Roman 5.6257 Tf
11.1219 0 Xb
XB
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 166.2588 330.9465 0 Tp
TP
0 Tr
/_Times-Italic 8 Tf
11.796 0 Xb
XB
(x) Tx 
(\r) TX 
TO
0 To
1 0 0 1 169.7607 327.4836 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(4) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w 10 M
200.4666 350.3377 m
200.4666 369.377 187.2539 384.8292 170.9739 384.8292 c
154.6939 384.8292 141.4812 369.377 141.4812 350.3377 c
141.4812 331.2984 154.6939 315.8462 170.9739 315.8462 c
187.2539 315.8462 200.4666 331.2984 200.4666 350.3377 c
S
0 To
1 0 0 1 296.0266 399.5392 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Times-Italic 7 Tf
11.796 0 Xb
XB
(h) Tx 
(\r) TX 
TO
0 To
1 0 0 1 300.0012 396.0933 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 305.0288 386.0361 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
11.796 0 Xb
XB
(h) Tx 
(\r) TX 
TO
0 To
1 0 0 1 309.0012 382.5942 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 293.0288 366.0487 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
11.796 0 Xb
XB
(h) Tx 
(\r) TX 
TO
0 To
1 0 0 1 297.2443 362.8527 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(2,3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 318.9739 332.5686 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
11.796 0 Xb
XB
(h) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323.2465 328.36 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(4) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 10 M
276.4525 322.3775 m
286.9499 334.8744 l
S
0 O
0 g
1 w 4 M
286.9499 334.8744 m
283.611 332.4545 l
285.1426 331.168 l
286.9499 334.8744 l
f
0 R
0 G
0 w 10 M
286.9499 334.8744 m
283.611 332.4545 l
285.1426 331.168 l
286.9499 334.8744 l
s
0.5 w
304.4456 321.3778 m
314.4431 334.3745 l
S
0 O
0 g
1 w 4 M
314.4431 334.3745 m
311.2113 331.8134 l
312.7967 330.5939 l
314.4431 334.3745 l
f
0 R
0 G
0 w 10 M
314.4431 334.3745 m
311.2113 331.8134 l
312.7967 330.5939 l
314.4431 334.3745 l
s
0.5 w
301.9462 321.3778 m
289.4493 335.3743 l
S
0 O
0 g
1 w 4 M
289.4493 335.3743 m
291.3676 331.7241 l
292.8597 333.0563 l
289.4493 335.3743 l
f
0 R
0 G
0 w 10 M
289.4493 335.3743 m
291.3676 331.7241 l
292.8597 333.0563 l
289.4493 335.3743 l
s
0.5 w
273.4532 323.3773 m
262.456 336.3741 l
S
0 O
0 g
1 w 4 M
262.456 336.3741 m
264.2766 332.6741 l
265.8035 333.9662 l
262.456 336.3741 l
f
0 R
0 G
0 w 10 M
262.456 336.3741 m
264.2766 332.6741 l
265.8035 333.9662 l
262.456 336.3741 l
s
0.5 w
259.4567 339.3733 m
249.4592 352.87 l
S
0 O
0 g
1 w 4 M
249.4592 352.87 m
251.0367 349.06 l
252.644 350.2506 l
249.4592 352.87 l
f
0 R
0 G
0 w 10 M
249.4592 352.87 m
251.0367 349.06 l
252.644 350.2506 l
249.4592 352.87 l
s
0.5 w
287.4498 368.3662 m
287.4498 368.3662 280.6181 369.2826 v
273.7865 370.1991 260.1232 372.0319 245.96 372.7817 c
231.7969 373.5316 217.1338 373.1983 207.8861 372.5318 c
198.6384 371.8653 194.806 370.8656 192.8898 370.3657 c
190.9736 369.8658 190.9736 369.8658 y
S
190.9736 369.8658 m
195.097 369.9079 l
194.5921 371.8433 l
190.9736 369.8658 l
s
301.4463 384.3622 m
301.4463 384.3622 294.8646 387.0282 v
288.2829 389.6942 275.1195 395.0262 261.8728 397.359 c
248.626 399.6918 235.296 399.0252 222.3825 396.6925 c
209.4691 394.3597 196.9721 390.3607 187.5578 384.9454 c
178.1435 379.5301 171.8117 372.6984 168.6458 369.2826 c
165.4799 365.8668 165.4799 365.8668 y
S
165.4799 365.8668 m
168.9328 368.121 l
167.4658 369.4807 l
165.4799 365.8668 l
s
314.4431 335.8742 m
314.4431 335.8742 309.361 333.708 v
304.279 331.5419 294.1148 327.2097 277.7022 325.96 c
261.2896 324.7103 238.6285 326.5431 224.4653 328.7926 c
210.3022 331.042 204.6369 333.7081 201.8043 335.0411 c
198.9716 336.3741 198.9716 336.3741 y
S
198.9716 336.3741 m
202.1655 333.7657 l
203.0172 335.5756 l
198.9716 336.3741 l
s
0 To
1 0 0 1 159.7095 361.5591 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Times-Italic 7.0009 Tf
11.796 0 Xb
XB
(+) Tx 
(\r) TX 
TO
0 R
0 G
0.36 w 10 M
164.3223 363.3143 m
164.3223 364.418 163.3706 365.3138 162.1978 365.3138 c
161.0251 365.3138 160.0734 364.418 160.0734 363.3143 c
160.0734 362.2106 161.0251 361.3148 162.1978 361.3148 c
163.3706 361.3148 164.3223 362.2106 164.3223 363.3143 c
S
0 To
1 0 0 1 182.6429 361.0601 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
(+) Tx 
(\r) TX 
TO
0 R
0 G
0.36 w 10 M
187.1251 362.8643 m
187.1251 363.968 186.1733 364.8638 185.0006 364.8638 c
183.8279 364.8638 182.8761 363.968 182.8761 362.8643 c
182.8761 361.7605 183.8279 360.8647 185.0006 360.8647 c
186.1733 360.8647 187.1251 361.7605 187.1251 362.8643 c
S
0 To
1 0 0 1 169.9593 333.3182 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
(+) Tx 
(\r) TX 
TO
0 R
0 G
0.36 w 10 M
174.5236 335.1109 m
174.5236 336.2146 173.5718 337.1104 172.3991 337.1104 c
171.2263 337.1104 170.2746 336.2146 170.2746 335.1109 c
170.2746 334.0071 171.2263 333.1114 172.3991 333.1114 c
173.5718 333.1114 174.5236 334.0071 174.5236 335.1109 c
S
0 O
0 g
0.8 w
276.2117 321.9843 m
276.2117 322.8124 275.5397 323.4844 274.7116 323.4844 c
273.8835 323.4844 273.2114 322.8124 273.2114 321.9843 c
273.2114 321.1562 273.8835 320.4841 274.7116 320.4841 c
275.5397 320.4841 276.2117 321.1562 276.2117 321.9843 c
B
304.2652 320.034 m
304.2652 320.8621 303.5931 321.5342 302.765 321.5342 c
301.9369 321.5342 301.2648 320.8621 301.2648 320.034 c
301.2648 319.2059 301.9369 318.5338 302.765 318.5338 c
303.5931 318.5338 304.2652 319.2059 304.2652 320.034 c
B
0 To
1 0 0 1 79.7449 253.6889 0 Tp
TP
0 Tr
1 w 4 M
/_Times-Italic 7 Tf
11.1219 0 Xb
XB
(x   = <Sunny Warm High Strong Cool Change>, +) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83.498 249.6944 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(4) Tx 
(\r) TX 
TO
0 To
0.9999 -0.0102 0.0103 0.9999 79.7686 288.6819 0 Tp
TP
0 Tr
/_Times-Italic 7.0004 Tf
11.1218 0 Xb
XB
(x   = <Sunny Warm Normal Strong Warm Same>, +) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83.498 285.5353 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
11.1219 0 Xb
XB
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 79.7449 277.9359 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(x   = <Sunny Warm High  Strong Warm Same>, +) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83.498 274.4415 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 79.7449 265.9374 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(x   = <Rainy Cold High Strong Warm Change>, -) Tx 
(\r) TX 
TO
0 To
1 0 0 1 83.498 262.443 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.2127 288.0296 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(h   = <Sunny Warm Normal Strong Warm Same>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 244.7132 285.0353 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.2127 277.9359 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(h   = <Sunny Warm  ?  Strong Warm Same>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 244.7132 275.4416 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.2127 253.6889 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(h   = <Sunny Warm  ?  Strong  ?  ? >) Tx 
(\r) TX 
TO
0 To
1 0 0 1 243.9631 249.6944 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(4 ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.2127 265.9374 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(h   = <Sunny Warm ? Strong Warm Same>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 244.4071 261.5599 0 Tp
TP
0 Tr
/_Times-Roman 7 Tf
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 244.7132 295.686 0 Tp
TP
0 Tr
/_Times-Italic 7 Tf
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 241.2127 299.3615 0 Tp
TP
0 Tr
(h   =                             ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 256.6035 299.4758 0 Tp
TP
0 Tr
11.796 0 Xb
XB
(<) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Roman 7 Tf
(,) Tx 
/_Times-Italic 7 Tf
( ) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Roman 7 Tf
(,) Tx 
/_Times-Italic 7 Tf
( ) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Roman 7 Tf
(,) Tx 
/_LotusGreekMathPi 7 Tf
( ) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Roman 7 Tf
(,) Tx 
/_Times-Italic 7 Tf
( ) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Roman 7 Tf
(, ) Tx 
/_Symbol 7 Tf
(\306) Tx 
/_Times-Italic 7 Tf
(>) Tx 
(\r) TX 
TO
77.5 246 m
77.5 433.5229 l
363.1598 433.5229 l
363.1598 246 l
77.5 246 l
n
1 A
1 Ap
0 O
0 g
800 Ar
365 246 m
365 534 L
77 534 L
77 246 L
365 246 L
(f) *
0 A
0 To
1 0 0 1 395.5 412 0 Tp
TP
0 Tr
/_Times-Italic 8 Tf
11.1219 0 Xb
XB
(\r) Tx 
TO
1 A
365 246 m
365 534 L
77 534 L
77 246 L
365 246 L
(f) *
0 A
0 Ap
247.0833 4716 m
247.0833 -3924 L
(N) *
1 A
0 R
0 G
300 Ar
0.36 w 10 M
146.9825 398.0935 m
146.9825 399.1972 146.0307 400.093 144.858 400.093 c
143.6853 400.093 142.7335 399.1972 142.7335 398.0935 c
142.7335 396.9898 143.6853 396.094 144.858 396.094 c
146.0307 396.094 146.9825 396.9898 146.9825 398.0935 c
S
0 A
0 To
1 0 0 1 144.7379 396.3734 0 Tp
TP
-0.9984 0 Td
0 Tr
0 O
0 g
1 w 4 M
/_Times-Roman 6.0008 Tf
1 Ta
(-) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 0 2748 a Fi(29)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 30 8
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
30 8 bop 25 160 a Fl(Complain)m(ts)41 b(ab)s(out)f Fg(Find-S)1334
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1334 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 40 592
a Fj(\017)21 b Fk(Can't)29 b(tell)i(whether)e(it)i(has)d(learned)i
(concept)40 737 y Fj(\017)21 b Fk(Can't)29 b(tell)i(when)e(training)h
(data)g(inconsisten)n(t)40 883 y Fj(\017)21 b Fk(Pic)n(ks)29
b(a)g(maximally)h(sp)r(eci\014c)g Ff(h)f Fk(\(wh)n(y?\))40
1028 y Fj(\017)21 b Fk(Dep)r(ending)29 b(on)g Ff(H)7
b Fk(,)28 b(there)h(migh)n(t)g(b)r(e)g(sev)n(eral!)0
2748 y Fi(30)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 31 9
grestore sheetsave restore
showsheet
%%Page: 3 3
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
31 9 bop 25 160 a Fl(V)-10 b(ersion)41 b(Spaces)836 160
y
0.8666 0.03137 0.02352 setrgbcolor
 836 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 104 592 a
Fk(A)28 b(h)n(yp)r(othesis)i Ff(h)f Fk(is)g Fe(consisten)m(t)j
Fk(with)e(a)e(set)i(of)104 696 y(training)f(examples)f
Ff(D)i Fk(of)d(target)i(concept)f Ff(c)g Fk(if)g(and)104
800 y(only)i(if)g Ff(h)p Fk(\()p Ff(x)p Fk(\))24 b(=)g
Ff(c)p Fk(\()p Ff(x)p Fk(\))30 b(for)f(eac)n(h)g(training)h(example)104
903 y Fj(h)p Ff(x;)15 b(c)p Fk(\()p Ff(x)p Fk(\))p Fj(i)30
b Fk(in)g Ff(D)r Fk(.)104 1057 y Ff(C)6 b(onsistent)p
Fk(\()p Ff(h;)14 b(D)r Fk(\))25 b Fj(\021)e Fk(\()p Fj(8h)p
Ff(x;)15 b(c)p Fk(\()p Ff(x)p Fk(\))p Fj(i)26 b(2)e Ff(D)r
Fk(\))c Ff(h)p Fk(\()p Ff(x)p Fk(\))25 b(=)f Ff(c)p Fk(\()p
Ff(x)p Fk(\))104 1385 y(The)29 b Fe(v)m(ersion)34 b(space)p
Fk(,)c Ff(V)19 b(S)1027 1398 y Fb(H)r(;D)1148 1385 y
Fk(,)28 b(with)j(resp)r(ect)e(to)104 1489 y(h)n(yp)r(othesis)h(space)f
Ff(H)35 b Fk(and)29 b(training)h(examples)f Ff(D)r Fk(,)104
1593 y(is)g(the)h(subset)f(of)g(h)n(yp)r(otheses)g(from)f
Ff(H)35 b Fk(consisten)n(t)104 1696 y(with)30 b(all)g(training)h
(examples)e(in)h Ff(D)r Fk(.)296 1850 y Ff(V)19 b(S)418
1863 y Fb(H)r(;D)563 1850 y Fj(\021)24 b(f)p Ff(h)f Fj(2)i
Ff(H)7 b Fj(j)p Ff(C)f(onsistent)p Fk(\()p Ff(h;)13 b(D)r
Fk(\))p Fj(g)0 2748 y Fi(31)357 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
% %%Page: 32 10
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
32 10 bop 25 160 a Fl(The)40 b Fg(List-Then-Elimin)q(ate)i
Fl(Algorithm:)1843 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1843 160 a 0 321 1947 2 v 0
474 a
0 0 0 setrgbcolor
 0 474 a 16 592 a Fk(1.)21 b Ff(V)e(er)r(sionS)5
b(pace)25 b Fj( )k Fk(a)f(list)j(con)n(taining)g(ev)n(ery)104
696 y(h)n(yp)r(othesis)f(in)f Ff(H)16 841 y Fk(2.)21
b(F)-7 b(or)28 b(eac)n(h)h(training)h(example,)g Fj(h)p
Ff(x;)15 b(c)p Fk(\()p Ff(x)p Fk(\))p Fj(i)104 987 y
Fk(remo)n(v)n(e)27 b(from)h Ff(V)19 b(er)r(sionS)5 b(pace)29
b Fk(an)n(y)g(h)n(yp)r(othesis)h Ff(h)f Fk(for)104 1090
y(whic)n(h)g Ff(h)p Fk(\()p Ff(x)p Fk(\))c Fj(6)p Fk(=)f
Ff(c)p Fk(\()p Ff(x)p Fk(\))16 1236 y(3.)d(Output)29
b(the)g(list)i(of)e(h)n(yp)r(otheses)h(in)f Ff(V)20 b(er)r(sionS)5
b(pace)0 2748 y Fi(32)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)
g Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 33 11
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
33 11 bop 25 160 a Fl(Example)40 b(V)-10 b(ersion)41
b(Space)1280 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1280 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor

0 474 a 0 478 a
 33154007 13593140 6775521 20458127 25194414 28154593 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 31 31 583 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -30 604 1.5 1018 725 25 1 1 3 40
%AI5_OpenViewLayers: 5
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434444454647474849494A
4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404040505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
-4014 384.25 m
4626 384.25 L
(N) *
1 Ap
0 R
0 G
0.5 w 10 M
380.1328 313.8672 m
380.1328 587.4662 L
106.5338 587.4662 L
106.5338 313.8672 L
380.1328 313.8672 L
(s) *
u
0 To
1 0 0 1 160.5196 416.2075 0 Tp
TP
0 Tr
0 O
0 g
300 Ar
1 w 4 M
/_Times-BoldItalic 7.6377 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
24.996 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(S:) Tx 
(\r) TX 
TO
0 To
1 0 0 1 204.1632 367.1009 0 Tp
TP
0 Tr
/_Times-Italic 7.6377 Tf
(<Sunny, Warm, ?, ?, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 105.9652 367.1009 0 Tp
TP
0 Tr
(<Sunny, ?, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 296.3602 367.1009 0 Tp
TP
0 Tr
(<?, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
u
0 Ap
0 R
0 G
0.5 w 10 M
231.4404 405.2683 m
231.4404 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
231.4404 404.9205 m
230.212 404.1737 l
230.1841 404.2155 l
230.9798 406.2187 l
231.1333 406.9166 231.2869 407.6146 231.4404 408.3125 c
231.594 407.6146 231.7475 406.9166 231.9011 406.2187 c
232.6967 404.2155 l
232.6758 404.1737 l
231.4404 404.9205 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
237.8926 405.2683 m
323.7312 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
238.2218 405.1641 m
238.5615 403.7672 l
238.5132 403.7533 l
236.8451 405.1183 l
236.2264 405.476 235.6077 405.8337 234.9891 406.1914 c
235.7007 406.1264 236.4124 406.0614 237.1241 405.9963 c
239.2741 406.1479 l
239.3077 406.1153 l
238.2218 405.1641 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
225.0072 405.2683 m
154.9518 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
224.6808 405.1433 m
223.5392 406.0169 l
223.5681 406.0581 l
225.7234 406.0436 l
226.4295 406.1537 227.1356 406.2639 227.8417 406.3741 c
227.2471 405.9777 226.6524 405.5814 226.0577 405.185 c
224.4798 403.7167 l
224.4332 403.7211 l
224.6808 405.1433 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
155.0642 361.6247 m
187.7969 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
155.3291 361.4032 m
155.1164 359.9814 l
155.0664 359.9868 l
154.0369 361.8804 l
153.5991 362.4452 153.1612 363.01 152.7233 363.5748 c
153.3578 363.246 153.9923 362.9171 154.6268 362.5882 c
156.675 361.917 l
156.6937 361.8742 l
155.3291 361.4032 l
f
U
0 R
0 G
300 Ar
10 M
171.4303 410.7237 m
171.4303 426.5445 l
285.4965 426.5445 l
285.4965 410.7237 l
171.4303 410.7237 l
s
0.5 w
229.2156 360.0307 m
193.2523 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
228.4455 359.4379 m
227.1238 360.0034 l
227.1417 360.0505 l
229.2342 360.5673 l
229.8914 360.848 230.5486 361.1287 231.2058 361.4095 c
230.7271 360.8789 230.2484 360.3482 229.7697 359.8176 c
228.6021 358.0058 l
228.5559 357.9985 l
228.4455 359.4379 l
f
0 A
0 R
0 G
300 Ar
0.5 w 10 M
244.7295 359.9028 m
279.9939 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
245.0587 359.5457 m
244.9427 358.1128 l
244.8924 358.1147 l
243.7372 359.9344 l
243.2621 360.4683 242.7871 361.0022 242.312 361.5361 c
242.9673 361.2509 243.6225 360.9657 244.2778 360.6805 c
246.3668 360.1493 l
246.3884 360.1078 l
245.0587 359.5457 l
f
0 A
u
0 R
0 G
300 Ar
0.5 w 10 M
323.6374 361.6247 m
285.4493 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
323.3556 361.4248 m
322.0339 361.9903 l
322.0518 362.0373 l
324.1443 362.5542 l
324.8015 362.8349 325.4587 363.1156 326.1159 363.3963 c
325.6372 362.8657 325.1585 362.3351 324.6798 361.8044 c
323.5122 359.9927 l
323.4659 359.9854 l
323.3556 361.4248 l
f
U
0 To
1 0 0 1 178.8189 416.7454 0 Tp
TP
0 Tr
300 Ar
(<Sunny, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 174.4545 416.753 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 278.6535 416.753 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
0 To
1 0 0 1 136.5157 318.5551 0 Tp
TP
0 Tr
/_Times-BoldItalic 7.6377 Tf
(G:) Tx 
(\r) TX 
TO
0 R
0 G
10 M
147.4266 313.6168 m
147.4266 329.9831 l
310.5444 329.9831 l
310.5444 313.6168 l
147.4266 313.6168 l
s
0 To
1 0 0 1 159.4286 319.3657 0 Tp
TP
0 Tr
0 O
0 g
4 M
/_Times-Italic 7.6377 Tf
(<Sunny, ?, ?, ?, ?, ?>, <?, Warm, ?, ?, ?, ?> ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 155.337 319.3734 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 298.8152 319.3734 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
U
1 Ap
800 Ar
382.7747 311.9753 m
382.7747 427.4414 L
103.3086 427.4414 L
103.3086 311.9753 L
382.7747 311.9753 L
n
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 0 2748 a Fi(33)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 34 12
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
34 12 bop 25 160 a Fl(Represen)m(ting)42 b(V)-10 b(ersion)41
b(Spaces)1557 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1557 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor

0 474 a 21 592 a Fk(The)29 b Fe(General)34 b(b)s(oundary)p
Fk(,)29 b(G,)f(of)h(v)n(ersion)g(space)104 696 y Ff(V)19
b(S)226 709 y Fb(H)r(;D)376 696 y Fk(is)29 b(the)h(set)f(of)g(its)h
(maximally)g(general)104 800 y(mem)n(b)r(ers)21 995 y(The)f
Fe(Sp)s(eci\014c)k(b)s(oundary)p Fk(,)c(S,)g(of)g(v)n(ersion)g(space)
104 1099 y Ff(V)19 b(S)226 1112 y Fb(H)r(;D)376 1099
y Fk(is)29 b(the)h(set)f(of)g(its)h(maximally)g(sp)r(eci\014c)104
1202 y(mem)n(b)r(ers)21 1397 y(Ev)n(ery)f(mem)n(b)r(er)d(of)j(the)g(v)n
(ersion)h(space)f(lies)h(b)r(et)n(w)n(een)104 1501 y(these)f(b)r
(oundaries)134 1655 y Ff(V)20 b(S)257 1668 y Fb(H)r(;D)401
1655 y Fk(=)k Fj(f)p Ff(h)g Fj(2)g Ff(H)7 b Fj(j)p Fk(\()p
Fj(9)p Ff(s)24 b Fj(2)h Ff(S)5 b Fk(\)\()p Fj(9)p Ff(g)27
b Fj(2)d Ff(G)p Fk(\)\()p Ff(g)k Fj(\025)c Ff(h)g Fj(\025)f
Ff(s)p Fk(\))p Fj(g)104 1808 y Fk(where)29 b Ff(x)24
b Fj(\025)g Ff(y)32 b Fk(means)27 b Ff(x)i Fk(is)h(more)d(general)j(or)
e(equal)j(to)104 1912 y Ff(y)0 2748 y Fi(34)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 35 13
grestore sheetsave restore
showsheet
%%Page: 4 4
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
35 13 bop 25 160 a Fl(Candidate)40 b(Eliminati)q(o)q(n)i(Algorithm)1815
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1815 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Ff(G)24 b Fj( )k Fk(maximally)i(general)g(h)n(yp)r(otheses)g(in)f
Ff(H)0 642 y(S)g Fj( )f Fk(maximally)i(sp)r(eci\014c)h(h)n(yp)r
(otheses)e(in)h Ff(H)0 746 y Fk(F)-7 b(or)28 b(eac)n(h)h(training)i
(example)e Ff(d)p Fk(,)f(do)40 891 y Fj(\017)21 b Fk(If)29
b Ff(d)f Fk(is)i(a)f(p)r(ositiv)n(e)i(example)125 1036
y Fe({)21 b Fk(Remo)n(v)n(e)28 b(from)g Ff(G)g Fk(an)n(y)h(h)n(yp)r
(othesis)h(inconsisten)n(t)195 1140 y(with)g Ff(d)125
1265 y Fe({)21 b Fk(F)-7 b(or)29 b(eac)n(h)f(h)n(yp)r(othesis)j
Ff(s)e Fk(in)g Ff(S)34 b Fk(that)29 b(is)h(not)195 1368
y(consisten)n(t)g(with)h Ff(d)209 1493 y Fj(\003)21 b
Fk(Remo)n(v)n(e)28 b Ff(s)h Fk(from)e Ff(S)209 1607 y
Fj(\003)21 b Fk(Add)28 b(to)h Ff(S)k Fk(all)e(minimal)e
(generalizations)j Ff(h)c Fk(of)h Ff(s)273 1711 y Fk(suc)n(h)f(that)256
1825 y(1.)20 b Ff(h)29 b Fk(is)g(consisten)n(t)i(with)f
Ff(d)p Fk(,)e(and)256 1939 y(2.)20 b(some)28 b(mem)n(b)r(er)e(of)j
Ff(G)g Fk(is)g(more)f(general)i(than)e Ff(h)209 2053
y Fj(\003)21 b Fk(Remo)n(v)n(e)28 b(from)f Ff(S)34 b
Fk(an)n(y)28 b(h)n(yp)r(othesis)j(that)e(is)h(more)273
2157 y(general)g(than)e(another)h(h)n(yp)r(othesis)i(in)e
Ff(S)40 2302 y Fj(\017)21 b Fk(If)29 b Ff(d)f Fk(is)i(a)f(negativ)n(e)h
(example)0 2748 y Fi(35)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q
(ok)g Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o
(w)e(Hill,)j(1997)p eop
% %%Page: 36 14
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
36 14 bop 125 143 a Fe({)21 b Fk(Remo)n(v)n(e)28 b(from)g
Ff(S)33 b Fk(an)n(y)c(h)n(yp)r(othesis)h(inconsisten)n(t)195
247 y(with)g Ff(d)125 371 y Fe({)21 b Fk(F)-7 b(or)29
b(eac)n(h)f(h)n(yp)r(othesis)j Ff(g)g Fk(in)f Ff(G)e
Fk(that)i(is)f(not)195 475 y(consisten)n(t)h(with)h Ff(d)209
599 y Fj(\003)21 b Fk(Remo)n(v)n(e)28 b Ff(g)k Fk(from)27
b Ff(G)209 714 y Fj(\003)21 b Fk(Add)28 b(to)h Ff(G)f
Fk(all)j(minimal)e(sp)r(ecializat)q(i)q(ons)i Ff(h)e
Fk(of)g Ff(g)273 817 y Fk(suc)n(h)f(that)256 932 y(1.)20
b Ff(h)29 b Fk(is)g(consisten)n(t)i(with)f Ff(d)p Fk(,)e(and)256
1046 y(2.)20 b(some)28 b(mem)n(b)r(er)e(of)j Ff(S)34
b Fk(is)29 b(more)f(sp)r(eci\014c)i(than)f Ff(h)209 1160
y Fj(\003)21 b Fk(Remo)n(v)n(e)28 b(from)f Ff(G)i Fk(an)n(y)f(h)n(yp)r
(othesis)j(that)e(is)h(less)273 1264 y(general)g(than)e(another)h(h)n
(yp)r(othesis)i(in)e Ff(G)0 2748 y Fi(36)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 37 15
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
37 15 bop 25 160 a Fl(Example)40 b(T)-10 b(race)842 160
y
0.8666 0.03137 0.02352 setrgbcolor
 842 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 29 478 a
 33154007 29175520 11182899 26049576 28088811 41047818 startTexFig
 29
478 a
%%BeginDocument: ./bookps/vsexamp-initialize.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 41.003 -0.999634 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 279 518 ] concat
%I
[
({<?, ?, ?, ?, ?, ?>})
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 148 197 ] concat
%I
121 301 251 331 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 143.004 228.991 ] concat
%I
101 520 390 550 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -3.00535 -39.5408 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 219 810.029 ] concat
%I
[
(S)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 230.008 801.031 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 237.014 810.035 ] concat
%I
[
(:)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-medium-r-*-120-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 316.003 770.024 ] concat
%I
[
({<\330, \330, \330, \330, \330, \330>})
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 1.01246 -1.99927 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 213.982 523.494 ] concat
%I
[
(G)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 226.99 516.502 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-helvetica-bold-r-*-140-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 233.997 527.039 ] concat
%I
[
(:)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fi(37)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 38 16
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
38 16 bop 25 160 a Fl(What)39 b(Next)h(T)-10 b(raining)41
b(Example?)1689 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1689 160 a 0 321 1947 2 v 0 474
a
0 0 0 setrgbcolor
 0 474 a 0 478 a
 33154007 13593140 6775521 20458127 25194414 28154593 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 31 31 583 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -30 604 1.5 1018 725 25 1 1 3 40
%AI5_OpenViewLayers: 5
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434444454647474849494A
4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404040505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
-4014 384.25 m
4626 384.25 L
(N) *
1 Ap
0 R
0 G
0.5 w 10 M
380.1328 313.8672 m
380.1328 587.4662 L
106.5338 587.4662 L
106.5338 313.8672 L
380.1328 313.8672 L
(s) *
u
0 To
1 0 0 1 160.5196 416.2075 0 Tp
TP
0 Tr
0 O
0 g
300 Ar
1 w 4 M
/_Times-BoldItalic 7.6377 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
24.996 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(S:) Tx 
(\r) TX 
TO
0 To
1 0 0 1 204.1632 367.1009 0 Tp
TP
0 Tr
/_Times-Italic 7.6377 Tf
(<Sunny, Warm, ?, ?, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 105.9652 367.1009 0 Tp
TP
0 Tr
(<Sunny, ?, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 296.3602 367.1009 0 Tp
TP
0 Tr
(<?, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
u
0 Ap
0 R
0 G
0.5 w 10 M
231.4404 405.2683 m
231.4404 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
231.4404 404.9205 m
230.212 404.1737 l
230.1841 404.2155 l
230.9798 406.2187 l
231.1333 406.9166 231.2869 407.6146 231.4404 408.3125 c
231.594 407.6146 231.7475 406.9166 231.9011 406.2187 c
232.6967 404.2155 l
232.6758 404.1737 l
231.4404 404.9205 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
237.8926 405.2683 m
323.7312 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
238.2218 405.1641 m
238.5615 403.7672 l
238.5132 403.7533 l
236.8451 405.1183 l
236.2264 405.476 235.6077 405.8337 234.9891 406.1914 c
235.7007 406.1264 236.4124 406.0614 237.1241 405.9963 c
239.2741 406.1479 l
239.3077 406.1153 l
238.2218 405.1641 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
225.0072 405.2683 m
154.9518 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
224.6808 405.1433 m
223.5392 406.0169 l
223.5681 406.0581 l
225.7234 406.0436 l
226.4295 406.1537 227.1356 406.2639 227.8417 406.3741 c
227.2471 405.9777 226.6524 405.5814 226.0577 405.185 c
224.4798 403.7167 l
224.4332 403.7211 l
224.6808 405.1433 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
155.0642 361.6247 m
187.7969 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
155.3291 361.4032 m
155.1164 359.9814 l
155.0664 359.9868 l
154.0369 361.8804 l
153.5991 362.4452 153.1612 363.01 152.7233 363.5748 c
153.3578 363.246 153.9923 362.9171 154.6268 362.5882 c
156.675 361.917 l
156.6937 361.8742 l
155.3291 361.4032 l
f
U
0 R
0 G
300 Ar
10 M
171.4303 410.7237 m
171.4303 426.5445 l
285.4965 426.5445 l
285.4965 410.7237 l
171.4303 410.7237 l
s
0.5 w
229.2156 360.0307 m
193.2523 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
228.4455 359.4379 m
227.1238 360.0034 l
227.1417 360.0505 l
229.2342 360.5673 l
229.8914 360.848 230.5486 361.1287 231.2058 361.4095 c
230.7271 360.8789 230.2484 360.3482 229.7697 359.8176 c
228.6021 358.0058 l
228.5559 357.9985 l
228.4455 359.4379 l
f
0 A
0 R
0 G
300 Ar
0.5 w 10 M
244.7295 359.9028 m
279.9939 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
245.0587 359.5457 m
244.9427 358.1128 l
244.8924 358.1147 l
243.7372 359.9344 l
243.2621 360.4683 242.7871 361.0022 242.312 361.5361 c
242.9673 361.2509 243.6225 360.9657 244.2778 360.6805 c
246.3668 360.1493 l
246.3884 360.1078 l
245.0587 359.5457 l
f
0 A
u
0 R
0 G
300 Ar
0.5 w 10 M
323.6374 361.6247 m
285.4493 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
323.3556 361.4248 m
322.0339 361.9903 l
322.0518 362.0373 l
324.1443 362.5542 l
324.8015 362.8349 325.4587 363.1156 326.1159 363.3963 c
325.6372 362.8657 325.1585 362.3351 324.6798 361.8044 c
323.5122 359.9927 l
323.4659 359.9854 l
323.3556 361.4248 l
f
U
0 To
1 0 0 1 178.8189 416.7454 0 Tp
TP
0 Tr
300 Ar
(<Sunny, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 174.4545 416.753 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 278.6535 416.753 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
0 To
1 0 0 1 136.5157 318.5551 0 Tp
TP
0 Tr
/_Times-BoldItalic 7.6377 Tf
(G:) Tx 
(\r) TX 
TO
0 R
0 G
10 M
147.4266 313.6168 m
147.4266 329.9831 l
310.5444 329.9831 l
310.5444 313.6168 l
147.4266 313.6168 l
s
0 To
1 0 0 1 159.4286 319.3657 0 Tp
TP
0 Tr
0 O
0 g
4 M
/_Times-Italic 7.6377 Tf
(<Sunny, ?, ?, ?, ?, ?>, <?, Warm, ?, ?, ?, ?> ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 155.337 319.3734 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 298.8152 319.3734 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
U
1 Ap
800 Ar
382.7747 311.9753 m
382.7747 427.4414 L
103.3086 427.4414 L
103.3086 311.9753 L
382.7747 311.9753 L
n
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 0 2748 a Fi(38)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 39 17
grestore sheetsave restore
showsheet
%%Page: 5 5
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
39 17 bop 25 170 a Fl(Ho)m(w)39 b(Should)i(These)f(Be)h(Classi\014ed?)
1816 170 y
0.8666 0.03137 0.02352 setrgbcolor
 1816 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
0 478 a
 33154007 13593140 6775521 20458127 25194414 28154593 startTexFig
 0 478 a
%%BeginDocument: ./bookps/figure-vs3.ps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 31 31 583 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -30 604 1.5 1018 725 25 1 1 3 40
%AI5_OpenViewLayers: 5
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434444454647474849494A
4B4C4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404040505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
-4014 384.25 m
4626 384.25 L
(N) *
1 Ap
0 R
0 G
0.5 w 10 M
380.1328 313.8672 m
380.1328 587.4662 L
106.5338 587.4662 L
106.5338 313.8672 L
380.1328 313.8672 L
(s) *
u
0 To
1 0 0 1 160.5196 416.2075 0 Tp
TP
0 Tr
0 O
0 g
300 Ar
1 w 4 M
/_Times-BoldItalic 7.6377 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
24.996 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(S:) Tx 
(\r) TX 
TO
0 To
1 0 0 1 204.1632 367.1009 0 Tp
TP
0 Tr
/_Times-Italic 7.6377 Tf
(<Sunny, Warm, ?, ?, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 105.9652 367.1009 0 Tp
TP
0 Tr
(<Sunny, ?, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 296.3602 367.1009 0 Tp
TP
0 Tr
(<?, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
u
0 Ap
0 R
0 G
0.5 w 10 M
231.4404 405.2683 m
231.4404 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
231.4404 404.9205 m
230.212 404.1737 l
230.1841 404.2155 l
230.9798 406.2187 l
231.1333 406.9166 231.2869 407.6146 231.4404 408.3125 c
231.594 407.6146 231.7475 406.9166 231.9011 406.2187 c
232.6967 404.2155 l
232.6758 404.1737 l
231.4404 404.9205 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
237.8926 405.2683 m
323.7312 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
238.2218 405.1641 m
238.5615 403.7672 l
238.5132 403.7533 l
236.8451 405.1183 l
236.2264 405.476 235.6077 405.8337 234.9891 406.1914 c
235.7007 406.1264 236.4124 406.0614 237.1241 405.9963 c
239.2741 406.1479 l
239.3077 406.1153 l
238.2218 405.1641 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
225.0072 405.2683 m
154.9518 377.991 l
S
0 O
0 g
800 Ar
1 w 4 M
224.6808 405.1433 m
223.5392 406.0169 l
223.5681 406.0581 l
225.7234 406.0436 l
226.4295 406.1537 227.1356 406.2639 227.8417 406.3741 c
227.2471 405.9777 226.6524 405.5814 226.0577 405.185 c
224.4798 403.7167 l
224.4332 403.7211 l
224.6808 405.1433 l
f
U
u
0 R
0 G
300 Ar
0.5 w 10 M
155.0642 361.6247 m
187.7969 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
155.3291 361.4032 m
155.1164 359.9814 l
155.0664 359.9868 l
154.0369 361.8804 l
153.5991 362.4452 153.1612 363.01 152.7233 363.5748 c
153.3578 363.246 153.9923 362.9171 154.6268 362.5882 c
156.675 361.917 l
156.6937 361.8742 l
155.3291 361.4032 l
f
U
0 R
0 G
300 Ar
10 M
171.4303 410.7237 m
171.4303 426.5445 l
285.4965 426.5445 l
285.4965 410.7237 l
171.4303 410.7237 l
s
0.5 w
229.2156 360.0307 m
193.2523 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
228.4455 359.4379 m
227.1238 360.0034 l
227.1417 360.0505 l
229.2342 360.5673 l
229.8914 360.848 230.5486 361.1287 231.2058 361.4095 c
230.7271 360.8789 230.2484 360.3482 229.7697 359.8176 c
228.6021 358.0058 l
228.5559 357.9985 l
228.4455 359.4379 l
f
0 A
0 R
0 G
300 Ar
0.5 w 10 M
244.7295 359.9028 m
279.9939 334.3475 l
S
1 A
0 O
0 g
800 Ar
1 w 4 M
245.0587 359.5457 m
244.9427 358.1128 l
244.8924 358.1147 l
243.7372 359.9344 l
243.2621 360.4683 242.7871 361.0022 242.312 361.5361 c
242.9673 361.2509 243.6225 360.9657 244.2778 360.6805 c
246.3668 360.1493 l
246.3884 360.1078 l
245.0587 359.5457 l
f
0 A
u
0 R
0 G
300 Ar
0.5 w 10 M
323.6374 361.6247 m
285.4493 334.3475 l
S
0 O
0 g
800 Ar
1 w 4 M
323.3556 361.4248 m
322.0339 361.9903 l
322.0518 362.0373 l
324.1443 362.5542 l
324.8015 362.8349 325.4587 363.1156 326.1159 363.3963 c
325.6372 362.8657 325.1585 362.3351 324.6798 361.8044 c
323.5122 359.9927 l
323.4659 359.9854 l
323.3556 361.4248 l
f
U
0 To
1 0 0 1 178.8189 416.7454 0 Tp
TP
0 Tr
300 Ar
(<Sunny, Warm, ?, Strong, ?, ?>) Tx 
(\r) TX 
TO
0 To
1 0 0 1 174.4545 416.753 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 278.6535 416.753 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
0 To
1 0 0 1 136.5157 318.5551 0 Tp
TP
0 Tr
/_Times-BoldItalic 7.6377 Tf
(G:) Tx 
(\r) TX 
TO
0 R
0 G
10 M
147.4266 313.6168 m
147.4266 329.9831 l
310.5444 329.9831 l
310.5444 313.6168 l
147.4266 313.6168 l
s
0 To
1 0 0 1 159.4286 319.3657 0 Tp
TP
0 Tr
0 O
0 g
4 M
/_Times-Italic 7.6377 Tf
(<Sunny, ?, ?, ?, ?, ?>, <?, Warm, ?, ?, ?, ?> ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 155.337 319.3734 0 Tp
TP
0 Tr
/_Times-Roman 7.6377 Tf
({) Tx 
(\r) TX 
TO
0 To
1 0 0 1 298.8152 319.3734 0 Tp
TP
0 Tr
(}) Tx 
(\r) TX 
TO
U
1 Ap
800 Ar
382.7747 311.9753 m
382.7747 427.4414 L
103.3086 427.4414 L
103.3086 311.9753 L
382.7747 311.9753 L
n
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EndDocument

 endTexFig
 137 1597 a Fj(h)p Ff(S)5 b(unny)32 b(W)12 b(ar)r(m)29
b(N)9 b(or)r(mal)31 b(S)5 b(tr)r(ong)31 b(C)6 b(ool)29
b(C)6 b(hang)s(e)p Fj(i)213 1842 y(h)p Ff(R)q(ainy)32
b(C)6 b(ool)30 b(N)9 b(or)r(mal)30 b(Lig)s(ht)e(W)12
b(ar)r(m)29 b(S)5 b(ame)p Fj(i)166 2088 y(h)p Ff(S)g(unny)31
b(W)12 b(ar)r(m)30 b(N)9 b(or)r(mal)31 b(Lig)s(ht)c(W)12
b(ar)r(m)30 b(S)5 b(ame)p Fj(i)0 2748 y Fi(39)357 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p
Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 40 18
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
40 18 bop 25 160 a Fl(What)36 b(Justi\014es)i(this)f(Inductiv)m(e)h
(Leap?)1922 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1922 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 23 628 a Fk(+)57 b Fj(h)p Ff(S)5 b(unny)32 b(W)12
b(ar)r(m)29 b(N)9 b(or)r(mal)31 b(S)5 b(tr)r(ong)32 b(C)6
b(ool)29 b(C)6 b(hang)s(e)p Fj(i)52 781 y Fk(+)57 b Fj(h)p
Ff(S)5 b(unny)32 b(W)12 b(ar)r(m)29 b(N)9 b(or)r(mal)31
b(Lig)s(ht)d(W)12 b(ar)r(m)29 b(S)5 b(ame)p Fj(i)p 0
912 2100 3 v 303 1030 a Ff(S)29 b Fk(:)81 b Fj(h)p Ff(S)5
b(unny)32 b(W)12 b(ar)r(m)29 b(N)9 b(or)r(mal)31 b Fk(?)d(?)h(?)p
Fj(i)0 1234 y Fk(Wh)n(y)g(b)r(eliev)n(e)j(w)n(e)c(can)h(classify)j(the)
d(unseen)86 1387 y Fj(h)p Ff(S)5 b(unny)32 b(W)12 b(ar)r(m)30
b(N)9 b(or)r(mal)30 b(S)5 b(tr)r(ong)32 b(W)12 b(ar)r(m)29
b(S)5 b(ame)p Fj(i)0 2748 y Fi(40)357 b(lecture)17 b(slides)f(for)f
(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o
(hell,)h(McGra)o(w)e(Hill,)j(1997)p eop
% %%Page: 41 19
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
41 19 bop 25 170 a Fl(An)39 b(UNBiased)j(Learner)1228
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1228 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 104 592
a Fk(Idea:)c(Cho)r(ose)30 b Ff(H)35 b Fk(that)29 b(expresses)h(ev)n
(ery)f(teac)n(hable)104 696 y(concept)g(\(i.e.,)i Ff(H)k
Fk(is)29 b(the)h(p)r(o)n(w)n(er)e(set)h(of)g Ff(X)7 b
Fk(\))104 841 y(Consider)29 b Ff(H)542 810 y Fa(0)584
841 y Fk(=)g(disjunctions,)i(conjunctions,)104 945 y(negations)f(o)n(v)
n(er)e(previous)i Ff(H)7 b Fk(.)38 b(E.g.,)104 1099 y
Fj(h)p Ff(S)5 b(unny)22 b(W)12 b(ar)r(m)20 b(N)9 b(or)r(mal)21
b Fk(?)e(?)g(?)p Fj(i)g(_)g(:h)p Fk(?)h(?)f(?)g(?)f(?)h
Ff(C)6 b(hang)s(e)p Fj(i)0 1273 y Fk(What)30 b(are)e
Ff(S)5 b Fk(,)29 b Ff(G)f Fk(in)h(this)h(case?)104 1418
y(S)e Fj( )104 1564 y Fk(G)g Fj( )0 2748 y Fi(41)357
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fh(Machine)h(L)n(e)n
(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
% %%Page: 42 20
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
42 20 bop 25 170 a Fl(Inductiv)m(e)40 b(Bias)815 170
y
0.8666 0.03137 0.02352 setrgbcolor
 815 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fk(Consider)40
683 y Fj(\017)21 b Fk(concept)29 b(learning)i(algorithm)e
Ff(L)40 829 y Fj(\017)21 b Fk(instances)30 b Ff(X)7 b
Fk(,)29 b(target)g(concept)h Ff(c)40 974 y Fj(\017)21
b Fk(training)30 b(examples)f Ff(D)871 987 y Fb(c)924
974 y Fk(=)23 b Fj(fh)p Ff(x;)15 b(c)p Fk(\()p Ff(x)p
Fk(\))p Fj(ig)40 1119 y(\017)21 b Fk(let)30 b Ff(L)p
Fk(\()p Ff(x)369 1132 y Fb(i)392 1119 y Ff(;)14 b(D)501
1132 y Fb(c)530 1119 y Fk(\))29 b(denote)g(the)g(classi\014cati)q(on)j
(assigned)d(to)104 1223 y(the)g(instance)h Ff(x)636 1236
y Fb(i)688 1223 y Fk(b)n(y)e Ff(L)h Fk(after)g(training)i(on)d(data)h
Ff(D)1810 1236 y Fb(c)1839 1223 y Fk(.)0 1428 y Fe(De\014nition)p
Fk(:)104 1574 y(The)g Fe(inductiv)m(e)35 b(bias)30 b
Fk(of)f Ff(L)f Fk(is)h(an)n(y)g(minimal)g(set)104 1677
y(of)g(assertions)h Ff(B)j Fk(suc)n(h)28 b(that)i(for)f(an)n(y)f
(target)104 1781 y(concept)h Ff(c)g Fk(and)g(corresp)r(onding)g
(training)104 1885 y(examples)g Ff(D)546 1898 y Fb(c)297
2097 y Fk(\()p Fj(8)p Ff(x)428 2110 y Fb(i)474 2097 y
Fj(2)c Ff(X)7 b Fk(\)[\()p Ff(B)24 b Fj(^)c Ff(D)961
2110 y Fb(c)1008 2097 y Fj(^)g Ff(x)1134 2110 y Fb(i)1157
2097 y Fk(\))k Fj(`)g Ff(L)p Fk(\()p Ff(x)1432 2110 y
Fb(i)1455 2097 y Ff(;)14 b(D)1564 2110 y Fb(c)1592 2097
y Fk(\)])0 2250 y(where)29 b Ff(A)23 b Fj(`)h Ff(B)33
b Fk(means)28 b Ff(A)g Fk(logicall)q(y)k(en)n(tails)f
Ff(B)0 2748 y Fi(42)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 43 21
grestore sheetsave restore
showsheet
%%Page: 6 6
0 setlinewidth
 20  20 moveto
 20 772 lineto
592 772 lineto
592  20 lineto
closepath stroke
 20 396 moveto
592 396 lineto
stroke
306  20 moveto
306 772 lineto
stroke
/sheetsave save def
gsave
24 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
43 21 bop 25 155 a Fl(Inductiv)m(e)83 b(Systems)f(and)g(Equiv)-7
b(alen)m(t)25 279 y(Deductiv)m(e)41 b(Systems)1049 279
y
0.8666 0.03137 0.02352 setrgbcolor
 1049 279 a 0 434 1947 2 v 0 587 a
0 0 0 setrgbcolor
 0 587 a 148 591 a
 26523234 26523234 8156938 20326563 27957248 40192655 startTexFig

148 591 a
%%BeginDocument: ./bookps/figure-vs-bias-new.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 308.5 726.501 ] concat
%I
[
(Candidate)
(Elimination)
(Algorithm)
()
(Using Hypothesis)
( Space )
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1.02222 157 258.555 ] concat
%I
131 381 260 470 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 207 ] concat
%I
260 490 370 490 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 500 131 500 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 207 ] concat
%I
51 461 131 461 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 721 ] concat
%I
[
(Training examples)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 681 ] concat
%I
[
(New instance)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1.33333 158 -49.667 ] concat
%I
131 381 260 470 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 158 47 ] concat
%I
260 490 370 490 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 47 ] concat
%I
51 500 131 500 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 47 ] concat
%I
51 461 131 461 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 280.5 597 ] concat
%I
[
(Equivalent deductive system)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.56471 0 0 1 82.6171 7 ] concat
%I
51 461 131 461 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 309 532 ] concat
%I
[
(Theorem Prover)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 562 ] concat
%I
[
(Training examples)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 522 ] concat
%I
[
(New instance)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 179 418 ] concat
%I
[
(Inductive bias)
( made explicit)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.657143 0 0 1 128.946 177 ] concat
%I
119 251 149 281 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 431.001 738.972 ] concat
%I
[
(Classification of )
(new instance, or)
("don't know")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 427.006 579.034 ] concat
%I
[
(Classification of )
(new instance, or)
("don't know")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 309 757.016 ] concat
%I
[
(Inductive system)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 346.5 666.501 ] concat
%I
[
(H)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 159 495.999 ] concat
%I
[
(Assertion "    contains)
( the target concept")
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-120-*
/Times-Italic 12 SetF
%I t
[ 1 0 0 1 214.5 495.999 ] concat
%I
[
(H)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fi(43)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 44 22
grestore sheetsave restore
/sheetsave save def
gsave
24 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
44 22 bop 25 155 a Fl(Three)32 b(Learners)h(with)g(Di\013eren)m(t)h
(Biases)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 567 a
0 0 0 setrgbcolor
 0 567
a 16 685 a Fk(1.)21 b Fd(R)l(ote)29 b(le)l(arner:)39
b Fk(Store)29 b(examples,)g(Classify)i Ff(x)e Fk(i\013)h(it)104
788 y(matc)n(hes)e(previously)j(observ)n(ed)d(example.)16
934 y(2.)21 b Fd(V)-7 b(ersion)32 b(sp)l(ac)l(e)d(c)l(andidate)h
(elimination)j(algorithm)16 1079 y Fk(3.)21 b Fd(Find-S)0
2748 y Fi(44)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Page: 45 23
grestore sheetsave restore
/sheetsave save def
gsave
310 400 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
45 23 bop 25 160 a Fl(Summary)39 b(P)m(oin)m(ts)929 160
y
0.8666 0.03137 0.02352 setrgbcolor
 929 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 16 592 a Fk(1.)21
b(Concept)29 b(learning)i(as)d(searc)n(h)h(through)f
Ff(H)16 737 y Fk(2.)21 b(General-to-sp)r(eci\014c)31
b(ordering)e(o)n(v)n(er)f Ff(H)16 883 y Fk(3.)21 b(V)-7
b(ersion)29 b(space)g(candidate)h(elimination)h(algorithm)16
1028 y(4.)21 b Ff(S)33 b Fk(and)c Ff(G)f Fk(b)r(oundaries)h(c)n
(haracterize)i(learner's)104 1132 y(uncertain)n(t)n(y)16
1277 y(5.)21 b(Learner)28 b(can)h(generate)h(useful)f(queries)16
1422 y(6.)21 b(Inductiv)n(e)30 b(leaps)g(p)r(ossible)h(only)e(if)h
(learner)g(is)f(biased)16 1568 y(7.)21 b(Inductiv)n(e)30
b(learners)f(can)g(b)r(e)g(mo)r(delled)h(b)n(y)f(equiv)-5
b(alen)n(t)104 1671 y(deductiv)n(e)30 b(systems)0 2748
y Fi(45)357 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fh(Machine)h(L)n(e)n(arning)p Fi(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
% %%Trailer
grestore sheetsave restore
/sheetsave save def
gsave
310 24 translate 0 rotate
278 612 div 368 792 div scale
0 0 moveto 0 792 lineto 612 792 lineto 612 0 lineto
closepath clip newpath
grestore sheetsave restore
showsheet
%%Trailer
statusdict begin jobname print flush (: Job finished:\n) print
(\tmpage time (s) = ) print flush usertime mp_stm sub 1000 div ==
(\tmpage pages = ) print flush pagecount mp_pgc sub ==
end flush
%%Pages: 6
